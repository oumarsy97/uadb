
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model ConventionInteruniversitaire
 * 
 */
export type ConventionInteruniversitaire = $Result.DefaultSelection<Prisma.$ConventionInteruniversitairePayload>
/**
 * Model StatistiqueInteruniversitaire
 * 
 */
export type StatistiqueInteruniversitaire = $Result.DefaultSelection<Prisma.$StatistiqueInteruniversitairePayload>
/**
 * Model Reservation
 * 
 */
export type Reservation = $Result.DefaultSelection<Prisma.$ReservationPayload>
/**
 * Model ExemplairePhysique
 * 
 */
export type ExemplairePhysique = $Result.DefaultSelection<Prisma.$ExemplairePhysiquePayload>
/**
 * Model Emprunt
 * 
 */
export type Emprunt = $Result.DefaultSelection<Prisma.$EmpruntPayload>
/**
 * Model Recommandation
 * 
 */
export type Recommandation = $Result.DefaultSelection<Prisma.$RecommandationPayload>
/**
 * Model Universite
 * 
 */
export type Universite = $Result.DefaultSelection<Prisma.$UniversitePayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Favori
 * 
 */
export type Favori = $Result.DefaultSelection<Prisma.$FavoriPayload>
/**
 * Model Commentaire
 * 
 */
export type Commentaire = $Result.DefaultSelection<Prisma.$CommentairePayload>
/**
 * Model Notation
 * 
 */
export type Notation = $Result.DefaultSelection<Prisma.$NotationPayload>
/**
 * Model HistoriqueAcces
 * 
 */
export type HistoriqueAcces = $Result.DefaultSelection<Prisma.$HistoriqueAccesPayload>
/**
 * Model DonneesRecommandation
 * 
 */
export type DonneesRecommandation = $Result.DefaultSelection<Prisma.$DonneesRecommandationPayload>
/**
 * Model Collection
 * 
 */
export type Collection = $Result.DefaultSelection<Prisma.$CollectionPayload>
/**
 * Model CollectionRessource
 * 
 */
export type CollectionRessource = $Result.DefaultSelection<Prisma.$CollectionRessourcePayload>
/**
 * Model PartageUniversite
 * 
 */
export type PartageUniversite = $Result.DefaultSelection<Prisma.$PartageUniversitePayload>
/**
 * Model TransactionBlockchain
 * 
 */
export type TransactionBlockchain = $Result.DefaultSelection<Prisma.$TransactionBlockchainPayload>
/**
 * Model Ressource
 * 
 */
export type Ressource = $Result.DefaultSelection<Prisma.$RessourcePayload>
/**
 * Model StatistiqueBibliotheque
 * 
 */
export type StatistiqueBibliotheque = $Result.DefaultSelection<Prisma.$StatistiqueBibliothequePayload>
/**
 * Model Notification
 * 
 */
export type Notification = $Result.DefaultSelection<Prisma.$NotificationPayload>
/**
 * Model JournalAudit
 * 
 */
export type JournalAudit = $Result.DefaultSelection<Prisma.$JournalAuditPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const TypeConvention: {
  EMPRUNT_RECIPROQUE: 'EMPRUNT_RECIPROQUE',
  CONSULTATION_UNIQUEMENT: 'CONSULTATION_UNIQUEMENT',
  ACCES_COMPLET: 'ACCES_COMPLET',
  COLLABORATION_SPECIFIQUE: 'COLLABORATION_SPECIFIQUE'
};

export type TypeConvention = (typeof TypeConvention)[keyof typeof TypeConvention]


export const StatutReservation: {
  EN_ATTENTE: 'EN_ATTENTE',
  CONFIRMEE: 'CONFIRMEE',
  ANNULEE: 'ANNULEE',
  TERMINEE: 'TERMINEE',
  RETARD: 'RETARD'
};

export type StatutReservation = (typeof StatutReservation)[keyof typeof StatutReservation]


export const EtatExemplaire: {
  NEUF: 'NEUF',
  BON: 'BON',
  USAGE: 'USAGE',
  ABIME: 'ABIME',
  PERDU: 'PERDU'
};

export type EtatExemplaire = (typeof EtatExemplaire)[keyof typeof EtatExemplaire]


export const StatutEmprunt: {
  EN_COURS: 'EN_COURS',
  RETOURNE: 'RETOURNE',
  RETARD: 'RETARD',
  PERDU: 'PERDU'
};

export type StatutEmprunt = (typeof StatutEmprunt)[keyof typeof StatutEmprunt]


export const MotifRecommandation: {
  INTERET_SIMILAIRE: 'INTERET_SIMILAIRE',
  CONSULTE_RECEMMENT: 'CONSULTE_RECEMMENT',
  POPULAIRE_DOMAINE: 'POPULAIRE_DOMAINE',
  NOUVEAU_CONTENU: 'NOUVEAU_CONTENU',
  SUGGESTION_ENSEIGNANT: 'SUGGESTION_ENSEIGNANT'
};

export type MotifRecommandation = (typeof MotifRecommandation)[keyof typeof MotifRecommandation]


export const RoleUser: {
  ETUDIANT: 'ETUDIANT',
  ENSEIGNANT: 'ENSEIGNANT',
  CHERCHEUR: 'CHERCHEUR',
  BIBLIOTHECAIRE: 'BIBLIOTHECAIRE',
  ADMIN: 'ADMIN'
};

export type RoleUser = (typeof RoleUser)[keyof typeof RoleUser]


export const FrequenceRecommandation: {
  QUOTIDIENNE: 'QUOTIDIENNE',
  HEBDOMADAIRE: 'HEBDOMADAIRE',
  MENSUELLE: 'MENSUELLE',
  JAMAIS: 'JAMAIS'
};

export type FrequenceRecommandation = (typeof FrequenceRecommandation)[keyof typeof FrequenceRecommandation]


export const TypeAcces: {
  CONSULTATION: 'CONSULTATION',
  TELECHARGEMENT: 'TELECHARGEMENT',
  CITATION: 'CITATION',
  PARTAGE: 'PARTAGE'
};

export type TypeAcces = (typeof TypeAcces)[keyof typeof TypeAcces]


export const TypeInteraction: {
  VUE: 'VUE',
  TELECHARGEMENT: 'TELECHARGEMENT',
  FAVORI: 'FAVORI',
  NOTATION: 'NOTATION',
  TEMPS_LECTURE: 'TEMPS_LECTURE',
  RECHERCHE_SIMILAIRE: 'RECHERCHE_SIMILAIRE'
};

export type TypeInteraction = (typeof TypeInteraction)[keyof typeof TypeInteraction]


export const TypeTransaction: {
  PUBLICATION: 'PUBLICATION',
  MODIFICATION: 'MODIFICATION',
  ACCES: 'ACCES',
  SUPPRESSION: 'SUPPRESSION',
  PARTAGE: 'PARTAGE'
};

export type TypeTransaction = (typeof TypeTransaction)[keyof typeof TypeTransaction]


export const StatutTransaction: {
  INITIEE: 'INITIEE',
  VALIDEE: 'VALIDEE',
  REJETEE: 'REJETEE',
  ANNULEE: 'ANNULEE'
};

export type StatutTransaction = (typeof StatutTransaction)[keyof typeof StatutTransaction]


export const TypeRessource: {
  MEMOIRE: 'MEMOIRE',
  THESE: 'THESE',
  ARTICLE_SCIENTIFIQUE: 'ARTICLE_SCIENTIFIQUE',
  COURS: 'COURS',
  SUPPORT_PEDAGOGIQUE: 'SUPPORT_PEDAGOGIQUE',
  RAPPORT_RECHERCHE: 'RAPPORT_RECHERCHE',
  LIVRE: 'LIVRE',
  CONFERENCE: 'CONFERENCE'
};

export type TypeRessource = (typeof TypeRessource)[keyof typeof TypeRessource]


export const NiveauAcces: {
  PUBLIC: 'PUBLIC',
  AUTHENTIFIE: 'AUTHENTIFIE',
  UNIVERSITE_ORIGINE: 'UNIVERSITE_ORIGINE',
  PRIVE: 'PRIVE'
};

export type NiveauAcces = (typeof NiveauAcces)[keyof typeof NiveauAcces]


export const CategorieBiblio: {
  LIVRE_ACADEMIQUE: 'LIVRE_ACADEMIQUE',
  MANUEL_SCOLAIRE: 'MANUEL_SCOLAIRE',
  THESE_DOCTORAT: 'THESE_DOCTORAT',
  MEMOIRE_MASTER: 'MEMOIRE_MASTER',
  RAPPORT_RECHERCHE: 'RAPPORT_RECHERCHE',
  PERIODIQUE: 'PERIODIQUE',
  ARTICLE_JOURNAL: 'ARTICLE_JOURNAL',
  RESSOURCE_MULTIMEDIA: 'RESSOURCE_MULTIMEDIA',
  DOCUMENT_TECHNIQUE: 'DOCUMENT_TECHNIQUE'
};

export type CategorieBiblio = (typeof CategorieBiblio)[keyof typeof CategorieBiblio]


export const TypeNotification: {
  EMPRUNT: 'EMPRUNT',
  RAPPEL_RETOUR: 'RAPPEL_RETOUR',
  RESERVATION_CONFIRMEE: 'RESERVATION_CONFIRMEE',
  NOUVELLE_RESSOURCE: 'NOUVELLE_RESSOURCE',
  RECOMMANDATION: 'RECOMMANDATION',
  PARTAGE: 'PARTAGE',
  CONVENTION: 'CONVENTION',
  ADMINISTRATIF: 'ADMINISTRATIF'
};

export type TypeNotification = (typeof TypeNotification)[keyof typeof TypeNotification]

}

export type TypeConvention = $Enums.TypeConvention

export const TypeConvention: typeof $Enums.TypeConvention

export type StatutReservation = $Enums.StatutReservation

export const StatutReservation: typeof $Enums.StatutReservation

export type EtatExemplaire = $Enums.EtatExemplaire

export const EtatExemplaire: typeof $Enums.EtatExemplaire

export type StatutEmprunt = $Enums.StatutEmprunt

export const StatutEmprunt: typeof $Enums.StatutEmprunt

export type MotifRecommandation = $Enums.MotifRecommandation

export const MotifRecommandation: typeof $Enums.MotifRecommandation

export type RoleUser = $Enums.RoleUser

export const RoleUser: typeof $Enums.RoleUser

export type FrequenceRecommandation = $Enums.FrequenceRecommandation

export const FrequenceRecommandation: typeof $Enums.FrequenceRecommandation

export type TypeAcces = $Enums.TypeAcces

export const TypeAcces: typeof $Enums.TypeAcces

export type TypeInteraction = $Enums.TypeInteraction

export const TypeInteraction: typeof $Enums.TypeInteraction

export type TypeTransaction = $Enums.TypeTransaction

export const TypeTransaction: typeof $Enums.TypeTransaction

export type StatutTransaction = $Enums.StatutTransaction

export const StatutTransaction: typeof $Enums.StatutTransaction

export type TypeRessource = $Enums.TypeRessource

export const TypeRessource: typeof $Enums.TypeRessource

export type NiveauAcces = $Enums.NiveauAcces

export const NiveauAcces: typeof $Enums.NiveauAcces

export type CategorieBiblio = $Enums.CategorieBiblio

export const CategorieBiblio: typeof $Enums.CategorieBiblio

export type TypeNotification = $Enums.TypeNotification

export const TypeNotification: typeof $Enums.TypeNotification

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more ConventionInteruniversitaires
 * const conventionInteruniversitaires = await prisma.conventionInteruniversitaire.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more ConventionInteruniversitaires
   * const conventionInteruniversitaires = await prisma.conventionInteruniversitaire.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.conventionInteruniversitaire`: Exposes CRUD operations for the **ConventionInteruniversitaire** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ConventionInteruniversitaires
    * const conventionInteruniversitaires = await prisma.conventionInteruniversitaire.findMany()
    * ```
    */
  get conventionInteruniversitaire(): Prisma.ConventionInteruniversitaireDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.statistiqueInteruniversitaire`: Exposes CRUD operations for the **StatistiqueInteruniversitaire** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StatistiqueInteruniversitaires
    * const statistiqueInteruniversitaires = await prisma.statistiqueInteruniversitaire.findMany()
    * ```
    */
  get statistiqueInteruniversitaire(): Prisma.StatistiqueInteruniversitaireDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reservation`: Exposes CRUD operations for the **Reservation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reservations
    * const reservations = await prisma.reservation.findMany()
    * ```
    */
  get reservation(): Prisma.ReservationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.exemplairePhysique`: Exposes CRUD operations for the **ExemplairePhysique** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ExemplairePhysiques
    * const exemplairePhysiques = await prisma.exemplairePhysique.findMany()
    * ```
    */
  get exemplairePhysique(): Prisma.ExemplairePhysiqueDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.emprunt`: Exposes CRUD operations for the **Emprunt** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Emprunts
    * const emprunts = await prisma.emprunt.findMany()
    * ```
    */
  get emprunt(): Prisma.EmpruntDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.recommandation`: Exposes CRUD operations for the **Recommandation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Recommandations
    * const recommandations = await prisma.recommandation.findMany()
    * ```
    */
  get recommandation(): Prisma.RecommandationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.universite`: Exposes CRUD operations for the **Universite** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Universites
    * const universites = await prisma.universite.findMany()
    * ```
    */
  get universite(): Prisma.UniversiteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.favori`: Exposes CRUD operations for the **Favori** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Favoris
    * const favoris = await prisma.favori.findMany()
    * ```
    */
  get favori(): Prisma.FavoriDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.commentaire`: Exposes CRUD operations for the **Commentaire** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Commentaires
    * const commentaires = await prisma.commentaire.findMany()
    * ```
    */
  get commentaire(): Prisma.CommentaireDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notation`: Exposes CRUD operations for the **Notation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notations
    * const notations = await prisma.notation.findMany()
    * ```
    */
  get notation(): Prisma.NotationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.historiqueAcces`: Exposes CRUD operations for the **HistoriqueAcces** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HistoriqueAcces
    * const historiqueAcces = await prisma.historiqueAcces.findMany()
    * ```
    */
  get historiqueAcces(): Prisma.HistoriqueAccesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.donneesRecommandation`: Exposes CRUD operations for the **DonneesRecommandation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DonneesRecommandations
    * const donneesRecommandations = await prisma.donneesRecommandation.findMany()
    * ```
    */
  get donneesRecommandation(): Prisma.DonneesRecommandationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.collection`: Exposes CRUD operations for the **Collection** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Collections
    * const collections = await prisma.collection.findMany()
    * ```
    */
  get collection(): Prisma.CollectionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.collectionRessource`: Exposes CRUD operations for the **CollectionRessource** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CollectionRessources
    * const collectionRessources = await prisma.collectionRessource.findMany()
    * ```
    */
  get collectionRessource(): Prisma.CollectionRessourceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.partageUniversite`: Exposes CRUD operations for the **PartageUniversite** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PartageUniversites
    * const partageUniversites = await prisma.partageUniversite.findMany()
    * ```
    */
  get partageUniversite(): Prisma.PartageUniversiteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transactionBlockchain`: Exposes CRUD operations for the **TransactionBlockchain** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TransactionBlockchains
    * const transactionBlockchains = await prisma.transactionBlockchain.findMany()
    * ```
    */
  get transactionBlockchain(): Prisma.TransactionBlockchainDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ressource`: Exposes CRUD operations for the **Ressource** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ressources
    * const ressources = await prisma.ressource.findMany()
    * ```
    */
  get ressource(): Prisma.RessourceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.statistiqueBibliotheque`: Exposes CRUD operations for the **StatistiqueBibliotheque** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StatistiqueBibliotheques
    * const statistiqueBibliotheques = await prisma.statistiqueBibliotheque.findMany()
    * ```
    */
  get statistiqueBibliotheque(): Prisma.StatistiqueBibliothequeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **Notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.NotificationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.journalAudit`: Exposes CRUD operations for the **JournalAudit** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more JournalAudits
    * const journalAudits = await prisma.journalAudit.findMany()
    * ```
    */
  get journalAudit(): Prisma.JournalAuditDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    ConventionInteruniversitaire: 'ConventionInteruniversitaire',
    StatistiqueInteruniversitaire: 'StatistiqueInteruniversitaire',
    Reservation: 'Reservation',
    ExemplairePhysique: 'ExemplairePhysique',
    Emprunt: 'Emprunt',
    Recommandation: 'Recommandation',
    Universite: 'Universite',
    User: 'User',
    Favori: 'Favori',
    Commentaire: 'Commentaire',
    Notation: 'Notation',
    HistoriqueAcces: 'HistoriqueAcces',
    DonneesRecommandation: 'DonneesRecommandation',
    Collection: 'Collection',
    CollectionRessource: 'CollectionRessource',
    PartageUniversite: 'PartageUniversite',
    TransactionBlockchain: 'TransactionBlockchain',
    Ressource: 'Ressource',
    StatistiqueBibliotheque: 'StatistiqueBibliotheque',
    Notification: 'Notification',
    JournalAudit: 'JournalAudit'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "conventionInteruniversitaire" | "statistiqueInteruniversitaire" | "reservation" | "exemplairePhysique" | "emprunt" | "recommandation" | "universite" | "user" | "favori" | "commentaire" | "notation" | "historiqueAcces" | "donneesRecommandation" | "collection" | "collectionRessource" | "partageUniversite" | "transactionBlockchain" | "ressource" | "statistiqueBibliotheque" | "notification" | "journalAudit"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      ConventionInteruniversitaire: {
        payload: Prisma.$ConventionInteruniversitairePayload<ExtArgs>
        fields: Prisma.ConventionInteruniversitaireFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ConventionInteruniversitaireFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConventionInteruniversitairePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ConventionInteruniversitaireFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConventionInteruniversitairePayload>
          }
          findFirst: {
            args: Prisma.ConventionInteruniversitaireFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConventionInteruniversitairePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ConventionInteruniversitaireFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConventionInteruniversitairePayload>
          }
          findMany: {
            args: Prisma.ConventionInteruniversitaireFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConventionInteruniversitairePayload>[]
          }
          create: {
            args: Prisma.ConventionInteruniversitaireCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConventionInteruniversitairePayload>
          }
          createMany: {
            args: Prisma.ConventionInteruniversitaireCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ConventionInteruniversitaireDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConventionInteruniversitairePayload>
          }
          update: {
            args: Prisma.ConventionInteruniversitaireUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConventionInteruniversitairePayload>
          }
          deleteMany: {
            args: Prisma.ConventionInteruniversitaireDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ConventionInteruniversitaireUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ConventionInteruniversitaireUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConventionInteruniversitairePayload>
          }
          aggregate: {
            args: Prisma.ConventionInteruniversitaireAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConventionInteruniversitaire>
          }
          groupBy: {
            args: Prisma.ConventionInteruniversitaireGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConventionInteruniversitaireGroupByOutputType>[]
          }
          count: {
            args: Prisma.ConventionInteruniversitaireCountArgs<ExtArgs>
            result: $Utils.Optional<ConventionInteruniversitaireCountAggregateOutputType> | number
          }
        }
      }
      StatistiqueInteruniversitaire: {
        payload: Prisma.$StatistiqueInteruniversitairePayload<ExtArgs>
        fields: Prisma.StatistiqueInteruniversitaireFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StatistiqueInteruniversitaireFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatistiqueInteruniversitairePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StatistiqueInteruniversitaireFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatistiqueInteruniversitairePayload>
          }
          findFirst: {
            args: Prisma.StatistiqueInteruniversitaireFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatistiqueInteruniversitairePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StatistiqueInteruniversitaireFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatistiqueInteruniversitairePayload>
          }
          findMany: {
            args: Prisma.StatistiqueInteruniversitaireFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatistiqueInteruniversitairePayload>[]
          }
          create: {
            args: Prisma.StatistiqueInteruniversitaireCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatistiqueInteruniversitairePayload>
          }
          createMany: {
            args: Prisma.StatistiqueInteruniversitaireCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.StatistiqueInteruniversitaireDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatistiqueInteruniversitairePayload>
          }
          update: {
            args: Prisma.StatistiqueInteruniversitaireUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatistiqueInteruniversitairePayload>
          }
          deleteMany: {
            args: Prisma.StatistiqueInteruniversitaireDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StatistiqueInteruniversitaireUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.StatistiqueInteruniversitaireUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatistiqueInteruniversitairePayload>
          }
          aggregate: {
            args: Prisma.StatistiqueInteruniversitaireAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStatistiqueInteruniversitaire>
          }
          groupBy: {
            args: Prisma.StatistiqueInteruniversitaireGroupByArgs<ExtArgs>
            result: $Utils.Optional<StatistiqueInteruniversitaireGroupByOutputType>[]
          }
          count: {
            args: Prisma.StatistiqueInteruniversitaireCountArgs<ExtArgs>
            result: $Utils.Optional<StatistiqueInteruniversitaireCountAggregateOutputType> | number
          }
        }
      }
      Reservation: {
        payload: Prisma.$ReservationPayload<ExtArgs>
        fields: Prisma.ReservationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          findFirst: {
            args: Prisma.ReservationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          findMany: {
            args: Prisma.ReservationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>[]
          }
          create: {
            args: Prisma.ReservationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          createMany: {
            args: Prisma.ReservationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ReservationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          update: {
            args: Prisma.ReservationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          deleteMany: {
            args: Prisma.ReservationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReservationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReservationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          aggregate: {
            args: Prisma.ReservationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReservation>
          }
          groupBy: {
            args: Prisma.ReservationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservationCountArgs<ExtArgs>
            result: $Utils.Optional<ReservationCountAggregateOutputType> | number
          }
        }
      }
      ExemplairePhysique: {
        payload: Prisma.$ExemplairePhysiquePayload<ExtArgs>
        fields: Prisma.ExemplairePhysiqueFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ExemplairePhysiqueFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExemplairePhysiquePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ExemplairePhysiqueFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExemplairePhysiquePayload>
          }
          findFirst: {
            args: Prisma.ExemplairePhysiqueFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExemplairePhysiquePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ExemplairePhysiqueFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExemplairePhysiquePayload>
          }
          findMany: {
            args: Prisma.ExemplairePhysiqueFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExemplairePhysiquePayload>[]
          }
          create: {
            args: Prisma.ExemplairePhysiqueCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExemplairePhysiquePayload>
          }
          createMany: {
            args: Prisma.ExemplairePhysiqueCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ExemplairePhysiqueDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExemplairePhysiquePayload>
          }
          update: {
            args: Prisma.ExemplairePhysiqueUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExemplairePhysiquePayload>
          }
          deleteMany: {
            args: Prisma.ExemplairePhysiqueDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ExemplairePhysiqueUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ExemplairePhysiqueUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExemplairePhysiquePayload>
          }
          aggregate: {
            args: Prisma.ExemplairePhysiqueAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateExemplairePhysique>
          }
          groupBy: {
            args: Prisma.ExemplairePhysiqueGroupByArgs<ExtArgs>
            result: $Utils.Optional<ExemplairePhysiqueGroupByOutputType>[]
          }
          count: {
            args: Prisma.ExemplairePhysiqueCountArgs<ExtArgs>
            result: $Utils.Optional<ExemplairePhysiqueCountAggregateOutputType> | number
          }
        }
      }
      Emprunt: {
        payload: Prisma.$EmpruntPayload<ExtArgs>
        fields: Prisma.EmpruntFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EmpruntFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpruntPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EmpruntFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpruntPayload>
          }
          findFirst: {
            args: Prisma.EmpruntFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpruntPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EmpruntFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpruntPayload>
          }
          findMany: {
            args: Prisma.EmpruntFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpruntPayload>[]
          }
          create: {
            args: Prisma.EmpruntCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpruntPayload>
          }
          createMany: {
            args: Prisma.EmpruntCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EmpruntDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpruntPayload>
          }
          update: {
            args: Prisma.EmpruntUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpruntPayload>
          }
          deleteMany: {
            args: Prisma.EmpruntDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EmpruntUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EmpruntUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpruntPayload>
          }
          aggregate: {
            args: Prisma.EmpruntAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmprunt>
          }
          groupBy: {
            args: Prisma.EmpruntGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmpruntGroupByOutputType>[]
          }
          count: {
            args: Prisma.EmpruntCountArgs<ExtArgs>
            result: $Utils.Optional<EmpruntCountAggregateOutputType> | number
          }
        }
      }
      Recommandation: {
        payload: Prisma.$RecommandationPayload<ExtArgs>
        fields: Prisma.RecommandationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RecommandationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecommandationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RecommandationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecommandationPayload>
          }
          findFirst: {
            args: Prisma.RecommandationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecommandationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RecommandationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecommandationPayload>
          }
          findMany: {
            args: Prisma.RecommandationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecommandationPayload>[]
          }
          create: {
            args: Prisma.RecommandationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecommandationPayload>
          }
          createMany: {
            args: Prisma.RecommandationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RecommandationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecommandationPayload>
          }
          update: {
            args: Prisma.RecommandationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecommandationPayload>
          }
          deleteMany: {
            args: Prisma.RecommandationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RecommandationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RecommandationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecommandationPayload>
          }
          aggregate: {
            args: Prisma.RecommandationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRecommandation>
          }
          groupBy: {
            args: Prisma.RecommandationGroupByArgs<ExtArgs>
            result: $Utils.Optional<RecommandationGroupByOutputType>[]
          }
          count: {
            args: Prisma.RecommandationCountArgs<ExtArgs>
            result: $Utils.Optional<RecommandationCountAggregateOutputType> | number
          }
        }
      }
      Universite: {
        payload: Prisma.$UniversitePayload<ExtArgs>
        fields: Prisma.UniversiteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UniversiteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UniversiteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitePayload>
          }
          findFirst: {
            args: Prisma.UniversiteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UniversiteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitePayload>
          }
          findMany: {
            args: Prisma.UniversiteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitePayload>[]
          }
          create: {
            args: Prisma.UniversiteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitePayload>
          }
          createMany: {
            args: Prisma.UniversiteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UniversiteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitePayload>
          }
          update: {
            args: Prisma.UniversiteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitePayload>
          }
          deleteMany: {
            args: Prisma.UniversiteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UniversiteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UniversiteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitePayload>
          }
          aggregate: {
            args: Prisma.UniversiteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUniversite>
          }
          groupBy: {
            args: Prisma.UniversiteGroupByArgs<ExtArgs>
            result: $Utils.Optional<UniversiteGroupByOutputType>[]
          }
          count: {
            args: Prisma.UniversiteCountArgs<ExtArgs>
            result: $Utils.Optional<UniversiteCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Favori: {
        payload: Prisma.$FavoriPayload<ExtArgs>
        fields: Prisma.FavoriFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FavoriFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FavoriFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriPayload>
          }
          findFirst: {
            args: Prisma.FavoriFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FavoriFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriPayload>
          }
          findMany: {
            args: Prisma.FavoriFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriPayload>[]
          }
          create: {
            args: Prisma.FavoriCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriPayload>
          }
          createMany: {
            args: Prisma.FavoriCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FavoriDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriPayload>
          }
          update: {
            args: Prisma.FavoriUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriPayload>
          }
          deleteMany: {
            args: Prisma.FavoriDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FavoriUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FavoriUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriPayload>
          }
          aggregate: {
            args: Prisma.FavoriAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFavori>
          }
          groupBy: {
            args: Prisma.FavoriGroupByArgs<ExtArgs>
            result: $Utils.Optional<FavoriGroupByOutputType>[]
          }
          count: {
            args: Prisma.FavoriCountArgs<ExtArgs>
            result: $Utils.Optional<FavoriCountAggregateOutputType> | number
          }
        }
      }
      Commentaire: {
        payload: Prisma.$CommentairePayload<ExtArgs>
        fields: Prisma.CommentaireFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CommentaireFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentairePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CommentaireFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentairePayload>
          }
          findFirst: {
            args: Prisma.CommentaireFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentairePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CommentaireFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentairePayload>
          }
          findMany: {
            args: Prisma.CommentaireFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentairePayload>[]
          }
          create: {
            args: Prisma.CommentaireCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentairePayload>
          }
          createMany: {
            args: Prisma.CommentaireCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CommentaireDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentairePayload>
          }
          update: {
            args: Prisma.CommentaireUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentairePayload>
          }
          deleteMany: {
            args: Prisma.CommentaireDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CommentaireUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CommentaireUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentairePayload>
          }
          aggregate: {
            args: Prisma.CommentaireAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommentaire>
          }
          groupBy: {
            args: Prisma.CommentaireGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommentaireGroupByOutputType>[]
          }
          count: {
            args: Prisma.CommentaireCountArgs<ExtArgs>
            result: $Utils.Optional<CommentaireCountAggregateOutputType> | number
          }
        }
      }
      Notation: {
        payload: Prisma.$NotationPayload<ExtArgs>
        fields: Prisma.NotationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotationPayload>
          }
          findFirst: {
            args: Prisma.NotationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotationPayload>
          }
          findMany: {
            args: Prisma.NotationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotationPayload>[]
          }
          create: {
            args: Prisma.NotationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotationPayload>
          }
          createMany: {
            args: Prisma.NotationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.NotationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotationPayload>
          }
          update: {
            args: Prisma.NotationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotationPayload>
          }
          deleteMany: {
            args: Prisma.NotationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NotationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotationPayload>
          }
          aggregate: {
            args: Prisma.NotationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotation>
          }
          groupBy: {
            args: Prisma.NotationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotationGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotationCountArgs<ExtArgs>
            result: $Utils.Optional<NotationCountAggregateOutputType> | number
          }
        }
      }
      HistoriqueAcces: {
        payload: Prisma.$HistoriqueAccesPayload<ExtArgs>
        fields: Prisma.HistoriqueAccesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HistoriqueAccesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistoriqueAccesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HistoriqueAccesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistoriqueAccesPayload>
          }
          findFirst: {
            args: Prisma.HistoriqueAccesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistoriqueAccesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HistoriqueAccesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistoriqueAccesPayload>
          }
          findMany: {
            args: Prisma.HistoriqueAccesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistoriqueAccesPayload>[]
          }
          create: {
            args: Prisma.HistoriqueAccesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistoriqueAccesPayload>
          }
          createMany: {
            args: Prisma.HistoriqueAccesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.HistoriqueAccesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistoriqueAccesPayload>
          }
          update: {
            args: Prisma.HistoriqueAccesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistoriqueAccesPayload>
          }
          deleteMany: {
            args: Prisma.HistoriqueAccesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HistoriqueAccesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.HistoriqueAccesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistoriqueAccesPayload>
          }
          aggregate: {
            args: Prisma.HistoriqueAccesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHistoriqueAcces>
          }
          groupBy: {
            args: Prisma.HistoriqueAccesGroupByArgs<ExtArgs>
            result: $Utils.Optional<HistoriqueAccesGroupByOutputType>[]
          }
          count: {
            args: Prisma.HistoriqueAccesCountArgs<ExtArgs>
            result: $Utils.Optional<HistoriqueAccesCountAggregateOutputType> | number
          }
        }
      }
      DonneesRecommandation: {
        payload: Prisma.$DonneesRecommandationPayload<ExtArgs>
        fields: Prisma.DonneesRecommandationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DonneesRecommandationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonneesRecommandationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DonneesRecommandationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonneesRecommandationPayload>
          }
          findFirst: {
            args: Prisma.DonneesRecommandationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonneesRecommandationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DonneesRecommandationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonneesRecommandationPayload>
          }
          findMany: {
            args: Prisma.DonneesRecommandationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonneesRecommandationPayload>[]
          }
          create: {
            args: Prisma.DonneesRecommandationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonneesRecommandationPayload>
          }
          createMany: {
            args: Prisma.DonneesRecommandationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.DonneesRecommandationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonneesRecommandationPayload>
          }
          update: {
            args: Prisma.DonneesRecommandationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonneesRecommandationPayload>
          }
          deleteMany: {
            args: Prisma.DonneesRecommandationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DonneesRecommandationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DonneesRecommandationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonneesRecommandationPayload>
          }
          aggregate: {
            args: Prisma.DonneesRecommandationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDonneesRecommandation>
          }
          groupBy: {
            args: Prisma.DonneesRecommandationGroupByArgs<ExtArgs>
            result: $Utils.Optional<DonneesRecommandationGroupByOutputType>[]
          }
          count: {
            args: Prisma.DonneesRecommandationCountArgs<ExtArgs>
            result: $Utils.Optional<DonneesRecommandationCountAggregateOutputType> | number
          }
        }
      }
      Collection: {
        payload: Prisma.$CollectionPayload<ExtArgs>
        fields: Prisma.CollectionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CollectionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CollectionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionPayload>
          }
          findFirst: {
            args: Prisma.CollectionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CollectionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionPayload>
          }
          findMany: {
            args: Prisma.CollectionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionPayload>[]
          }
          create: {
            args: Prisma.CollectionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionPayload>
          }
          createMany: {
            args: Prisma.CollectionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CollectionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionPayload>
          }
          update: {
            args: Prisma.CollectionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionPayload>
          }
          deleteMany: {
            args: Prisma.CollectionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CollectionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CollectionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionPayload>
          }
          aggregate: {
            args: Prisma.CollectionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCollection>
          }
          groupBy: {
            args: Prisma.CollectionGroupByArgs<ExtArgs>
            result: $Utils.Optional<CollectionGroupByOutputType>[]
          }
          count: {
            args: Prisma.CollectionCountArgs<ExtArgs>
            result: $Utils.Optional<CollectionCountAggregateOutputType> | number
          }
        }
      }
      CollectionRessource: {
        payload: Prisma.$CollectionRessourcePayload<ExtArgs>
        fields: Prisma.CollectionRessourceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CollectionRessourceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionRessourcePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CollectionRessourceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionRessourcePayload>
          }
          findFirst: {
            args: Prisma.CollectionRessourceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionRessourcePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CollectionRessourceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionRessourcePayload>
          }
          findMany: {
            args: Prisma.CollectionRessourceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionRessourcePayload>[]
          }
          create: {
            args: Prisma.CollectionRessourceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionRessourcePayload>
          }
          createMany: {
            args: Prisma.CollectionRessourceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CollectionRessourceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionRessourcePayload>
          }
          update: {
            args: Prisma.CollectionRessourceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionRessourcePayload>
          }
          deleteMany: {
            args: Prisma.CollectionRessourceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CollectionRessourceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CollectionRessourceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionRessourcePayload>
          }
          aggregate: {
            args: Prisma.CollectionRessourceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCollectionRessource>
          }
          groupBy: {
            args: Prisma.CollectionRessourceGroupByArgs<ExtArgs>
            result: $Utils.Optional<CollectionRessourceGroupByOutputType>[]
          }
          count: {
            args: Prisma.CollectionRessourceCountArgs<ExtArgs>
            result: $Utils.Optional<CollectionRessourceCountAggregateOutputType> | number
          }
        }
      }
      PartageUniversite: {
        payload: Prisma.$PartageUniversitePayload<ExtArgs>
        fields: Prisma.PartageUniversiteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PartageUniversiteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PartageUniversitePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PartageUniversiteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PartageUniversitePayload>
          }
          findFirst: {
            args: Prisma.PartageUniversiteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PartageUniversitePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PartageUniversiteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PartageUniversitePayload>
          }
          findMany: {
            args: Prisma.PartageUniversiteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PartageUniversitePayload>[]
          }
          create: {
            args: Prisma.PartageUniversiteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PartageUniversitePayload>
          }
          createMany: {
            args: Prisma.PartageUniversiteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PartageUniversiteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PartageUniversitePayload>
          }
          update: {
            args: Prisma.PartageUniversiteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PartageUniversitePayload>
          }
          deleteMany: {
            args: Prisma.PartageUniversiteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PartageUniversiteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PartageUniversiteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PartageUniversitePayload>
          }
          aggregate: {
            args: Prisma.PartageUniversiteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePartageUniversite>
          }
          groupBy: {
            args: Prisma.PartageUniversiteGroupByArgs<ExtArgs>
            result: $Utils.Optional<PartageUniversiteGroupByOutputType>[]
          }
          count: {
            args: Prisma.PartageUniversiteCountArgs<ExtArgs>
            result: $Utils.Optional<PartageUniversiteCountAggregateOutputType> | number
          }
        }
      }
      TransactionBlockchain: {
        payload: Prisma.$TransactionBlockchainPayload<ExtArgs>
        fields: Prisma.TransactionBlockchainFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransactionBlockchainFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionBlockchainPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransactionBlockchainFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionBlockchainPayload>
          }
          findFirst: {
            args: Prisma.TransactionBlockchainFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionBlockchainPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransactionBlockchainFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionBlockchainPayload>
          }
          findMany: {
            args: Prisma.TransactionBlockchainFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionBlockchainPayload>[]
          }
          create: {
            args: Prisma.TransactionBlockchainCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionBlockchainPayload>
          }
          createMany: {
            args: Prisma.TransactionBlockchainCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TransactionBlockchainDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionBlockchainPayload>
          }
          update: {
            args: Prisma.TransactionBlockchainUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionBlockchainPayload>
          }
          deleteMany: {
            args: Prisma.TransactionBlockchainDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransactionBlockchainUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TransactionBlockchainUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionBlockchainPayload>
          }
          aggregate: {
            args: Prisma.TransactionBlockchainAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransactionBlockchain>
          }
          groupBy: {
            args: Prisma.TransactionBlockchainGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransactionBlockchainGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransactionBlockchainCountArgs<ExtArgs>
            result: $Utils.Optional<TransactionBlockchainCountAggregateOutputType> | number
          }
        }
      }
      Ressource: {
        payload: Prisma.$RessourcePayload<ExtArgs>
        fields: Prisma.RessourceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RessourceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RessourcePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RessourceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RessourcePayload>
          }
          findFirst: {
            args: Prisma.RessourceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RessourcePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RessourceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RessourcePayload>
          }
          findMany: {
            args: Prisma.RessourceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RessourcePayload>[]
          }
          create: {
            args: Prisma.RessourceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RessourcePayload>
          }
          createMany: {
            args: Prisma.RessourceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RessourceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RessourcePayload>
          }
          update: {
            args: Prisma.RessourceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RessourcePayload>
          }
          deleteMany: {
            args: Prisma.RessourceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RessourceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RessourceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RessourcePayload>
          }
          aggregate: {
            args: Prisma.RessourceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRessource>
          }
          groupBy: {
            args: Prisma.RessourceGroupByArgs<ExtArgs>
            result: $Utils.Optional<RessourceGroupByOutputType>[]
          }
          count: {
            args: Prisma.RessourceCountArgs<ExtArgs>
            result: $Utils.Optional<RessourceCountAggregateOutputType> | number
          }
        }
      }
      StatistiqueBibliotheque: {
        payload: Prisma.$StatistiqueBibliothequePayload<ExtArgs>
        fields: Prisma.StatistiqueBibliothequeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StatistiqueBibliothequeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatistiqueBibliothequePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StatistiqueBibliothequeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatistiqueBibliothequePayload>
          }
          findFirst: {
            args: Prisma.StatistiqueBibliothequeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatistiqueBibliothequePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StatistiqueBibliothequeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatistiqueBibliothequePayload>
          }
          findMany: {
            args: Prisma.StatistiqueBibliothequeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatistiqueBibliothequePayload>[]
          }
          create: {
            args: Prisma.StatistiqueBibliothequeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatistiqueBibliothequePayload>
          }
          createMany: {
            args: Prisma.StatistiqueBibliothequeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.StatistiqueBibliothequeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatistiqueBibliothequePayload>
          }
          update: {
            args: Prisma.StatistiqueBibliothequeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatistiqueBibliothequePayload>
          }
          deleteMany: {
            args: Prisma.StatistiqueBibliothequeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StatistiqueBibliothequeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.StatistiqueBibliothequeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatistiqueBibliothequePayload>
          }
          aggregate: {
            args: Prisma.StatistiqueBibliothequeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStatistiqueBibliotheque>
          }
          groupBy: {
            args: Prisma.StatistiqueBibliothequeGroupByArgs<ExtArgs>
            result: $Utils.Optional<StatistiqueBibliothequeGroupByOutputType>[]
          }
          count: {
            args: Prisma.StatistiqueBibliothequeCountArgs<ExtArgs>
            result: $Utils.Optional<StatistiqueBibliothequeCountAggregateOutputType> | number
          }
        }
      }
      Notification: {
        payload: Prisma.$NotificationPayload<ExtArgs>
        fields: Prisma.NotificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findFirst: {
            args: Prisma.NotificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findMany: {
            args: Prisma.NotificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          create: {
            args: Prisma.NotificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          createMany: {
            args: Prisma.NotificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.NotificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          update: {
            args: Prisma.NotificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          deleteMany: {
            args: Prisma.NotificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NotificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.NotificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
      JournalAudit: {
        payload: Prisma.$JournalAuditPayload<ExtArgs>
        fields: Prisma.JournalAuditFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JournalAuditFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalAuditPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.JournalAuditFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalAuditPayload>
          }
          findFirst: {
            args: Prisma.JournalAuditFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalAuditPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.JournalAuditFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalAuditPayload>
          }
          findMany: {
            args: Prisma.JournalAuditFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalAuditPayload>[]
          }
          create: {
            args: Prisma.JournalAuditCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalAuditPayload>
          }
          createMany: {
            args: Prisma.JournalAuditCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.JournalAuditDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalAuditPayload>
          }
          update: {
            args: Prisma.JournalAuditUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalAuditPayload>
          }
          deleteMany: {
            args: Prisma.JournalAuditDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.JournalAuditUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.JournalAuditUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JournalAuditPayload>
          }
          aggregate: {
            args: Prisma.JournalAuditAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJournalAudit>
          }
          groupBy: {
            args: Prisma.JournalAuditGroupByArgs<ExtArgs>
            result: $Utils.Optional<JournalAuditGroupByOutputType>[]
          }
          count: {
            args: Prisma.JournalAuditCountArgs<ExtArgs>
            result: $Utils.Optional<JournalAuditCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    conventionInteruniversitaire?: ConventionInteruniversitaireOmit
    statistiqueInteruniversitaire?: StatistiqueInteruniversitaireOmit
    reservation?: ReservationOmit
    exemplairePhysique?: ExemplairePhysiqueOmit
    emprunt?: EmpruntOmit
    recommandation?: RecommandationOmit
    universite?: UniversiteOmit
    user?: UserOmit
    favori?: FavoriOmit
    commentaire?: CommentaireOmit
    notation?: NotationOmit
    historiqueAcces?: HistoriqueAccesOmit
    donneesRecommandation?: DonneesRecommandationOmit
    collection?: CollectionOmit
    collectionRessource?: CollectionRessourceOmit
    partageUniversite?: PartageUniversiteOmit
    transactionBlockchain?: TransactionBlockchainOmit
    ressource?: RessourceOmit
    statistiqueBibliotheque?: StatistiqueBibliothequeOmit
    notification?: NotificationOmit
    journalAudit?: JournalAuditOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ExemplairePhysiqueCountOutputType
   */

  export type ExemplairePhysiqueCountOutputType = {
    emprunts: number
  }

  export type ExemplairePhysiqueCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    emprunts?: boolean | ExemplairePhysiqueCountOutputTypeCountEmpruntsArgs
  }

  // Custom InputTypes
  /**
   * ExemplairePhysiqueCountOutputType without action
   */
  export type ExemplairePhysiqueCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExemplairePhysiqueCountOutputType
     */
    select?: ExemplairePhysiqueCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ExemplairePhysiqueCountOutputType without action
   */
  export type ExemplairePhysiqueCountOutputTypeCountEmpruntsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmpruntWhereInput
  }


  /**
   * Count Type UniversiteCountOutputType
   */

  export type UniversiteCountOutputType = {
    users: number
    ressources: number
    conventionsSource: number
    conventionsDestination: number
    statistiquesSource: number
    statistiquesDestination: number
    reservations: number
    emprunts: number
    recommandationsSource: number
    statistiquesBibliotheque: number
    partagesSource: number
    partagesDestination: number
    transactionsOrigine: number
    transactionsDestination: number
    HistoriqueAcces: number
  }

  export type UniversiteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | UniversiteCountOutputTypeCountUsersArgs
    ressources?: boolean | UniversiteCountOutputTypeCountRessourcesArgs
    conventionsSource?: boolean | UniversiteCountOutputTypeCountConventionsSourceArgs
    conventionsDestination?: boolean | UniversiteCountOutputTypeCountConventionsDestinationArgs
    statistiquesSource?: boolean | UniversiteCountOutputTypeCountStatistiquesSourceArgs
    statistiquesDestination?: boolean | UniversiteCountOutputTypeCountStatistiquesDestinationArgs
    reservations?: boolean | UniversiteCountOutputTypeCountReservationsArgs
    emprunts?: boolean | UniversiteCountOutputTypeCountEmpruntsArgs
    recommandationsSource?: boolean | UniversiteCountOutputTypeCountRecommandationsSourceArgs
    statistiquesBibliotheque?: boolean | UniversiteCountOutputTypeCountStatistiquesBibliothequeArgs
    partagesSource?: boolean | UniversiteCountOutputTypeCountPartagesSourceArgs
    partagesDestination?: boolean | UniversiteCountOutputTypeCountPartagesDestinationArgs
    transactionsOrigine?: boolean | UniversiteCountOutputTypeCountTransactionsOrigineArgs
    transactionsDestination?: boolean | UniversiteCountOutputTypeCountTransactionsDestinationArgs
    HistoriqueAcces?: boolean | UniversiteCountOutputTypeCountHistoriqueAccesArgs
  }

  // Custom InputTypes
  /**
   * UniversiteCountOutputType without action
   */
  export type UniversiteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversiteCountOutputType
     */
    select?: UniversiteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UniversiteCountOutputType without action
   */
  export type UniversiteCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UniversiteCountOutputType without action
   */
  export type UniversiteCountOutputTypeCountRessourcesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RessourceWhereInput
  }

  /**
   * UniversiteCountOutputType without action
   */
  export type UniversiteCountOutputTypeCountConventionsSourceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConventionInteruniversitaireWhereInput
  }

  /**
   * UniversiteCountOutputType without action
   */
  export type UniversiteCountOutputTypeCountConventionsDestinationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConventionInteruniversitaireWhereInput
  }

  /**
   * UniversiteCountOutputType without action
   */
  export type UniversiteCountOutputTypeCountStatistiquesSourceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StatistiqueInteruniversitaireWhereInput
  }

  /**
   * UniversiteCountOutputType without action
   */
  export type UniversiteCountOutputTypeCountStatistiquesDestinationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StatistiqueInteruniversitaireWhereInput
  }

  /**
   * UniversiteCountOutputType without action
   */
  export type UniversiteCountOutputTypeCountReservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservationWhereInput
  }

  /**
   * UniversiteCountOutputType without action
   */
  export type UniversiteCountOutputTypeCountEmpruntsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmpruntWhereInput
  }

  /**
   * UniversiteCountOutputType without action
   */
  export type UniversiteCountOutputTypeCountRecommandationsSourceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RecommandationWhereInput
  }

  /**
   * UniversiteCountOutputType without action
   */
  export type UniversiteCountOutputTypeCountStatistiquesBibliothequeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StatistiqueBibliothequeWhereInput
  }

  /**
   * UniversiteCountOutputType without action
   */
  export type UniversiteCountOutputTypeCountPartagesSourceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PartageUniversiteWhereInput
  }

  /**
   * UniversiteCountOutputType without action
   */
  export type UniversiteCountOutputTypeCountPartagesDestinationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PartageUniversiteWhereInput
  }

  /**
   * UniversiteCountOutputType without action
   */
  export type UniversiteCountOutputTypeCountTransactionsOrigineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionBlockchainWhereInput
  }

  /**
   * UniversiteCountOutputType without action
   */
  export type UniversiteCountOutputTypeCountTransactionsDestinationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionBlockchainWhereInput
  }

  /**
   * UniversiteCountOutputType without action
   */
  export type UniversiteCountOutputTypeCountHistoriqueAccesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistoriqueAccesWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    contributions: number
    favoris: number
    commentaires: number
    notations: number
    historiques: number
    collections: number
    reservations: number
    emprunts: number
    recommandations: number
    JournalAudit: number
    DonneesRecommandation: number
    Notification: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contributions?: boolean | UserCountOutputTypeCountContributionsArgs
    favoris?: boolean | UserCountOutputTypeCountFavorisArgs
    commentaires?: boolean | UserCountOutputTypeCountCommentairesArgs
    notations?: boolean | UserCountOutputTypeCountNotationsArgs
    historiques?: boolean | UserCountOutputTypeCountHistoriquesArgs
    collections?: boolean | UserCountOutputTypeCountCollectionsArgs
    reservations?: boolean | UserCountOutputTypeCountReservationsArgs
    emprunts?: boolean | UserCountOutputTypeCountEmpruntsArgs
    recommandations?: boolean | UserCountOutputTypeCountRecommandationsArgs
    JournalAudit?: boolean | UserCountOutputTypeCountJournalAuditArgs
    DonneesRecommandation?: boolean | UserCountOutputTypeCountDonneesRecommandationArgs
    Notification?: boolean | UserCountOutputTypeCountNotificationArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountContributionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RessourceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFavorisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCommentairesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentaireWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountHistoriquesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistoriqueAccesWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCollectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CollectionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountEmpruntsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmpruntWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRecommandationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RecommandationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountJournalAuditArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JournalAuditWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDonneesRecommandationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonneesRecommandationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }


  /**
   * Count Type CollectionCountOutputType
   */

  export type CollectionCountOutputType = {
    ressources: number
  }

  export type CollectionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ressources?: boolean | CollectionCountOutputTypeCountRessourcesArgs
  }

  // Custom InputTypes
  /**
   * CollectionCountOutputType without action
   */
  export type CollectionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CollectionCountOutputType
     */
    select?: CollectionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CollectionCountOutputType without action
   */
  export type CollectionCountOutputTypeCountRessourcesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CollectionRessourceWhereInput
  }


  /**
   * Count Type RessourceCountOutputType
   */

  export type RessourceCountOutputType = {
    favoris: number
    commentaires: number
    notations: number
    historiques: number
    collections: number
    partages: number
    exemplaires: number
    reservations: number
    recommandations: number
    donneesRecommandation: number
    transactions: number
    Notification: number
  }

  export type RessourceCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    favoris?: boolean | RessourceCountOutputTypeCountFavorisArgs
    commentaires?: boolean | RessourceCountOutputTypeCountCommentairesArgs
    notations?: boolean | RessourceCountOutputTypeCountNotationsArgs
    historiques?: boolean | RessourceCountOutputTypeCountHistoriquesArgs
    collections?: boolean | RessourceCountOutputTypeCountCollectionsArgs
    partages?: boolean | RessourceCountOutputTypeCountPartagesArgs
    exemplaires?: boolean | RessourceCountOutputTypeCountExemplairesArgs
    reservations?: boolean | RessourceCountOutputTypeCountReservationsArgs
    recommandations?: boolean | RessourceCountOutputTypeCountRecommandationsArgs
    donneesRecommandation?: boolean | RessourceCountOutputTypeCountDonneesRecommandationArgs
    transactions?: boolean | RessourceCountOutputTypeCountTransactionsArgs
    Notification?: boolean | RessourceCountOutputTypeCountNotificationArgs
  }

  // Custom InputTypes
  /**
   * RessourceCountOutputType without action
   */
  export type RessourceCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RessourceCountOutputType
     */
    select?: RessourceCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RessourceCountOutputType without action
   */
  export type RessourceCountOutputTypeCountFavorisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriWhereInput
  }

  /**
   * RessourceCountOutputType without action
   */
  export type RessourceCountOutputTypeCountCommentairesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentaireWhereInput
  }

  /**
   * RessourceCountOutputType without action
   */
  export type RessourceCountOutputTypeCountNotationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotationWhereInput
  }

  /**
   * RessourceCountOutputType without action
   */
  export type RessourceCountOutputTypeCountHistoriquesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistoriqueAccesWhereInput
  }

  /**
   * RessourceCountOutputType without action
   */
  export type RessourceCountOutputTypeCountCollectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CollectionRessourceWhereInput
  }

  /**
   * RessourceCountOutputType without action
   */
  export type RessourceCountOutputTypeCountPartagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PartageUniversiteWhereInput
  }

  /**
   * RessourceCountOutputType without action
   */
  export type RessourceCountOutputTypeCountExemplairesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExemplairePhysiqueWhereInput
  }

  /**
   * RessourceCountOutputType without action
   */
  export type RessourceCountOutputTypeCountReservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservationWhereInput
  }

  /**
   * RessourceCountOutputType without action
   */
  export type RessourceCountOutputTypeCountRecommandationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RecommandationWhereInput
  }

  /**
   * RessourceCountOutputType without action
   */
  export type RessourceCountOutputTypeCountDonneesRecommandationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonneesRecommandationWhereInput
  }

  /**
   * RessourceCountOutputType without action
   */
  export type RessourceCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionBlockchainWhereInput
  }

  /**
   * RessourceCountOutputType without action
   */
  export type RessourceCountOutputTypeCountNotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }


  /**
   * Models
   */

  /**
   * Model ConventionInteruniversitaire
   */

  export type AggregateConventionInteruniversitaire = {
    _count: ConventionInteruniversitaireCountAggregateOutputType | null
    _min: ConventionInteruniversitaireMinAggregateOutputType | null
    _max: ConventionInteruniversitaireMaxAggregateOutputType | null
  }

  export type ConventionInteruniversitaireMinAggregateOutputType = {
    id: string | null
    universiteId1: string | null
    universiteId2: string | null
    dateDebut: Date | null
    dateFin: Date | null
    estActive: boolean | null
    typeConvention: $Enums.TypeConvention | null
    detailsConvention: string | null
    documentsUrl: string | null
    contactUniversite1: string | null
    contactUniversite2: string | null
  }

  export type ConventionInteruniversitaireMaxAggregateOutputType = {
    id: string | null
    universiteId1: string | null
    universiteId2: string | null
    dateDebut: Date | null
    dateFin: Date | null
    estActive: boolean | null
    typeConvention: $Enums.TypeConvention | null
    detailsConvention: string | null
    documentsUrl: string | null
    contactUniversite1: string | null
    contactUniversite2: string | null
  }

  export type ConventionInteruniversitaireCountAggregateOutputType = {
    id: number
    universiteId1: number
    universiteId2: number
    dateDebut: number
    dateFin: number
    estActive: number
    typeConvention: number
    detailsConvention: number
    documentsUrl: number
    contactUniversite1: number
    contactUniversite2: number
    _all: number
  }


  export type ConventionInteruniversitaireMinAggregateInputType = {
    id?: true
    universiteId1?: true
    universiteId2?: true
    dateDebut?: true
    dateFin?: true
    estActive?: true
    typeConvention?: true
    detailsConvention?: true
    documentsUrl?: true
    contactUniversite1?: true
    contactUniversite2?: true
  }

  export type ConventionInteruniversitaireMaxAggregateInputType = {
    id?: true
    universiteId1?: true
    universiteId2?: true
    dateDebut?: true
    dateFin?: true
    estActive?: true
    typeConvention?: true
    detailsConvention?: true
    documentsUrl?: true
    contactUniversite1?: true
    contactUniversite2?: true
  }

  export type ConventionInteruniversitaireCountAggregateInputType = {
    id?: true
    universiteId1?: true
    universiteId2?: true
    dateDebut?: true
    dateFin?: true
    estActive?: true
    typeConvention?: true
    detailsConvention?: true
    documentsUrl?: true
    contactUniversite1?: true
    contactUniversite2?: true
    _all?: true
  }

  export type ConventionInteruniversitaireAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConventionInteruniversitaire to aggregate.
     */
    where?: ConventionInteruniversitaireWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConventionInteruniversitaires to fetch.
     */
    orderBy?: ConventionInteruniversitaireOrderByWithRelationInput | ConventionInteruniversitaireOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ConventionInteruniversitaireWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConventionInteruniversitaires from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConventionInteruniversitaires.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ConventionInteruniversitaires
    **/
    _count?: true | ConventionInteruniversitaireCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConventionInteruniversitaireMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConventionInteruniversitaireMaxAggregateInputType
  }

  export type GetConventionInteruniversitaireAggregateType<T extends ConventionInteruniversitaireAggregateArgs> = {
        [P in keyof T & keyof AggregateConventionInteruniversitaire]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConventionInteruniversitaire[P]>
      : GetScalarType<T[P], AggregateConventionInteruniversitaire[P]>
  }




  export type ConventionInteruniversitaireGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConventionInteruniversitaireWhereInput
    orderBy?: ConventionInteruniversitaireOrderByWithAggregationInput | ConventionInteruniversitaireOrderByWithAggregationInput[]
    by: ConventionInteruniversitaireScalarFieldEnum[] | ConventionInteruniversitaireScalarFieldEnum
    having?: ConventionInteruniversitaireScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConventionInteruniversitaireCountAggregateInputType | true
    _min?: ConventionInteruniversitaireMinAggregateInputType
    _max?: ConventionInteruniversitaireMaxAggregateInputType
  }

  export type ConventionInteruniversitaireGroupByOutputType = {
    id: string
    universiteId1: string
    universiteId2: string
    dateDebut: Date
    dateFin: Date | null
    estActive: boolean
    typeConvention: $Enums.TypeConvention
    detailsConvention: string | null
    documentsUrl: string | null
    contactUniversite1: string | null
    contactUniversite2: string | null
    _count: ConventionInteruniversitaireCountAggregateOutputType | null
    _min: ConventionInteruniversitaireMinAggregateOutputType | null
    _max: ConventionInteruniversitaireMaxAggregateOutputType | null
  }

  type GetConventionInteruniversitaireGroupByPayload<T extends ConventionInteruniversitaireGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConventionInteruniversitaireGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConventionInteruniversitaireGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConventionInteruniversitaireGroupByOutputType[P]>
            : GetScalarType<T[P], ConventionInteruniversitaireGroupByOutputType[P]>
        }
      >
    >


  export type ConventionInteruniversitaireSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universiteId1?: boolean
    universiteId2?: boolean
    dateDebut?: boolean
    dateFin?: boolean
    estActive?: boolean
    typeConvention?: boolean
    detailsConvention?: boolean
    documentsUrl?: boolean
    contactUniversite1?: boolean
    contactUniversite2?: boolean
    universite1?: boolean | UniversiteDefaultArgs<ExtArgs>
    universite2?: boolean | UniversiteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["conventionInteruniversitaire"]>



  export type ConventionInteruniversitaireSelectScalar = {
    id?: boolean
    universiteId1?: boolean
    universiteId2?: boolean
    dateDebut?: boolean
    dateFin?: boolean
    estActive?: boolean
    typeConvention?: boolean
    detailsConvention?: boolean
    documentsUrl?: boolean
    contactUniversite1?: boolean
    contactUniversite2?: boolean
  }

  export type ConventionInteruniversitaireOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "universiteId1" | "universiteId2" | "dateDebut" | "dateFin" | "estActive" | "typeConvention" | "detailsConvention" | "documentsUrl" | "contactUniversite1" | "contactUniversite2", ExtArgs["result"]["conventionInteruniversitaire"]>
  export type ConventionInteruniversitaireInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    universite1?: boolean | UniversiteDefaultArgs<ExtArgs>
    universite2?: boolean | UniversiteDefaultArgs<ExtArgs>
  }

  export type $ConventionInteruniversitairePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ConventionInteruniversitaire"
    objects: {
      universite1: Prisma.$UniversitePayload<ExtArgs>
      universite2: Prisma.$UniversitePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      universiteId1: string
      universiteId2: string
      dateDebut: Date
      dateFin: Date | null
      estActive: boolean
      typeConvention: $Enums.TypeConvention
      detailsConvention: string | null
      documentsUrl: string | null
      contactUniversite1: string | null
      contactUniversite2: string | null
    }, ExtArgs["result"]["conventionInteruniversitaire"]>
    composites: {}
  }

  type ConventionInteruniversitaireGetPayload<S extends boolean | null | undefined | ConventionInteruniversitaireDefaultArgs> = $Result.GetResult<Prisma.$ConventionInteruniversitairePayload, S>

  type ConventionInteruniversitaireCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ConventionInteruniversitaireFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ConventionInteruniversitaireCountAggregateInputType | true
    }

  export interface ConventionInteruniversitaireDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ConventionInteruniversitaire'], meta: { name: 'ConventionInteruniversitaire' } }
    /**
     * Find zero or one ConventionInteruniversitaire that matches the filter.
     * @param {ConventionInteruniversitaireFindUniqueArgs} args - Arguments to find a ConventionInteruniversitaire
     * @example
     * // Get one ConventionInteruniversitaire
     * const conventionInteruniversitaire = await prisma.conventionInteruniversitaire.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ConventionInteruniversitaireFindUniqueArgs>(args: SelectSubset<T, ConventionInteruniversitaireFindUniqueArgs<ExtArgs>>): Prisma__ConventionInteruniversitaireClient<$Result.GetResult<Prisma.$ConventionInteruniversitairePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ConventionInteruniversitaire that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ConventionInteruniversitaireFindUniqueOrThrowArgs} args - Arguments to find a ConventionInteruniversitaire
     * @example
     * // Get one ConventionInteruniversitaire
     * const conventionInteruniversitaire = await prisma.conventionInteruniversitaire.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ConventionInteruniversitaireFindUniqueOrThrowArgs>(args: SelectSubset<T, ConventionInteruniversitaireFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ConventionInteruniversitaireClient<$Result.GetResult<Prisma.$ConventionInteruniversitairePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ConventionInteruniversitaire that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConventionInteruniversitaireFindFirstArgs} args - Arguments to find a ConventionInteruniversitaire
     * @example
     * // Get one ConventionInteruniversitaire
     * const conventionInteruniversitaire = await prisma.conventionInteruniversitaire.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ConventionInteruniversitaireFindFirstArgs>(args?: SelectSubset<T, ConventionInteruniversitaireFindFirstArgs<ExtArgs>>): Prisma__ConventionInteruniversitaireClient<$Result.GetResult<Prisma.$ConventionInteruniversitairePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ConventionInteruniversitaire that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConventionInteruniversitaireFindFirstOrThrowArgs} args - Arguments to find a ConventionInteruniversitaire
     * @example
     * // Get one ConventionInteruniversitaire
     * const conventionInteruniversitaire = await prisma.conventionInteruniversitaire.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ConventionInteruniversitaireFindFirstOrThrowArgs>(args?: SelectSubset<T, ConventionInteruniversitaireFindFirstOrThrowArgs<ExtArgs>>): Prisma__ConventionInteruniversitaireClient<$Result.GetResult<Prisma.$ConventionInteruniversitairePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ConventionInteruniversitaires that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConventionInteruniversitaireFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ConventionInteruniversitaires
     * const conventionInteruniversitaires = await prisma.conventionInteruniversitaire.findMany()
     * 
     * // Get first 10 ConventionInteruniversitaires
     * const conventionInteruniversitaires = await prisma.conventionInteruniversitaire.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const conventionInteruniversitaireWithIdOnly = await prisma.conventionInteruniversitaire.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ConventionInteruniversitaireFindManyArgs>(args?: SelectSubset<T, ConventionInteruniversitaireFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConventionInteruniversitairePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ConventionInteruniversitaire.
     * @param {ConventionInteruniversitaireCreateArgs} args - Arguments to create a ConventionInteruniversitaire.
     * @example
     * // Create one ConventionInteruniversitaire
     * const ConventionInteruniversitaire = await prisma.conventionInteruniversitaire.create({
     *   data: {
     *     // ... data to create a ConventionInteruniversitaire
     *   }
     * })
     * 
     */
    create<T extends ConventionInteruniversitaireCreateArgs>(args: SelectSubset<T, ConventionInteruniversitaireCreateArgs<ExtArgs>>): Prisma__ConventionInteruniversitaireClient<$Result.GetResult<Prisma.$ConventionInteruniversitairePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ConventionInteruniversitaires.
     * @param {ConventionInteruniversitaireCreateManyArgs} args - Arguments to create many ConventionInteruniversitaires.
     * @example
     * // Create many ConventionInteruniversitaires
     * const conventionInteruniversitaire = await prisma.conventionInteruniversitaire.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ConventionInteruniversitaireCreateManyArgs>(args?: SelectSubset<T, ConventionInteruniversitaireCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ConventionInteruniversitaire.
     * @param {ConventionInteruniversitaireDeleteArgs} args - Arguments to delete one ConventionInteruniversitaire.
     * @example
     * // Delete one ConventionInteruniversitaire
     * const ConventionInteruniversitaire = await prisma.conventionInteruniversitaire.delete({
     *   where: {
     *     // ... filter to delete one ConventionInteruniversitaire
     *   }
     * })
     * 
     */
    delete<T extends ConventionInteruniversitaireDeleteArgs>(args: SelectSubset<T, ConventionInteruniversitaireDeleteArgs<ExtArgs>>): Prisma__ConventionInteruniversitaireClient<$Result.GetResult<Prisma.$ConventionInteruniversitairePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ConventionInteruniversitaire.
     * @param {ConventionInteruniversitaireUpdateArgs} args - Arguments to update one ConventionInteruniversitaire.
     * @example
     * // Update one ConventionInteruniversitaire
     * const conventionInteruniversitaire = await prisma.conventionInteruniversitaire.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ConventionInteruniversitaireUpdateArgs>(args: SelectSubset<T, ConventionInteruniversitaireUpdateArgs<ExtArgs>>): Prisma__ConventionInteruniversitaireClient<$Result.GetResult<Prisma.$ConventionInteruniversitairePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ConventionInteruniversitaires.
     * @param {ConventionInteruniversitaireDeleteManyArgs} args - Arguments to filter ConventionInteruniversitaires to delete.
     * @example
     * // Delete a few ConventionInteruniversitaires
     * const { count } = await prisma.conventionInteruniversitaire.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ConventionInteruniversitaireDeleteManyArgs>(args?: SelectSubset<T, ConventionInteruniversitaireDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ConventionInteruniversitaires.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConventionInteruniversitaireUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ConventionInteruniversitaires
     * const conventionInteruniversitaire = await prisma.conventionInteruniversitaire.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ConventionInteruniversitaireUpdateManyArgs>(args: SelectSubset<T, ConventionInteruniversitaireUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ConventionInteruniversitaire.
     * @param {ConventionInteruniversitaireUpsertArgs} args - Arguments to update or create a ConventionInteruniversitaire.
     * @example
     * // Update or create a ConventionInteruniversitaire
     * const conventionInteruniversitaire = await prisma.conventionInteruniversitaire.upsert({
     *   create: {
     *     // ... data to create a ConventionInteruniversitaire
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ConventionInteruniversitaire we want to update
     *   }
     * })
     */
    upsert<T extends ConventionInteruniversitaireUpsertArgs>(args: SelectSubset<T, ConventionInteruniversitaireUpsertArgs<ExtArgs>>): Prisma__ConventionInteruniversitaireClient<$Result.GetResult<Prisma.$ConventionInteruniversitairePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ConventionInteruniversitaires.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConventionInteruniversitaireCountArgs} args - Arguments to filter ConventionInteruniversitaires to count.
     * @example
     * // Count the number of ConventionInteruniversitaires
     * const count = await prisma.conventionInteruniversitaire.count({
     *   where: {
     *     // ... the filter for the ConventionInteruniversitaires we want to count
     *   }
     * })
    **/
    count<T extends ConventionInteruniversitaireCountArgs>(
      args?: Subset<T, ConventionInteruniversitaireCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConventionInteruniversitaireCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ConventionInteruniversitaire.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConventionInteruniversitaireAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConventionInteruniversitaireAggregateArgs>(args: Subset<T, ConventionInteruniversitaireAggregateArgs>): Prisma.PrismaPromise<GetConventionInteruniversitaireAggregateType<T>>

    /**
     * Group by ConventionInteruniversitaire.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConventionInteruniversitaireGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ConventionInteruniversitaireGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ConventionInteruniversitaireGroupByArgs['orderBy'] }
        : { orderBy?: ConventionInteruniversitaireGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ConventionInteruniversitaireGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConventionInteruniversitaireGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ConventionInteruniversitaire model
   */
  readonly fields: ConventionInteruniversitaireFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ConventionInteruniversitaire.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ConventionInteruniversitaireClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    universite1<T extends UniversiteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversiteDefaultArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    universite2<T extends UniversiteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversiteDefaultArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ConventionInteruniversitaire model
   */
  interface ConventionInteruniversitaireFieldRefs {
    readonly id: FieldRef<"ConventionInteruniversitaire", 'String'>
    readonly universiteId1: FieldRef<"ConventionInteruniversitaire", 'String'>
    readonly universiteId2: FieldRef<"ConventionInteruniversitaire", 'String'>
    readonly dateDebut: FieldRef<"ConventionInteruniversitaire", 'DateTime'>
    readonly dateFin: FieldRef<"ConventionInteruniversitaire", 'DateTime'>
    readonly estActive: FieldRef<"ConventionInteruniversitaire", 'Boolean'>
    readonly typeConvention: FieldRef<"ConventionInteruniversitaire", 'TypeConvention'>
    readonly detailsConvention: FieldRef<"ConventionInteruniversitaire", 'String'>
    readonly documentsUrl: FieldRef<"ConventionInteruniversitaire", 'String'>
    readonly contactUniversite1: FieldRef<"ConventionInteruniversitaire", 'String'>
    readonly contactUniversite2: FieldRef<"ConventionInteruniversitaire", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ConventionInteruniversitaire findUnique
   */
  export type ConventionInteruniversitaireFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConventionInteruniversitaire
     */
    select?: ConventionInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConventionInteruniversitaire
     */
    omit?: ConventionInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConventionInteruniversitaireInclude<ExtArgs> | null
    /**
     * Filter, which ConventionInteruniversitaire to fetch.
     */
    where: ConventionInteruniversitaireWhereUniqueInput
  }

  /**
   * ConventionInteruniversitaire findUniqueOrThrow
   */
  export type ConventionInteruniversitaireFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConventionInteruniversitaire
     */
    select?: ConventionInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConventionInteruniversitaire
     */
    omit?: ConventionInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConventionInteruniversitaireInclude<ExtArgs> | null
    /**
     * Filter, which ConventionInteruniversitaire to fetch.
     */
    where: ConventionInteruniversitaireWhereUniqueInput
  }

  /**
   * ConventionInteruniversitaire findFirst
   */
  export type ConventionInteruniversitaireFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConventionInteruniversitaire
     */
    select?: ConventionInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConventionInteruniversitaire
     */
    omit?: ConventionInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConventionInteruniversitaireInclude<ExtArgs> | null
    /**
     * Filter, which ConventionInteruniversitaire to fetch.
     */
    where?: ConventionInteruniversitaireWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConventionInteruniversitaires to fetch.
     */
    orderBy?: ConventionInteruniversitaireOrderByWithRelationInput | ConventionInteruniversitaireOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConventionInteruniversitaires.
     */
    cursor?: ConventionInteruniversitaireWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConventionInteruniversitaires from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConventionInteruniversitaires.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConventionInteruniversitaires.
     */
    distinct?: ConventionInteruniversitaireScalarFieldEnum | ConventionInteruniversitaireScalarFieldEnum[]
  }

  /**
   * ConventionInteruniversitaire findFirstOrThrow
   */
  export type ConventionInteruniversitaireFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConventionInteruniversitaire
     */
    select?: ConventionInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConventionInteruniversitaire
     */
    omit?: ConventionInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConventionInteruniversitaireInclude<ExtArgs> | null
    /**
     * Filter, which ConventionInteruniversitaire to fetch.
     */
    where?: ConventionInteruniversitaireWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConventionInteruniversitaires to fetch.
     */
    orderBy?: ConventionInteruniversitaireOrderByWithRelationInput | ConventionInteruniversitaireOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConventionInteruniversitaires.
     */
    cursor?: ConventionInteruniversitaireWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConventionInteruniversitaires from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConventionInteruniversitaires.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConventionInteruniversitaires.
     */
    distinct?: ConventionInteruniversitaireScalarFieldEnum | ConventionInteruniversitaireScalarFieldEnum[]
  }

  /**
   * ConventionInteruniversitaire findMany
   */
  export type ConventionInteruniversitaireFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConventionInteruniversitaire
     */
    select?: ConventionInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConventionInteruniversitaire
     */
    omit?: ConventionInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConventionInteruniversitaireInclude<ExtArgs> | null
    /**
     * Filter, which ConventionInteruniversitaires to fetch.
     */
    where?: ConventionInteruniversitaireWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConventionInteruniversitaires to fetch.
     */
    orderBy?: ConventionInteruniversitaireOrderByWithRelationInput | ConventionInteruniversitaireOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ConventionInteruniversitaires.
     */
    cursor?: ConventionInteruniversitaireWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConventionInteruniversitaires from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConventionInteruniversitaires.
     */
    skip?: number
    distinct?: ConventionInteruniversitaireScalarFieldEnum | ConventionInteruniversitaireScalarFieldEnum[]
  }

  /**
   * ConventionInteruniversitaire create
   */
  export type ConventionInteruniversitaireCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConventionInteruniversitaire
     */
    select?: ConventionInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConventionInteruniversitaire
     */
    omit?: ConventionInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConventionInteruniversitaireInclude<ExtArgs> | null
    /**
     * The data needed to create a ConventionInteruniversitaire.
     */
    data: XOR<ConventionInteruniversitaireCreateInput, ConventionInteruniversitaireUncheckedCreateInput>
  }

  /**
   * ConventionInteruniversitaire createMany
   */
  export type ConventionInteruniversitaireCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ConventionInteruniversitaires.
     */
    data: ConventionInteruniversitaireCreateManyInput | ConventionInteruniversitaireCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ConventionInteruniversitaire update
   */
  export type ConventionInteruniversitaireUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConventionInteruniversitaire
     */
    select?: ConventionInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConventionInteruniversitaire
     */
    omit?: ConventionInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConventionInteruniversitaireInclude<ExtArgs> | null
    /**
     * The data needed to update a ConventionInteruniversitaire.
     */
    data: XOR<ConventionInteruniversitaireUpdateInput, ConventionInteruniversitaireUncheckedUpdateInput>
    /**
     * Choose, which ConventionInteruniversitaire to update.
     */
    where: ConventionInteruniversitaireWhereUniqueInput
  }

  /**
   * ConventionInteruniversitaire updateMany
   */
  export type ConventionInteruniversitaireUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ConventionInteruniversitaires.
     */
    data: XOR<ConventionInteruniversitaireUpdateManyMutationInput, ConventionInteruniversitaireUncheckedUpdateManyInput>
    /**
     * Filter which ConventionInteruniversitaires to update
     */
    where?: ConventionInteruniversitaireWhereInput
    /**
     * Limit how many ConventionInteruniversitaires to update.
     */
    limit?: number
  }

  /**
   * ConventionInteruniversitaire upsert
   */
  export type ConventionInteruniversitaireUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConventionInteruniversitaire
     */
    select?: ConventionInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConventionInteruniversitaire
     */
    omit?: ConventionInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConventionInteruniversitaireInclude<ExtArgs> | null
    /**
     * The filter to search for the ConventionInteruniversitaire to update in case it exists.
     */
    where: ConventionInteruniversitaireWhereUniqueInput
    /**
     * In case the ConventionInteruniversitaire found by the `where` argument doesn't exist, create a new ConventionInteruniversitaire with this data.
     */
    create: XOR<ConventionInteruniversitaireCreateInput, ConventionInteruniversitaireUncheckedCreateInput>
    /**
     * In case the ConventionInteruniversitaire was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ConventionInteruniversitaireUpdateInput, ConventionInteruniversitaireUncheckedUpdateInput>
  }

  /**
   * ConventionInteruniversitaire delete
   */
  export type ConventionInteruniversitaireDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConventionInteruniversitaire
     */
    select?: ConventionInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConventionInteruniversitaire
     */
    omit?: ConventionInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConventionInteruniversitaireInclude<ExtArgs> | null
    /**
     * Filter which ConventionInteruniversitaire to delete.
     */
    where: ConventionInteruniversitaireWhereUniqueInput
  }

  /**
   * ConventionInteruniversitaire deleteMany
   */
  export type ConventionInteruniversitaireDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConventionInteruniversitaires to delete
     */
    where?: ConventionInteruniversitaireWhereInput
    /**
     * Limit how many ConventionInteruniversitaires to delete.
     */
    limit?: number
  }

  /**
   * ConventionInteruniversitaire without action
   */
  export type ConventionInteruniversitaireDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConventionInteruniversitaire
     */
    select?: ConventionInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConventionInteruniversitaire
     */
    omit?: ConventionInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConventionInteruniversitaireInclude<ExtArgs> | null
  }


  /**
   * Model StatistiqueInteruniversitaire
   */

  export type AggregateStatistiqueInteruniversitaire = {
    _count: StatistiqueInteruniversitaireCountAggregateOutputType | null
    _avg: StatistiqueInteruniversitaireAvgAggregateOutputType | null
    _sum: StatistiqueInteruniversitaireSumAggregateOutputType | null
    _min: StatistiqueInteruniversitaireMinAggregateOutputType | null
    _max: StatistiqueInteruniversitaireMaxAggregateOutputType | null
  }

  export type StatistiqueInteruniversitaireAvgAggregateOutputType = {
    mois: number | null
    annee: number | null
    nbEmprunts: number | null
    nbReservations: number | null
  }

  export type StatistiqueInteruniversitaireSumAggregateOutputType = {
    mois: number | null
    annee: number | null
    nbEmprunts: number | null
    nbReservations: number | null
  }

  export type StatistiqueInteruniversitaireMinAggregateOutputType = {
    id: string | null
    universiteSource: string | null
    universiteDestination: string | null
    mois: number | null
    annee: number | null
    nbEmprunts: number | null
    nbReservations: number | null
    ressourcesPlusConsultees: string | null
    domainesPlusConsultes: string | null
  }

  export type StatistiqueInteruniversitaireMaxAggregateOutputType = {
    id: string | null
    universiteSource: string | null
    universiteDestination: string | null
    mois: number | null
    annee: number | null
    nbEmprunts: number | null
    nbReservations: number | null
    ressourcesPlusConsultees: string | null
    domainesPlusConsultes: string | null
  }

  export type StatistiqueInteruniversitaireCountAggregateOutputType = {
    id: number
    universiteSource: number
    universiteDestination: number
    mois: number
    annee: number
    nbEmprunts: number
    nbReservations: number
    ressourcesPlusConsultees: number
    domainesPlusConsultes: number
    _all: number
  }


  export type StatistiqueInteruniversitaireAvgAggregateInputType = {
    mois?: true
    annee?: true
    nbEmprunts?: true
    nbReservations?: true
  }

  export type StatistiqueInteruniversitaireSumAggregateInputType = {
    mois?: true
    annee?: true
    nbEmprunts?: true
    nbReservations?: true
  }

  export type StatistiqueInteruniversitaireMinAggregateInputType = {
    id?: true
    universiteSource?: true
    universiteDestination?: true
    mois?: true
    annee?: true
    nbEmprunts?: true
    nbReservations?: true
    ressourcesPlusConsultees?: true
    domainesPlusConsultes?: true
  }

  export type StatistiqueInteruniversitaireMaxAggregateInputType = {
    id?: true
    universiteSource?: true
    universiteDestination?: true
    mois?: true
    annee?: true
    nbEmprunts?: true
    nbReservations?: true
    ressourcesPlusConsultees?: true
    domainesPlusConsultes?: true
  }

  export type StatistiqueInteruniversitaireCountAggregateInputType = {
    id?: true
    universiteSource?: true
    universiteDestination?: true
    mois?: true
    annee?: true
    nbEmprunts?: true
    nbReservations?: true
    ressourcesPlusConsultees?: true
    domainesPlusConsultes?: true
    _all?: true
  }

  export type StatistiqueInteruniversitaireAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StatistiqueInteruniversitaire to aggregate.
     */
    where?: StatistiqueInteruniversitaireWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StatistiqueInteruniversitaires to fetch.
     */
    orderBy?: StatistiqueInteruniversitaireOrderByWithRelationInput | StatistiqueInteruniversitaireOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StatistiqueInteruniversitaireWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StatistiqueInteruniversitaires from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StatistiqueInteruniversitaires.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StatistiqueInteruniversitaires
    **/
    _count?: true | StatistiqueInteruniversitaireCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StatistiqueInteruniversitaireAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StatistiqueInteruniversitaireSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StatistiqueInteruniversitaireMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StatistiqueInteruniversitaireMaxAggregateInputType
  }

  export type GetStatistiqueInteruniversitaireAggregateType<T extends StatistiqueInteruniversitaireAggregateArgs> = {
        [P in keyof T & keyof AggregateStatistiqueInteruniversitaire]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStatistiqueInteruniversitaire[P]>
      : GetScalarType<T[P], AggregateStatistiqueInteruniversitaire[P]>
  }




  export type StatistiqueInteruniversitaireGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StatistiqueInteruniversitaireWhereInput
    orderBy?: StatistiqueInteruniversitaireOrderByWithAggregationInput | StatistiqueInteruniversitaireOrderByWithAggregationInput[]
    by: StatistiqueInteruniversitaireScalarFieldEnum[] | StatistiqueInteruniversitaireScalarFieldEnum
    having?: StatistiqueInteruniversitaireScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StatistiqueInteruniversitaireCountAggregateInputType | true
    _avg?: StatistiqueInteruniversitaireAvgAggregateInputType
    _sum?: StatistiqueInteruniversitaireSumAggregateInputType
    _min?: StatistiqueInteruniversitaireMinAggregateInputType
    _max?: StatistiqueInteruniversitaireMaxAggregateInputType
  }

  export type StatistiqueInteruniversitaireGroupByOutputType = {
    id: string
    universiteSource: string
    universiteDestination: string
    mois: number
    annee: number
    nbEmprunts: number
    nbReservations: number
    ressourcesPlusConsultees: string | null
    domainesPlusConsultes: string | null
    _count: StatistiqueInteruniversitaireCountAggregateOutputType | null
    _avg: StatistiqueInteruniversitaireAvgAggregateOutputType | null
    _sum: StatistiqueInteruniversitaireSumAggregateOutputType | null
    _min: StatistiqueInteruniversitaireMinAggregateOutputType | null
    _max: StatistiqueInteruniversitaireMaxAggregateOutputType | null
  }

  type GetStatistiqueInteruniversitaireGroupByPayload<T extends StatistiqueInteruniversitaireGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StatistiqueInteruniversitaireGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StatistiqueInteruniversitaireGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StatistiqueInteruniversitaireGroupByOutputType[P]>
            : GetScalarType<T[P], StatistiqueInteruniversitaireGroupByOutputType[P]>
        }
      >
    >


  export type StatistiqueInteruniversitaireSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universiteSource?: boolean
    universiteDestination?: boolean
    mois?: boolean
    annee?: boolean
    nbEmprunts?: boolean
    nbReservations?: boolean
    ressourcesPlusConsultees?: boolean
    domainesPlusConsultes?: boolean
    universiteSourceRel?: boolean | UniversiteDefaultArgs<ExtArgs>
    universiteDestinationRel?: boolean | UniversiteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["statistiqueInteruniversitaire"]>



  export type StatistiqueInteruniversitaireSelectScalar = {
    id?: boolean
    universiteSource?: boolean
    universiteDestination?: boolean
    mois?: boolean
    annee?: boolean
    nbEmprunts?: boolean
    nbReservations?: boolean
    ressourcesPlusConsultees?: boolean
    domainesPlusConsultes?: boolean
  }

  export type StatistiqueInteruniversitaireOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "universiteSource" | "universiteDestination" | "mois" | "annee" | "nbEmprunts" | "nbReservations" | "ressourcesPlusConsultees" | "domainesPlusConsultes", ExtArgs["result"]["statistiqueInteruniversitaire"]>
  export type StatistiqueInteruniversitaireInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    universiteSourceRel?: boolean | UniversiteDefaultArgs<ExtArgs>
    universiteDestinationRel?: boolean | UniversiteDefaultArgs<ExtArgs>
  }

  export type $StatistiqueInteruniversitairePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StatistiqueInteruniversitaire"
    objects: {
      universiteSourceRel: Prisma.$UniversitePayload<ExtArgs>
      universiteDestinationRel: Prisma.$UniversitePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      universiteSource: string
      universiteDestination: string
      mois: number
      annee: number
      nbEmprunts: number
      nbReservations: number
      ressourcesPlusConsultees: string | null
      domainesPlusConsultes: string | null
    }, ExtArgs["result"]["statistiqueInteruniversitaire"]>
    composites: {}
  }

  type StatistiqueInteruniversitaireGetPayload<S extends boolean | null | undefined | StatistiqueInteruniversitaireDefaultArgs> = $Result.GetResult<Prisma.$StatistiqueInteruniversitairePayload, S>

  type StatistiqueInteruniversitaireCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StatistiqueInteruniversitaireFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StatistiqueInteruniversitaireCountAggregateInputType | true
    }

  export interface StatistiqueInteruniversitaireDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StatistiqueInteruniversitaire'], meta: { name: 'StatistiqueInteruniversitaire' } }
    /**
     * Find zero or one StatistiqueInteruniversitaire that matches the filter.
     * @param {StatistiqueInteruniversitaireFindUniqueArgs} args - Arguments to find a StatistiqueInteruniversitaire
     * @example
     * // Get one StatistiqueInteruniversitaire
     * const statistiqueInteruniversitaire = await prisma.statistiqueInteruniversitaire.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StatistiqueInteruniversitaireFindUniqueArgs>(args: SelectSubset<T, StatistiqueInteruniversitaireFindUniqueArgs<ExtArgs>>): Prisma__StatistiqueInteruniversitaireClient<$Result.GetResult<Prisma.$StatistiqueInteruniversitairePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one StatistiqueInteruniversitaire that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StatistiqueInteruniversitaireFindUniqueOrThrowArgs} args - Arguments to find a StatistiqueInteruniversitaire
     * @example
     * // Get one StatistiqueInteruniversitaire
     * const statistiqueInteruniversitaire = await prisma.statistiqueInteruniversitaire.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StatistiqueInteruniversitaireFindUniqueOrThrowArgs>(args: SelectSubset<T, StatistiqueInteruniversitaireFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StatistiqueInteruniversitaireClient<$Result.GetResult<Prisma.$StatistiqueInteruniversitairePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StatistiqueInteruniversitaire that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatistiqueInteruniversitaireFindFirstArgs} args - Arguments to find a StatistiqueInteruniversitaire
     * @example
     * // Get one StatistiqueInteruniversitaire
     * const statistiqueInteruniversitaire = await prisma.statistiqueInteruniversitaire.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StatistiqueInteruniversitaireFindFirstArgs>(args?: SelectSubset<T, StatistiqueInteruniversitaireFindFirstArgs<ExtArgs>>): Prisma__StatistiqueInteruniversitaireClient<$Result.GetResult<Prisma.$StatistiqueInteruniversitairePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StatistiqueInteruniversitaire that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatistiqueInteruniversitaireFindFirstOrThrowArgs} args - Arguments to find a StatistiqueInteruniversitaire
     * @example
     * // Get one StatistiqueInteruniversitaire
     * const statistiqueInteruniversitaire = await prisma.statistiqueInteruniversitaire.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StatistiqueInteruniversitaireFindFirstOrThrowArgs>(args?: SelectSubset<T, StatistiqueInteruniversitaireFindFirstOrThrowArgs<ExtArgs>>): Prisma__StatistiqueInteruniversitaireClient<$Result.GetResult<Prisma.$StatistiqueInteruniversitairePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more StatistiqueInteruniversitaires that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatistiqueInteruniversitaireFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StatistiqueInteruniversitaires
     * const statistiqueInteruniversitaires = await prisma.statistiqueInteruniversitaire.findMany()
     * 
     * // Get first 10 StatistiqueInteruniversitaires
     * const statistiqueInteruniversitaires = await prisma.statistiqueInteruniversitaire.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const statistiqueInteruniversitaireWithIdOnly = await prisma.statistiqueInteruniversitaire.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StatistiqueInteruniversitaireFindManyArgs>(args?: SelectSubset<T, StatistiqueInteruniversitaireFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StatistiqueInteruniversitairePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a StatistiqueInteruniversitaire.
     * @param {StatistiqueInteruniversitaireCreateArgs} args - Arguments to create a StatistiqueInteruniversitaire.
     * @example
     * // Create one StatistiqueInteruniversitaire
     * const StatistiqueInteruniversitaire = await prisma.statistiqueInteruniversitaire.create({
     *   data: {
     *     // ... data to create a StatistiqueInteruniversitaire
     *   }
     * })
     * 
     */
    create<T extends StatistiqueInteruniversitaireCreateArgs>(args: SelectSubset<T, StatistiqueInteruniversitaireCreateArgs<ExtArgs>>): Prisma__StatistiqueInteruniversitaireClient<$Result.GetResult<Prisma.$StatistiqueInteruniversitairePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many StatistiqueInteruniversitaires.
     * @param {StatistiqueInteruniversitaireCreateManyArgs} args - Arguments to create many StatistiqueInteruniversitaires.
     * @example
     * // Create many StatistiqueInteruniversitaires
     * const statistiqueInteruniversitaire = await prisma.statistiqueInteruniversitaire.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StatistiqueInteruniversitaireCreateManyArgs>(args?: SelectSubset<T, StatistiqueInteruniversitaireCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a StatistiqueInteruniversitaire.
     * @param {StatistiqueInteruniversitaireDeleteArgs} args - Arguments to delete one StatistiqueInteruniversitaire.
     * @example
     * // Delete one StatistiqueInteruniversitaire
     * const StatistiqueInteruniversitaire = await prisma.statistiqueInteruniversitaire.delete({
     *   where: {
     *     // ... filter to delete one StatistiqueInteruniversitaire
     *   }
     * })
     * 
     */
    delete<T extends StatistiqueInteruniversitaireDeleteArgs>(args: SelectSubset<T, StatistiqueInteruniversitaireDeleteArgs<ExtArgs>>): Prisma__StatistiqueInteruniversitaireClient<$Result.GetResult<Prisma.$StatistiqueInteruniversitairePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one StatistiqueInteruniversitaire.
     * @param {StatistiqueInteruniversitaireUpdateArgs} args - Arguments to update one StatistiqueInteruniversitaire.
     * @example
     * // Update one StatistiqueInteruniversitaire
     * const statistiqueInteruniversitaire = await prisma.statistiqueInteruniversitaire.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StatistiqueInteruniversitaireUpdateArgs>(args: SelectSubset<T, StatistiqueInteruniversitaireUpdateArgs<ExtArgs>>): Prisma__StatistiqueInteruniversitaireClient<$Result.GetResult<Prisma.$StatistiqueInteruniversitairePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more StatistiqueInteruniversitaires.
     * @param {StatistiqueInteruniversitaireDeleteManyArgs} args - Arguments to filter StatistiqueInteruniversitaires to delete.
     * @example
     * // Delete a few StatistiqueInteruniversitaires
     * const { count } = await prisma.statistiqueInteruniversitaire.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StatistiqueInteruniversitaireDeleteManyArgs>(args?: SelectSubset<T, StatistiqueInteruniversitaireDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StatistiqueInteruniversitaires.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatistiqueInteruniversitaireUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StatistiqueInteruniversitaires
     * const statistiqueInteruniversitaire = await prisma.statistiqueInteruniversitaire.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StatistiqueInteruniversitaireUpdateManyArgs>(args: SelectSubset<T, StatistiqueInteruniversitaireUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one StatistiqueInteruniversitaire.
     * @param {StatistiqueInteruniversitaireUpsertArgs} args - Arguments to update or create a StatistiqueInteruniversitaire.
     * @example
     * // Update or create a StatistiqueInteruniversitaire
     * const statistiqueInteruniversitaire = await prisma.statistiqueInteruniversitaire.upsert({
     *   create: {
     *     // ... data to create a StatistiqueInteruniversitaire
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StatistiqueInteruniversitaire we want to update
     *   }
     * })
     */
    upsert<T extends StatistiqueInteruniversitaireUpsertArgs>(args: SelectSubset<T, StatistiqueInteruniversitaireUpsertArgs<ExtArgs>>): Prisma__StatistiqueInteruniversitaireClient<$Result.GetResult<Prisma.$StatistiqueInteruniversitairePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of StatistiqueInteruniversitaires.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatistiqueInteruniversitaireCountArgs} args - Arguments to filter StatistiqueInteruniversitaires to count.
     * @example
     * // Count the number of StatistiqueInteruniversitaires
     * const count = await prisma.statistiqueInteruniversitaire.count({
     *   where: {
     *     // ... the filter for the StatistiqueInteruniversitaires we want to count
     *   }
     * })
    **/
    count<T extends StatistiqueInteruniversitaireCountArgs>(
      args?: Subset<T, StatistiqueInteruniversitaireCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StatistiqueInteruniversitaireCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StatistiqueInteruniversitaire.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatistiqueInteruniversitaireAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StatistiqueInteruniversitaireAggregateArgs>(args: Subset<T, StatistiqueInteruniversitaireAggregateArgs>): Prisma.PrismaPromise<GetStatistiqueInteruniversitaireAggregateType<T>>

    /**
     * Group by StatistiqueInteruniversitaire.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatistiqueInteruniversitaireGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StatistiqueInteruniversitaireGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StatistiqueInteruniversitaireGroupByArgs['orderBy'] }
        : { orderBy?: StatistiqueInteruniversitaireGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StatistiqueInteruniversitaireGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStatistiqueInteruniversitaireGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StatistiqueInteruniversitaire model
   */
  readonly fields: StatistiqueInteruniversitaireFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StatistiqueInteruniversitaire.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StatistiqueInteruniversitaireClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    universiteSourceRel<T extends UniversiteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversiteDefaultArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    universiteDestinationRel<T extends UniversiteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversiteDefaultArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StatistiqueInteruniversitaire model
   */
  interface StatistiqueInteruniversitaireFieldRefs {
    readonly id: FieldRef<"StatistiqueInteruniversitaire", 'String'>
    readonly universiteSource: FieldRef<"StatistiqueInteruniversitaire", 'String'>
    readonly universiteDestination: FieldRef<"StatistiqueInteruniversitaire", 'String'>
    readonly mois: FieldRef<"StatistiqueInteruniversitaire", 'Int'>
    readonly annee: FieldRef<"StatistiqueInteruniversitaire", 'Int'>
    readonly nbEmprunts: FieldRef<"StatistiqueInteruniversitaire", 'Int'>
    readonly nbReservations: FieldRef<"StatistiqueInteruniversitaire", 'Int'>
    readonly ressourcesPlusConsultees: FieldRef<"StatistiqueInteruniversitaire", 'String'>
    readonly domainesPlusConsultes: FieldRef<"StatistiqueInteruniversitaire", 'String'>
  }
    

  // Custom InputTypes
  /**
   * StatistiqueInteruniversitaire findUnique
   */
  export type StatistiqueInteruniversitaireFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueInteruniversitaire
     */
    select?: StatistiqueInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueInteruniversitaire
     */
    omit?: StatistiqueInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueInteruniversitaireInclude<ExtArgs> | null
    /**
     * Filter, which StatistiqueInteruniversitaire to fetch.
     */
    where: StatistiqueInteruniversitaireWhereUniqueInput
  }

  /**
   * StatistiqueInteruniversitaire findUniqueOrThrow
   */
  export type StatistiqueInteruniversitaireFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueInteruniversitaire
     */
    select?: StatistiqueInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueInteruniversitaire
     */
    omit?: StatistiqueInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueInteruniversitaireInclude<ExtArgs> | null
    /**
     * Filter, which StatistiqueInteruniversitaire to fetch.
     */
    where: StatistiqueInteruniversitaireWhereUniqueInput
  }

  /**
   * StatistiqueInteruniversitaire findFirst
   */
  export type StatistiqueInteruniversitaireFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueInteruniversitaire
     */
    select?: StatistiqueInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueInteruniversitaire
     */
    omit?: StatistiqueInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueInteruniversitaireInclude<ExtArgs> | null
    /**
     * Filter, which StatistiqueInteruniversitaire to fetch.
     */
    where?: StatistiqueInteruniversitaireWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StatistiqueInteruniversitaires to fetch.
     */
    orderBy?: StatistiqueInteruniversitaireOrderByWithRelationInput | StatistiqueInteruniversitaireOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StatistiqueInteruniversitaires.
     */
    cursor?: StatistiqueInteruniversitaireWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StatistiqueInteruniversitaires from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StatistiqueInteruniversitaires.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StatistiqueInteruniversitaires.
     */
    distinct?: StatistiqueInteruniversitaireScalarFieldEnum | StatistiqueInteruniversitaireScalarFieldEnum[]
  }

  /**
   * StatistiqueInteruniversitaire findFirstOrThrow
   */
  export type StatistiqueInteruniversitaireFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueInteruniversitaire
     */
    select?: StatistiqueInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueInteruniversitaire
     */
    omit?: StatistiqueInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueInteruniversitaireInclude<ExtArgs> | null
    /**
     * Filter, which StatistiqueInteruniversitaire to fetch.
     */
    where?: StatistiqueInteruniversitaireWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StatistiqueInteruniversitaires to fetch.
     */
    orderBy?: StatistiqueInteruniversitaireOrderByWithRelationInput | StatistiqueInteruniversitaireOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StatistiqueInteruniversitaires.
     */
    cursor?: StatistiqueInteruniversitaireWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StatistiqueInteruniversitaires from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StatistiqueInteruniversitaires.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StatistiqueInteruniversitaires.
     */
    distinct?: StatistiqueInteruniversitaireScalarFieldEnum | StatistiqueInteruniversitaireScalarFieldEnum[]
  }

  /**
   * StatistiqueInteruniversitaire findMany
   */
  export type StatistiqueInteruniversitaireFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueInteruniversitaire
     */
    select?: StatistiqueInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueInteruniversitaire
     */
    omit?: StatistiqueInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueInteruniversitaireInclude<ExtArgs> | null
    /**
     * Filter, which StatistiqueInteruniversitaires to fetch.
     */
    where?: StatistiqueInteruniversitaireWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StatistiqueInteruniversitaires to fetch.
     */
    orderBy?: StatistiqueInteruniversitaireOrderByWithRelationInput | StatistiqueInteruniversitaireOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StatistiqueInteruniversitaires.
     */
    cursor?: StatistiqueInteruniversitaireWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StatistiqueInteruniversitaires from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StatistiqueInteruniversitaires.
     */
    skip?: number
    distinct?: StatistiqueInteruniversitaireScalarFieldEnum | StatistiqueInteruniversitaireScalarFieldEnum[]
  }

  /**
   * StatistiqueInteruniversitaire create
   */
  export type StatistiqueInteruniversitaireCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueInteruniversitaire
     */
    select?: StatistiqueInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueInteruniversitaire
     */
    omit?: StatistiqueInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueInteruniversitaireInclude<ExtArgs> | null
    /**
     * The data needed to create a StatistiqueInteruniversitaire.
     */
    data: XOR<StatistiqueInteruniversitaireCreateInput, StatistiqueInteruniversitaireUncheckedCreateInput>
  }

  /**
   * StatistiqueInteruniversitaire createMany
   */
  export type StatistiqueInteruniversitaireCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StatistiqueInteruniversitaires.
     */
    data: StatistiqueInteruniversitaireCreateManyInput | StatistiqueInteruniversitaireCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StatistiqueInteruniversitaire update
   */
  export type StatistiqueInteruniversitaireUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueInteruniversitaire
     */
    select?: StatistiqueInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueInteruniversitaire
     */
    omit?: StatistiqueInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueInteruniversitaireInclude<ExtArgs> | null
    /**
     * The data needed to update a StatistiqueInteruniversitaire.
     */
    data: XOR<StatistiqueInteruniversitaireUpdateInput, StatistiqueInteruniversitaireUncheckedUpdateInput>
    /**
     * Choose, which StatistiqueInteruniversitaire to update.
     */
    where: StatistiqueInteruniversitaireWhereUniqueInput
  }

  /**
   * StatistiqueInteruniversitaire updateMany
   */
  export type StatistiqueInteruniversitaireUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StatistiqueInteruniversitaires.
     */
    data: XOR<StatistiqueInteruniversitaireUpdateManyMutationInput, StatistiqueInteruniversitaireUncheckedUpdateManyInput>
    /**
     * Filter which StatistiqueInteruniversitaires to update
     */
    where?: StatistiqueInteruniversitaireWhereInput
    /**
     * Limit how many StatistiqueInteruniversitaires to update.
     */
    limit?: number
  }

  /**
   * StatistiqueInteruniversitaire upsert
   */
  export type StatistiqueInteruniversitaireUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueInteruniversitaire
     */
    select?: StatistiqueInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueInteruniversitaire
     */
    omit?: StatistiqueInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueInteruniversitaireInclude<ExtArgs> | null
    /**
     * The filter to search for the StatistiqueInteruniversitaire to update in case it exists.
     */
    where: StatistiqueInteruniversitaireWhereUniqueInput
    /**
     * In case the StatistiqueInteruniversitaire found by the `where` argument doesn't exist, create a new StatistiqueInteruniversitaire with this data.
     */
    create: XOR<StatistiqueInteruniversitaireCreateInput, StatistiqueInteruniversitaireUncheckedCreateInput>
    /**
     * In case the StatistiqueInteruniversitaire was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StatistiqueInteruniversitaireUpdateInput, StatistiqueInteruniversitaireUncheckedUpdateInput>
  }

  /**
   * StatistiqueInteruniversitaire delete
   */
  export type StatistiqueInteruniversitaireDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueInteruniversitaire
     */
    select?: StatistiqueInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueInteruniversitaire
     */
    omit?: StatistiqueInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueInteruniversitaireInclude<ExtArgs> | null
    /**
     * Filter which StatistiqueInteruniversitaire to delete.
     */
    where: StatistiqueInteruniversitaireWhereUniqueInput
  }

  /**
   * StatistiqueInteruniversitaire deleteMany
   */
  export type StatistiqueInteruniversitaireDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StatistiqueInteruniversitaires to delete
     */
    where?: StatistiqueInteruniversitaireWhereInput
    /**
     * Limit how many StatistiqueInteruniversitaires to delete.
     */
    limit?: number
  }

  /**
   * StatistiqueInteruniversitaire without action
   */
  export type StatistiqueInteruniversitaireDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueInteruniversitaire
     */
    select?: StatistiqueInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueInteruniversitaire
     */
    omit?: StatistiqueInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueInteruniversitaireInclude<ExtArgs> | null
  }


  /**
   * Model Reservation
   */

  export type AggregateReservation = {
    _count: ReservationCountAggregateOutputType | null
    _min: ReservationMinAggregateOutputType | null
    _max: ReservationMaxAggregateOutputType | null
  }

  export type ReservationMinAggregateOutputType = {
    id: string | null
    userId: string | null
    ressourceId: string | null
    dateReservation: Date | null
    dateDebut: Date | null
    dateFin: Date | null
    statut: $Enums.StatutReservation | null
    commentaire: string | null
    universiteEmprunteur: string | null
    motifReservation: string | null
    validePar: string | null
  }

  export type ReservationMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    ressourceId: string | null
    dateReservation: Date | null
    dateDebut: Date | null
    dateFin: Date | null
    statut: $Enums.StatutReservation | null
    commentaire: string | null
    universiteEmprunteur: string | null
    motifReservation: string | null
    validePar: string | null
  }

  export type ReservationCountAggregateOutputType = {
    id: number
    userId: number
    ressourceId: number
    dateReservation: number
    dateDebut: number
    dateFin: number
    statut: number
    commentaire: number
    universiteEmprunteur: number
    motifReservation: number
    validePar: number
    _all: number
  }


  export type ReservationMinAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    dateReservation?: true
    dateDebut?: true
    dateFin?: true
    statut?: true
    commentaire?: true
    universiteEmprunteur?: true
    motifReservation?: true
    validePar?: true
  }

  export type ReservationMaxAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    dateReservation?: true
    dateDebut?: true
    dateFin?: true
    statut?: true
    commentaire?: true
    universiteEmprunteur?: true
    motifReservation?: true
    validePar?: true
  }

  export type ReservationCountAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    dateReservation?: true
    dateDebut?: true
    dateFin?: true
    statut?: true
    commentaire?: true
    universiteEmprunteur?: true
    motifReservation?: true
    validePar?: true
    _all?: true
  }

  export type ReservationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservation to aggregate.
     */
    where?: ReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservations to fetch.
     */
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reservations
    **/
    _count?: true | ReservationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservationMaxAggregateInputType
  }

  export type GetReservationAggregateType<T extends ReservationAggregateArgs> = {
        [P in keyof T & keyof AggregateReservation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReservation[P]>
      : GetScalarType<T[P], AggregateReservation[P]>
  }




  export type ReservationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservationWhereInput
    orderBy?: ReservationOrderByWithAggregationInput | ReservationOrderByWithAggregationInput[]
    by: ReservationScalarFieldEnum[] | ReservationScalarFieldEnum
    having?: ReservationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservationCountAggregateInputType | true
    _min?: ReservationMinAggregateInputType
    _max?: ReservationMaxAggregateInputType
  }

  export type ReservationGroupByOutputType = {
    id: string
    userId: string | null
    ressourceId: string
    dateReservation: Date
    dateDebut: Date
    dateFin: Date
    statut: $Enums.StatutReservation
    commentaire: string | null
    universiteEmprunteur: string
    motifReservation: string | null
    validePar: string | null
    _count: ReservationCountAggregateOutputType | null
    _min: ReservationMinAggregateOutputType | null
    _max: ReservationMaxAggregateOutputType | null
  }

  type GetReservationGroupByPayload<T extends ReservationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservationGroupByOutputType[P]>
            : GetScalarType<T[P], ReservationGroupByOutputType[P]>
        }
      >
    >


  export type ReservationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    ressourceId?: boolean
    dateReservation?: boolean
    dateDebut?: boolean
    dateFin?: boolean
    statut?: boolean
    commentaire?: boolean
    universiteEmprunteur?: boolean
    motifReservation?: boolean
    validePar?: boolean
    user?: boolean | Reservation$userArgs<ExtArgs>
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
    universiteEmprunteurRel?: boolean | UniversiteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservation"]>



  export type ReservationSelectScalar = {
    id?: boolean
    userId?: boolean
    ressourceId?: boolean
    dateReservation?: boolean
    dateDebut?: boolean
    dateFin?: boolean
    statut?: boolean
    commentaire?: boolean
    universiteEmprunteur?: boolean
    motifReservation?: boolean
    validePar?: boolean
  }

  export type ReservationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "ressourceId" | "dateReservation" | "dateDebut" | "dateFin" | "statut" | "commentaire" | "universiteEmprunteur" | "motifReservation" | "validePar", ExtArgs["result"]["reservation"]>
  export type ReservationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Reservation$userArgs<ExtArgs>
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
    universiteEmprunteurRel?: boolean | UniversiteDefaultArgs<ExtArgs>
  }

  export type $ReservationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Reservation"
    objects: {
      user: Prisma.$UserPayload<ExtArgs> | null
      ressource: Prisma.$RessourcePayload<ExtArgs>
      universiteEmprunteurRel: Prisma.$UniversitePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string | null
      ressourceId: string
      dateReservation: Date
      dateDebut: Date
      dateFin: Date
      statut: $Enums.StatutReservation
      commentaire: string | null
      universiteEmprunteur: string
      motifReservation: string | null
      validePar: string | null
    }, ExtArgs["result"]["reservation"]>
    composites: {}
  }

  type ReservationGetPayload<S extends boolean | null | undefined | ReservationDefaultArgs> = $Result.GetResult<Prisma.$ReservationPayload, S>

  type ReservationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReservationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReservationCountAggregateInputType | true
    }

  export interface ReservationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Reservation'], meta: { name: 'Reservation' } }
    /**
     * Find zero or one Reservation that matches the filter.
     * @param {ReservationFindUniqueArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReservationFindUniqueArgs>(args: SelectSubset<T, ReservationFindUniqueArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reservation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReservationFindUniqueOrThrowArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReservationFindUniqueOrThrowArgs>(args: SelectSubset<T, ReservationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reservation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationFindFirstArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReservationFindFirstArgs>(args?: SelectSubset<T, ReservationFindFirstArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reservation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationFindFirstOrThrowArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReservationFindFirstOrThrowArgs>(args?: SelectSubset<T, ReservationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reservations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reservations
     * const reservations = await prisma.reservation.findMany()
     * 
     * // Get first 10 Reservations
     * const reservations = await prisma.reservation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reservationWithIdOnly = await prisma.reservation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReservationFindManyArgs>(args?: SelectSubset<T, ReservationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reservation.
     * @param {ReservationCreateArgs} args - Arguments to create a Reservation.
     * @example
     * // Create one Reservation
     * const Reservation = await prisma.reservation.create({
     *   data: {
     *     // ... data to create a Reservation
     *   }
     * })
     * 
     */
    create<T extends ReservationCreateArgs>(args: SelectSubset<T, ReservationCreateArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reservations.
     * @param {ReservationCreateManyArgs} args - Arguments to create many Reservations.
     * @example
     * // Create many Reservations
     * const reservation = await prisma.reservation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReservationCreateManyArgs>(args?: SelectSubset<T, ReservationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Reservation.
     * @param {ReservationDeleteArgs} args - Arguments to delete one Reservation.
     * @example
     * // Delete one Reservation
     * const Reservation = await prisma.reservation.delete({
     *   where: {
     *     // ... filter to delete one Reservation
     *   }
     * })
     * 
     */
    delete<T extends ReservationDeleteArgs>(args: SelectSubset<T, ReservationDeleteArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reservation.
     * @param {ReservationUpdateArgs} args - Arguments to update one Reservation.
     * @example
     * // Update one Reservation
     * const reservation = await prisma.reservation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReservationUpdateArgs>(args: SelectSubset<T, ReservationUpdateArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reservations.
     * @param {ReservationDeleteManyArgs} args - Arguments to filter Reservations to delete.
     * @example
     * // Delete a few Reservations
     * const { count } = await prisma.reservation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReservationDeleteManyArgs>(args?: SelectSubset<T, ReservationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reservations
     * const reservation = await prisma.reservation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReservationUpdateManyArgs>(args: SelectSubset<T, ReservationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Reservation.
     * @param {ReservationUpsertArgs} args - Arguments to update or create a Reservation.
     * @example
     * // Update or create a Reservation
     * const reservation = await prisma.reservation.upsert({
     *   create: {
     *     // ... data to create a Reservation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reservation we want to update
     *   }
     * })
     */
    upsert<T extends ReservationUpsertArgs>(args: SelectSubset<T, ReservationUpsertArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reservations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationCountArgs} args - Arguments to filter Reservations to count.
     * @example
     * // Count the number of Reservations
     * const count = await prisma.reservation.count({
     *   where: {
     *     // ... the filter for the Reservations we want to count
     *   }
     * })
    **/
    count<T extends ReservationCountArgs>(
      args?: Subset<T, ReservationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reservation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservationAggregateArgs>(args: Subset<T, ReservationAggregateArgs>): Prisma.PrismaPromise<GetReservationAggregateType<T>>

    /**
     * Group by Reservation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservationGroupByArgs['orderBy'] }
        : { orderBy?: ReservationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Reservation model
   */
  readonly fields: ReservationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Reservation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends Reservation$userArgs<ExtArgs> = {}>(args?: Subset<T, Reservation$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ressource<T extends RessourceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RessourceDefaultArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    universiteEmprunteurRel<T extends UniversiteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversiteDefaultArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Reservation model
   */
  interface ReservationFieldRefs {
    readonly id: FieldRef<"Reservation", 'String'>
    readonly userId: FieldRef<"Reservation", 'String'>
    readonly ressourceId: FieldRef<"Reservation", 'String'>
    readonly dateReservation: FieldRef<"Reservation", 'DateTime'>
    readonly dateDebut: FieldRef<"Reservation", 'DateTime'>
    readonly dateFin: FieldRef<"Reservation", 'DateTime'>
    readonly statut: FieldRef<"Reservation", 'StatutReservation'>
    readonly commentaire: FieldRef<"Reservation", 'String'>
    readonly universiteEmprunteur: FieldRef<"Reservation", 'String'>
    readonly motifReservation: FieldRef<"Reservation", 'String'>
    readonly validePar: FieldRef<"Reservation", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Reservation findUnique
   */
  export type ReservationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservation to fetch.
     */
    where: ReservationWhereUniqueInput
  }

  /**
   * Reservation findUniqueOrThrow
   */
  export type ReservationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservation to fetch.
     */
    where: ReservationWhereUniqueInput
  }

  /**
   * Reservation findFirst
   */
  export type ReservationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservation to fetch.
     */
    where?: ReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservations to fetch.
     */
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservations.
     */
    cursor?: ReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservations.
     */
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Reservation findFirstOrThrow
   */
  export type ReservationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservation to fetch.
     */
    where?: ReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservations to fetch.
     */
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservations.
     */
    cursor?: ReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservations.
     */
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Reservation findMany
   */
  export type ReservationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservations to fetch.
     */
    where?: ReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservations to fetch.
     */
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reservations.
     */
    cursor?: ReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservations.
     */
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Reservation create
   */
  export type ReservationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * The data needed to create a Reservation.
     */
    data: XOR<ReservationCreateInput, ReservationUncheckedCreateInput>
  }

  /**
   * Reservation createMany
   */
  export type ReservationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reservations.
     */
    data: ReservationCreateManyInput | ReservationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Reservation update
   */
  export type ReservationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * The data needed to update a Reservation.
     */
    data: XOR<ReservationUpdateInput, ReservationUncheckedUpdateInput>
    /**
     * Choose, which Reservation to update.
     */
    where: ReservationWhereUniqueInput
  }

  /**
   * Reservation updateMany
   */
  export type ReservationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reservations.
     */
    data: XOR<ReservationUpdateManyMutationInput, ReservationUncheckedUpdateManyInput>
    /**
     * Filter which Reservations to update
     */
    where?: ReservationWhereInput
    /**
     * Limit how many Reservations to update.
     */
    limit?: number
  }

  /**
   * Reservation upsert
   */
  export type ReservationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * The filter to search for the Reservation to update in case it exists.
     */
    where: ReservationWhereUniqueInput
    /**
     * In case the Reservation found by the `where` argument doesn't exist, create a new Reservation with this data.
     */
    create: XOR<ReservationCreateInput, ReservationUncheckedCreateInput>
    /**
     * In case the Reservation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservationUpdateInput, ReservationUncheckedUpdateInput>
  }

  /**
   * Reservation delete
   */
  export type ReservationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter which Reservation to delete.
     */
    where: ReservationWhereUniqueInput
  }

  /**
   * Reservation deleteMany
   */
  export type ReservationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservations to delete
     */
    where?: ReservationWhereInput
    /**
     * Limit how many Reservations to delete.
     */
    limit?: number
  }

  /**
   * Reservation.user
   */
  export type Reservation$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Reservation without action
   */
  export type ReservationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
  }


  /**
   * Model ExemplairePhysique
   */

  export type AggregateExemplairePhysique = {
    _count: ExemplairePhysiqueCountAggregateOutputType | null
    _min: ExemplairePhysiqueMinAggregateOutputType | null
    _max: ExemplairePhysiqueMaxAggregateOutputType | null
  }

  export type ExemplairePhysiqueMinAggregateOutputType = {
    id: string | null
    ressourceId: string | null
    cote: string | null
    etat: $Enums.EtatExemplaire | null
    disponible: boolean | null
    localisation: string | null
    dateAcquisition: Date | null
    estReservableExterne: boolean | null
    estEmpruntableExterne: boolean | null
  }

  export type ExemplairePhysiqueMaxAggregateOutputType = {
    id: string | null
    ressourceId: string | null
    cote: string | null
    etat: $Enums.EtatExemplaire | null
    disponible: boolean | null
    localisation: string | null
    dateAcquisition: Date | null
    estReservableExterne: boolean | null
    estEmpruntableExterne: boolean | null
  }

  export type ExemplairePhysiqueCountAggregateOutputType = {
    id: number
    ressourceId: number
    cote: number
    etat: number
    disponible: number
    localisation: number
    dateAcquisition: number
    estReservableExterne: number
    estEmpruntableExterne: number
    _all: number
  }


  export type ExemplairePhysiqueMinAggregateInputType = {
    id?: true
    ressourceId?: true
    cote?: true
    etat?: true
    disponible?: true
    localisation?: true
    dateAcquisition?: true
    estReservableExterne?: true
    estEmpruntableExterne?: true
  }

  export type ExemplairePhysiqueMaxAggregateInputType = {
    id?: true
    ressourceId?: true
    cote?: true
    etat?: true
    disponible?: true
    localisation?: true
    dateAcquisition?: true
    estReservableExterne?: true
    estEmpruntableExterne?: true
  }

  export type ExemplairePhysiqueCountAggregateInputType = {
    id?: true
    ressourceId?: true
    cote?: true
    etat?: true
    disponible?: true
    localisation?: true
    dateAcquisition?: true
    estReservableExterne?: true
    estEmpruntableExterne?: true
    _all?: true
  }

  export type ExemplairePhysiqueAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ExemplairePhysique to aggregate.
     */
    where?: ExemplairePhysiqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExemplairePhysiques to fetch.
     */
    orderBy?: ExemplairePhysiqueOrderByWithRelationInput | ExemplairePhysiqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ExemplairePhysiqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExemplairePhysiques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExemplairePhysiques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ExemplairePhysiques
    **/
    _count?: true | ExemplairePhysiqueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ExemplairePhysiqueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ExemplairePhysiqueMaxAggregateInputType
  }

  export type GetExemplairePhysiqueAggregateType<T extends ExemplairePhysiqueAggregateArgs> = {
        [P in keyof T & keyof AggregateExemplairePhysique]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateExemplairePhysique[P]>
      : GetScalarType<T[P], AggregateExemplairePhysique[P]>
  }




  export type ExemplairePhysiqueGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExemplairePhysiqueWhereInput
    orderBy?: ExemplairePhysiqueOrderByWithAggregationInput | ExemplairePhysiqueOrderByWithAggregationInput[]
    by: ExemplairePhysiqueScalarFieldEnum[] | ExemplairePhysiqueScalarFieldEnum
    having?: ExemplairePhysiqueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ExemplairePhysiqueCountAggregateInputType | true
    _min?: ExemplairePhysiqueMinAggregateInputType
    _max?: ExemplairePhysiqueMaxAggregateInputType
  }

  export type ExemplairePhysiqueGroupByOutputType = {
    id: string
    ressourceId: string
    cote: string
    etat: $Enums.EtatExemplaire
    disponible: boolean
    localisation: string
    dateAcquisition: Date | null
    estReservableExterne: boolean | null
    estEmpruntableExterne: boolean | null
    _count: ExemplairePhysiqueCountAggregateOutputType | null
    _min: ExemplairePhysiqueMinAggregateOutputType | null
    _max: ExemplairePhysiqueMaxAggregateOutputType | null
  }

  type GetExemplairePhysiqueGroupByPayload<T extends ExemplairePhysiqueGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ExemplairePhysiqueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ExemplairePhysiqueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ExemplairePhysiqueGroupByOutputType[P]>
            : GetScalarType<T[P], ExemplairePhysiqueGroupByOutputType[P]>
        }
      >
    >


  export type ExemplairePhysiqueSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ressourceId?: boolean
    cote?: boolean
    etat?: boolean
    disponible?: boolean
    localisation?: boolean
    dateAcquisition?: boolean
    estReservableExterne?: boolean
    estEmpruntableExterne?: boolean
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
    emprunts?: boolean | ExemplairePhysique$empruntsArgs<ExtArgs>
    _count?: boolean | ExemplairePhysiqueCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["exemplairePhysique"]>



  export type ExemplairePhysiqueSelectScalar = {
    id?: boolean
    ressourceId?: boolean
    cote?: boolean
    etat?: boolean
    disponible?: boolean
    localisation?: boolean
    dateAcquisition?: boolean
    estReservableExterne?: boolean
    estEmpruntableExterne?: boolean
  }

  export type ExemplairePhysiqueOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "ressourceId" | "cote" | "etat" | "disponible" | "localisation" | "dateAcquisition" | "estReservableExterne" | "estEmpruntableExterne", ExtArgs["result"]["exemplairePhysique"]>
  export type ExemplairePhysiqueInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
    emprunts?: boolean | ExemplairePhysique$empruntsArgs<ExtArgs>
    _count?: boolean | ExemplairePhysiqueCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ExemplairePhysiquePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ExemplairePhysique"
    objects: {
      ressource: Prisma.$RessourcePayload<ExtArgs>
      emprunts: Prisma.$EmpruntPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      ressourceId: string
      cote: string
      etat: $Enums.EtatExemplaire
      disponible: boolean
      localisation: string
      dateAcquisition: Date | null
      estReservableExterne: boolean | null
      estEmpruntableExterne: boolean | null
    }, ExtArgs["result"]["exemplairePhysique"]>
    composites: {}
  }

  type ExemplairePhysiqueGetPayload<S extends boolean | null | undefined | ExemplairePhysiqueDefaultArgs> = $Result.GetResult<Prisma.$ExemplairePhysiquePayload, S>

  type ExemplairePhysiqueCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ExemplairePhysiqueFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ExemplairePhysiqueCountAggregateInputType | true
    }

  export interface ExemplairePhysiqueDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ExemplairePhysique'], meta: { name: 'ExemplairePhysique' } }
    /**
     * Find zero or one ExemplairePhysique that matches the filter.
     * @param {ExemplairePhysiqueFindUniqueArgs} args - Arguments to find a ExemplairePhysique
     * @example
     * // Get one ExemplairePhysique
     * const exemplairePhysique = await prisma.exemplairePhysique.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ExemplairePhysiqueFindUniqueArgs>(args: SelectSubset<T, ExemplairePhysiqueFindUniqueArgs<ExtArgs>>): Prisma__ExemplairePhysiqueClient<$Result.GetResult<Prisma.$ExemplairePhysiquePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ExemplairePhysique that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ExemplairePhysiqueFindUniqueOrThrowArgs} args - Arguments to find a ExemplairePhysique
     * @example
     * // Get one ExemplairePhysique
     * const exemplairePhysique = await prisma.exemplairePhysique.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ExemplairePhysiqueFindUniqueOrThrowArgs>(args: SelectSubset<T, ExemplairePhysiqueFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ExemplairePhysiqueClient<$Result.GetResult<Prisma.$ExemplairePhysiquePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ExemplairePhysique that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExemplairePhysiqueFindFirstArgs} args - Arguments to find a ExemplairePhysique
     * @example
     * // Get one ExemplairePhysique
     * const exemplairePhysique = await prisma.exemplairePhysique.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ExemplairePhysiqueFindFirstArgs>(args?: SelectSubset<T, ExemplairePhysiqueFindFirstArgs<ExtArgs>>): Prisma__ExemplairePhysiqueClient<$Result.GetResult<Prisma.$ExemplairePhysiquePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ExemplairePhysique that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExemplairePhysiqueFindFirstOrThrowArgs} args - Arguments to find a ExemplairePhysique
     * @example
     * // Get one ExemplairePhysique
     * const exemplairePhysique = await prisma.exemplairePhysique.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ExemplairePhysiqueFindFirstOrThrowArgs>(args?: SelectSubset<T, ExemplairePhysiqueFindFirstOrThrowArgs<ExtArgs>>): Prisma__ExemplairePhysiqueClient<$Result.GetResult<Prisma.$ExemplairePhysiquePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ExemplairePhysiques that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExemplairePhysiqueFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ExemplairePhysiques
     * const exemplairePhysiques = await prisma.exemplairePhysique.findMany()
     * 
     * // Get first 10 ExemplairePhysiques
     * const exemplairePhysiques = await prisma.exemplairePhysique.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const exemplairePhysiqueWithIdOnly = await prisma.exemplairePhysique.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ExemplairePhysiqueFindManyArgs>(args?: SelectSubset<T, ExemplairePhysiqueFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExemplairePhysiquePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ExemplairePhysique.
     * @param {ExemplairePhysiqueCreateArgs} args - Arguments to create a ExemplairePhysique.
     * @example
     * // Create one ExemplairePhysique
     * const ExemplairePhysique = await prisma.exemplairePhysique.create({
     *   data: {
     *     // ... data to create a ExemplairePhysique
     *   }
     * })
     * 
     */
    create<T extends ExemplairePhysiqueCreateArgs>(args: SelectSubset<T, ExemplairePhysiqueCreateArgs<ExtArgs>>): Prisma__ExemplairePhysiqueClient<$Result.GetResult<Prisma.$ExemplairePhysiquePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ExemplairePhysiques.
     * @param {ExemplairePhysiqueCreateManyArgs} args - Arguments to create many ExemplairePhysiques.
     * @example
     * // Create many ExemplairePhysiques
     * const exemplairePhysique = await prisma.exemplairePhysique.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ExemplairePhysiqueCreateManyArgs>(args?: SelectSubset<T, ExemplairePhysiqueCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ExemplairePhysique.
     * @param {ExemplairePhysiqueDeleteArgs} args - Arguments to delete one ExemplairePhysique.
     * @example
     * // Delete one ExemplairePhysique
     * const ExemplairePhysique = await prisma.exemplairePhysique.delete({
     *   where: {
     *     // ... filter to delete one ExemplairePhysique
     *   }
     * })
     * 
     */
    delete<T extends ExemplairePhysiqueDeleteArgs>(args: SelectSubset<T, ExemplairePhysiqueDeleteArgs<ExtArgs>>): Prisma__ExemplairePhysiqueClient<$Result.GetResult<Prisma.$ExemplairePhysiquePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ExemplairePhysique.
     * @param {ExemplairePhysiqueUpdateArgs} args - Arguments to update one ExemplairePhysique.
     * @example
     * // Update one ExemplairePhysique
     * const exemplairePhysique = await prisma.exemplairePhysique.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ExemplairePhysiqueUpdateArgs>(args: SelectSubset<T, ExemplairePhysiqueUpdateArgs<ExtArgs>>): Prisma__ExemplairePhysiqueClient<$Result.GetResult<Prisma.$ExemplairePhysiquePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ExemplairePhysiques.
     * @param {ExemplairePhysiqueDeleteManyArgs} args - Arguments to filter ExemplairePhysiques to delete.
     * @example
     * // Delete a few ExemplairePhysiques
     * const { count } = await prisma.exemplairePhysique.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ExemplairePhysiqueDeleteManyArgs>(args?: SelectSubset<T, ExemplairePhysiqueDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ExemplairePhysiques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExemplairePhysiqueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ExemplairePhysiques
     * const exemplairePhysique = await prisma.exemplairePhysique.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ExemplairePhysiqueUpdateManyArgs>(args: SelectSubset<T, ExemplairePhysiqueUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ExemplairePhysique.
     * @param {ExemplairePhysiqueUpsertArgs} args - Arguments to update or create a ExemplairePhysique.
     * @example
     * // Update or create a ExemplairePhysique
     * const exemplairePhysique = await prisma.exemplairePhysique.upsert({
     *   create: {
     *     // ... data to create a ExemplairePhysique
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ExemplairePhysique we want to update
     *   }
     * })
     */
    upsert<T extends ExemplairePhysiqueUpsertArgs>(args: SelectSubset<T, ExemplairePhysiqueUpsertArgs<ExtArgs>>): Prisma__ExemplairePhysiqueClient<$Result.GetResult<Prisma.$ExemplairePhysiquePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ExemplairePhysiques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExemplairePhysiqueCountArgs} args - Arguments to filter ExemplairePhysiques to count.
     * @example
     * // Count the number of ExemplairePhysiques
     * const count = await prisma.exemplairePhysique.count({
     *   where: {
     *     // ... the filter for the ExemplairePhysiques we want to count
     *   }
     * })
    **/
    count<T extends ExemplairePhysiqueCountArgs>(
      args?: Subset<T, ExemplairePhysiqueCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ExemplairePhysiqueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ExemplairePhysique.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExemplairePhysiqueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ExemplairePhysiqueAggregateArgs>(args: Subset<T, ExemplairePhysiqueAggregateArgs>): Prisma.PrismaPromise<GetExemplairePhysiqueAggregateType<T>>

    /**
     * Group by ExemplairePhysique.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExemplairePhysiqueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ExemplairePhysiqueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ExemplairePhysiqueGroupByArgs['orderBy'] }
        : { orderBy?: ExemplairePhysiqueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ExemplairePhysiqueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetExemplairePhysiqueGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ExemplairePhysique model
   */
  readonly fields: ExemplairePhysiqueFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ExemplairePhysique.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ExemplairePhysiqueClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ressource<T extends RessourceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RessourceDefaultArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    emprunts<T extends ExemplairePhysique$empruntsArgs<ExtArgs> = {}>(args?: Subset<T, ExemplairePhysique$empruntsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmpruntPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ExemplairePhysique model
   */
  interface ExemplairePhysiqueFieldRefs {
    readonly id: FieldRef<"ExemplairePhysique", 'String'>
    readonly ressourceId: FieldRef<"ExemplairePhysique", 'String'>
    readonly cote: FieldRef<"ExemplairePhysique", 'String'>
    readonly etat: FieldRef<"ExemplairePhysique", 'EtatExemplaire'>
    readonly disponible: FieldRef<"ExemplairePhysique", 'Boolean'>
    readonly localisation: FieldRef<"ExemplairePhysique", 'String'>
    readonly dateAcquisition: FieldRef<"ExemplairePhysique", 'DateTime'>
    readonly estReservableExterne: FieldRef<"ExemplairePhysique", 'Boolean'>
    readonly estEmpruntableExterne: FieldRef<"ExemplairePhysique", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * ExemplairePhysique findUnique
   */
  export type ExemplairePhysiqueFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExemplairePhysique
     */
    select?: ExemplairePhysiqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExemplairePhysique
     */
    omit?: ExemplairePhysiqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExemplairePhysiqueInclude<ExtArgs> | null
    /**
     * Filter, which ExemplairePhysique to fetch.
     */
    where: ExemplairePhysiqueWhereUniqueInput
  }

  /**
   * ExemplairePhysique findUniqueOrThrow
   */
  export type ExemplairePhysiqueFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExemplairePhysique
     */
    select?: ExemplairePhysiqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExemplairePhysique
     */
    omit?: ExemplairePhysiqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExemplairePhysiqueInclude<ExtArgs> | null
    /**
     * Filter, which ExemplairePhysique to fetch.
     */
    where: ExemplairePhysiqueWhereUniqueInput
  }

  /**
   * ExemplairePhysique findFirst
   */
  export type ExemplairePhysiqueFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExemplairePhysique
     */
    select?: ExemplairePhysiqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExemplairePhysique
     */
    omit?: ExemplairePhysiqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExemplairePhysiqueInclude<ExtArgs> | null
    /**
     * Filter, which ExemplairePhysique to fetch.
     */
    where?: ExemplairePhysiqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExemplairePhysiques to fetch.
     */
    orderBy?: ExemplairePhysiqueOrderByWithRelationInput | ExemplairePhysiqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ExemplairePhysiques.
     */
    cursor?: ExemplairePhysiqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExemplairePhysiques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExemplairePhysiques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ExemplairePhysiques.
     */
    distinct?: ExemplairePhysiqueScalarFieldEnum | ExemplairePhysiqueScalarFieldEnum[]
  }

  /**
   * ExemplairePhysique findFirstOrThrow
   */
  export type ExemplairePhysiqueFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExemplairePhysique
     */
    select?: ExemplairePhysiqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExemplairePhysique
     */
    omit?: ExemplairePhysiqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExemplairePhysiqueInclude<ExtArgs> | null
    /**
     * Filter, which ExemplairePhysique to fetch.
     */
    where?: ExemplairePhysiqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExemplairePhysiques to fetch.
     */
    orderBy?: ExemplairePhysiqueOrderByWithRelationInput | ExemplairePhysiqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ExemplairePhysiques.
     */
    cursor?: ExemplairePhysiqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExemplairePhysiques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExemplairePhysiques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ExemplairePhysiques.
     */
    distinct?: ExemplairePhysiqueScalarFieldEnum | ExemplairePhysiqueScalarFieldEnum[]
  }

  /**
   * ExemplairePhysique findMany
   */
  export type ExemplairePhysiqueFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExemplairePhysique
     */
    select?: ExemplairePhysiqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExemplairePhysique
     */
    omit?: ExemplairePhysiqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExemplairePhysiqueInclude<ExtArgs> | null
    /**
     * Filter, which ExemplairePhysiques to fetch.
     */
    where?: ExemplairePhysiqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExemplairePhysiques to fetch.
     */
    orderBy?: ExemplairePhysiqueOrderByWithRelationInput | ExemplairePhysiqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ExemplairePhysiques.
     */
    cursor?: ExemplairePhysiqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExemplairePhysiques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExemplairePhysiques.
     */
    skip?: number
    distinct?: ExemplairePhysiqueScalarFieldEnum | ExemplairePhysiqueScalarFieldEnum[]
  }

  /**
   * ExemplairePhysique create
   */
  export type ExemplairePhysiqueCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExemplairePhysique
     */
    select?: ExemplairePhysiqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExemplairePhysique
     */
    omit?: ExemplairePhysiqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExemplairePhysiqueInclude<ExtArgs> | null
    /**
     * The data needed to create a ExemplairePhysique.
     */
    data: XOR<ExemplairePhysiqueCreateInput, ExemplairePhysiqueUncheckedCreateInput>
  }

  /**
   * ExemplairePhysique createMany
   */
  export type ExemplairePhysiqueCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ExemplairePhysiques.
     */
    data: ExemplairePhysiqueCreateManyInput | ExemplairePhysiqueCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ExemplairePhysique update
   */
  export type ExemplairePhysiqueUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExemplairePhysique
     */
    select?: ExemplairePhysiqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExemplairePhysique
     */
    omit?: ExemplairePhysiqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExemplairePhysiqueInclude<ExtArgs> | null
    /**
     * The data needed to update a ExemplairePhysique.
     */
    data: XOR<ExemplairePhysiqueUpdateInput, ExemplairePhysiqueUncheckedUpdateInput>
    /**
     * Choose, which ExemplairePhysique to update.
     */
    where: ExemplairePhysiqueWhereUniqueInput
  }

  /**
   * ExemplairePhysique updateMany
   */
  export type ExemplairePhysiqueUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ExemplairePhysiques.
     */
    data: XOR<ExemplairePhysiqueUpdateManyMutationInput, ExemplairePhysiqueUncheckedUpdateManyInput>
    /**
     * Filter which ExemplairePhysiques to update
     */
    where?: ExemplairePhysiqueWhereInput
    /**
     * Limit how many ExemplairePhysiques to update.
     */
    limit?: number
  }

  /**
   * ExemplairePhysique upsert
   */
  export type ExemplairePhysiqueUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExemplairePhysique
     */
    select?: ExemplairePhysiqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExemplairePhysique
     */
    omit?: ExemplairePhysiqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExemplairePhysiqueInclude<ExtArgs> | null
    /**
     * The filter to search for the ExemplairePhysique to update in case it exists.
     */
    where: ExemplairePhysiqueWhereUniqueInput
    /**
     * In case the ExemplairePhysique found by the `where` argument doesn't exist, create a new ExemplairePhysique with this data.
     */
    create: XOR<ExemplairePhysiqueCreateInput, ExemplairePhysiqueUncheckedCreateInput>
    /**
     * In case the ExemplairePhysique was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ExemplairePhysiqueUpdateInput, ExemplairePhysiqueUncheckedUpdateInput>
  }

  /**
   * ExemplairePhysique delete
   */
  export type ExemplairePhysiqueDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExemplairePhysique
     */
    select?: ExemplairePhysiqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExemplairePhysique
     */
    omit?: ExemplairePhysiqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExemplairePhysiqueInclude<ExtArgs> | null
    /**
     * Filter which ExemplairePhysique to delete.
     */
    where: ExemplairePhysiqueWhereUniqueInput
  }

  /**
   * ExemplairePhysique deleteMany
   */
  export type ExemplairePhysiqueDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ExemplairePhysiques to delete
     */
    where?: ExemplairePhysiqueWhereInput
    /**
     * Limit how many ExemplairePhysiques to delete.
     */
    limit?: number
  }

  /**
   * ExemplairePhysique.emprunts
   */
  export type ExemplairePhysique$empruntsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprunt
     */
    select?: EmpruntSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprunt
     */
    omit?: EmpruntOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpruntInclude<ExtArgs> | null
    where?: EmpruntWhereInput
    orderBy?: EmpruntOrderByWithRelationInput | EmpruntOrderByWithRelationInput[]
    cursor?: EmpruntWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmpruntScalarFieldEnum | EmpruntScalarFieldEnum[]
  }

  /**
   * ExemplairePhysique without action
   */
  export type ExemplairePhysiqueDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExemplairePhysique
     */
    select?: ExemplairePhysiqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExemplairePhysique
     */
    omit?: ExemplairePhysiqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExemplairePhysiqueInclude<ExtArgs> | null
  }


  /**
   * Model Emprunt
   */

  export type AggregateEmprunt = {
    _count: EmpruntCountAggregateOutputType | null
    _min: EmpruntMinAggregateOutputType | null
    _max: EmpruntMaxAggregateOutputType | null
  }

  export type EmpruntMinAggregateOutputType = {
    id: string | null
    exemplaireId: string | null
    userId: string | null
    dateEmprunt: Date | null
    dateRetourPrevue: Date | null
    dateRetourEffective: Date | null
    statut: $Enums.StatutEmprunt | null
    commentaire: string | null
    universiteEmprunteur: string | null
    estEmpruntExterne: boolean | null
    motifEmprunt: string | null
    validePar: string | null
  }

  export type EmpruntMaxAggregateOutputType = {
    id: string | null
    exemplaireId: string | null
    userId: string | null
    dateEmprunt: Date | null
    dateRetourPrevue: Date | null
    dateRetourEffective: Date | null
    statut: $Enums.StatutEmprunt | null
    commentaire: string | null
    universiteEmprunteur: string | null
    estEmpruntExterne: boolean | null
    motifEmprunt: string | null
    validePar: string | null
  }

  export type EmpruntCountAggregateOutputType = {
    id: number
    exemplaireId: number
    userId: number
    dateEmprunt: number
    dateRetourPrevue: number
    dateRetourEffective: number
    statut: number
    commentaire: number
    universiteEmprunteur: number
    estEmpruntExterne: number
    motifEmprunt: number
    validePar: number
    _all: number
  }


  export type EmpruntMinAggregateInputType = {
    id?: true
    exemplaireId?: true
    userId?: true
    dateEmprunt?: true
    dateRetourPrevue?: true
    dateRetourEffective?: true
    statut?: true
    commentaire?: true
    universiteEmprunteur?: true
    estEmpruntExterne?: true
    motifEmprunt?: true
    validePar?: true
  }

  export type EmpruntMaxAggregateInputType = {
    id?: true
    exemplaireId?: true
    userId?: true
    dateEmprunt?: true
    dateRetourPrevue?: true
    dateRetourEffective?: true
    statut?: true
    commentaire?: true
    universiteEmprunteur?: true
    estEmpruntExterne?: true
    motifEmprunt?: true
    validePar?: true
  }

  export type EmpruntCountAggregateInputType = {
    id?: true
    exemplaireId?: true
    userId?: true
    dateEmprunt?: true
    dateRetourPrevue?: true
    dateRetourEffective?: true
    statut?: true
    commentaire?: true
    universiteEmprunteur?: true
    estEmpruntExterne?: true
    motifEmprunt?: true
    validePar?: true
    _all?: true
  }

  export type EmpruntAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Emprunt to aggregate.
     */
    where?: EmpruntWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Emprunts to fetch.
     */
    orderBy?: EmpruntOrderByWithRelationInput | EmpruntOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EmpruntWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Emprunts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Emprunts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Emprunts
    **/
    _count?: true | EmpruntCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmpruntMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmpruntMaxAggregateInputType
  }

  export type GetEmpruntAggregateType<T extends EmpruntAggregateArgs> = {
        [P in keyof T & keyof AggregateEmprunt]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmprunt[P]>
      : GetScalarType<T[P], AggregateEmprunt[P]>
  }




  export type EmpruntGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmpruntWhereInput
    orderBy?: EmpruntOrderByWithAggregationInput | EmpruntOrderByWithAggregationInput[]
    by: EmpruntScalarFieldEnum[] | EmpruntScalarFieldEnum
    having?: EmpruntScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmpruntCountAggregateInputType | true
    _min?: EmpruntMinAggregateInputType
    _max?: EmpruntMaxAggregateInputType
  }

  export type EmpruntGroupByOutputType = {
    id: string
    exemplaireId: string
    userId: string
    dateEmprunt: Date
    dateRetourPrevue: Date
    dateRetourEffective: Date | null
    statut: $Enums.StatutEmprunt
    commentaire: string | null
    universiteEmprunteur: string
    estEmpruntExterne: boolean
    motifEmprunt: string | null
    validePar: string | null
    _count: EmpruntCountAggregateOutputType | null
    _min: EmpruntMinAggregateOutputType | null
    _max: EmpruntMaxAggregateOutputType | null
  }

  type GetEmpruntGroupByPayload<T extends EmpruntGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmpruntGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmpruntGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmpruntGroupByOutputType[P]>
            : GetScalarType<T[P], EmpruntGroupByOutputType[P]>
        }
      >
    >


  export type EmpruntSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    exemplaireId?: boolean
    userId?: boolean
    dateEmprunt?: boolean
    dateRetourPrevue?: boolean
    dateRetourEffective?: boolean
    statut?: boolean
    commentaire?: boolean
    universiteEmprunteur?: boolean
    estEmpruntExterne?: boolean
    motifEmprunt?: boolean
    validePar?: boolean
    exemplaire?: boolean | ExemplairePhysiqueDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    universiteEmprunteurRel?: boolean | UniversiteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["emprunt"]>



  export type EmpruntSelectScalar = {
    id?: boolean
    exemplaireId?: boolean
    userId?: boolean
    dateEmprunt?: boolean
    dateRetourPrevue?: boolean
    dateRetourEffective?: boolean
    statut?: boolean
    commentaire?: boolean
    universiteEmprunteur?: boolean
    estEmpruntExterne?: boolean
    motifEmprunt?: boolean
    validePar?: boolean
  }

  export type EmpruntOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "exemplaireId" | "userId" | "dateEmprunt" | "dateRetourPrevue" | "dateRetourEffective" | "statut" | "commentaire" | "universiteEmprunteur" | "estEmpruntExterne" | "motifEmprunt" | "validePar", ExtArgs["result"]["emprunt"]>
  export type EmpruntInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    exemplaire?: boolean | ExemplairePhysiqueDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    universiteEmprunteurRel?: boolean | UniversiteDefaultArgs<ExtArgs>
  }

  export type $EmpruntPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Emprunt"
    objects: {
      exemplaire: Prisma.$ExemplairePhysiquePayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
      universiteEmprunteurRel: Prisma.$UniversitePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      exemplaireId: string
      userId: string
      dateEmprunt: Date
      dateRetourPrevue: Date
      dateRetourEffective: Date | null
      statut: $Enums.StatutEmprunt
      commentaire: string | null
      universiteEmprunteur: string
      estEmpruntExterne: boolean
      motifEmprunt: string | null
      validePar: string | null
    }, ExtArgs["result"]["emprunt"]>
    composites: {}
  }

  type EmpruntGetPayload<S extends boolean | null | undefined | EmpruntDefaultArgs> = $Result.GetResult<Prisma.$EmpruntPayload, S>

  type EmpruntCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EmpruntFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmpruntCountAggregateInputType | true
    }

  export interface EmpruntDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Emprunt'], meta: { name: 'Emprunt' } }
    /**
     * Find zero or one Emprunt that matches the filter.
     * @param {EmpruntFindUniqueArgs} args - Arguments to find a Emprunt
     * @example
     * // Get one Emprunt
     * const emprunt = await prisma.emprunt.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EmpruntFindUniqueArgs>(args: SelectSubset<T, EmpruntFindUniqueArgs<ExtArgs>>): Prisma__EmpruntClient<$Result.GetResult<Prisma.$EmpruntPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Emprunt that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EmpruntFindUniqueOrThrowArgs} args - Arguments to find a Emprunt
     * @example
     * // Get one Emprunt
     * const emprunt = await prisma.emprunt.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EmpruntFindUniqueOrThrowArgs>(args: SelectSubset<T, EmpruntFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EmpruntClient<$Result.GetResult<Prisma.$EmpruntPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Emprunt that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpruntFindFirstArgs} args - Arguments to find a Emprunt
     * @example
     * // Get one Emprunt
     * const emprunt = await prisma.emprunt.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EmpruntFindFirstArgs>(args?: SelectSubset<T, EmpruntFindFirstArgs<ExtArgs>>): Prisma__EmpruntClient<$Result.GetResult<Prisma.$EmpruntPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Emprunt that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpruntFindFirstOrThrowArgs} args - Arguments to find a Emprunt
     * @example
     * // Get one Emprunt
     * const emprunt = await prisma.emprunt.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EmpruntFindFirstOrThrowArgs>(args?: SelectSubset<T, EmpruntFindFirstOrThrowArgs<ExtArgs>>): Prisma__EmpruntClient<$Result.GetResult<Prisma.$EmpruntPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Emprunts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpruntFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Emprunts
     * const emprunts = await prisma.emprunt.findMany()
     * 
     * // Get first 10 Emprunts
     * const emprunts = await prisma.emprunt.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const empruntWithIdOnly = await prisma.emprunt.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EmpruntFindManyArgs>(args?: SelectSubset<T, EmpruntFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmpruntPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Emprunt.
     * @param {EmpruntCreateArgs} args - Arguments to create a Emprunt.
     * @example
     * // Create one Emprunt
     * const Emprunt = await prisma.emprunt.create({
     *   data: {
     *     // ... data to create a Emprunt
     *   }
     * })
     * 
     */
    create<T extends EmpruntCreateArgs>(args: SelectSubset<T, EmpruntCreateArgs<ExtArgs>>): Prisma__EmpruntClient<$Result.GetResult<Prisma.$EmpruntPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Emprunts.
     * @param {EmpruntCreateManyArgs} args - Arguments to create many Emprunts.
     * @example
     * // Create many Emprunts
     * const emprunt = await prisma.emprunt.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EmpruntCreateManyArgs>(args?: SelectSubset<T, EmpruntCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Emprunt.
     * @param {EmpruntDeleteArgs} args - Arguments to delete one Emprunt.
     * @example
     * // Delete one Emprunt
     * const Emprunt = await prisma.emprunt.delete({
     *   where: {
     *     // ... filter to delete one Emprunt
     *   }
     * })
     * 
     */
    delete<T extends EmpruntDeleteArgs>(args: SelectSubset<T, EmpruntDeleteArgs<ExtArgs>>): Prisma__EmpruntClient<$Result.GetResult<Prisma.$EmpruntPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Emprunt.
     * @param {EmpruntUpdateArgs} args - Arguments to update one Emprunt.
     * @example
     * // Update one Emprunt
     * const emprunt = await prisma.emprunt.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EmpruntUpdateArgs>(args: SelectSubset<T, EmpruntUpdateArgs<ExtArgs>>): Prisma__EmpruntClient<$Result.GetResult<Prisma.$EmpruntPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Emprunts.
     * @param {EmpruntDeleteManyArgs} args - Arguments to filter Emprunts to delete.
     * @example
     * // Delete a few Emprunts
     * const { count } = await prisma.emprunt.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EmpruntDeleteManyArgs>(args?: SelectSubset<T, EmpruntDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Emprunts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpruntUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Emprunts
     * const emprunt = await prisma.emprunt.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EmpruntUpdateManyArgs>(args: SelectSubset<T, EmpruntUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Emprunt.
     * @param {EmpruntUpsertArgs} args - Arguments to update or create a Emprunt.
     * @example
     * // Update or create a Emprunt
     * const emprunt = await prisma.emprunt.upsert({
     *   create: {
     *     // ... data to create a Emprunt
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Emprunt we want to update
     *   }
     * })
     */
    upsert<T extends EmpruntUpsertArgs>(args: SelectSubset<T, EmpruntUpsertArgs<ExtArgs>>): Prisma__EmpruntClient<$Result.GetResult<Prisma.$EmpruntPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Emprunts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpruntCountArgs} args - Arguments to filter Emprunts to count.
     * @example
     * // Count the number of Emprunts
     * const count = await prisma.emprunt.count({
     *   where: {
     *     // ... the filter for the Emprunts we want to count
     *   }
     * })
    **/
    count<T extends EmpruntCountArgs>(
      args?: Subset<T, EmpruntCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmpruntCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Emprunt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpruntAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmpruntAggregateArgs>(args: Subset<T, EmpruntAggregateArgs>): Prisma.PrismaPromise<GetEmpruntAggregateType<T>>

    /**
     * Group by Emprunt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpruntGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EmpruntGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EmpruntGroupByArgs['orderBy'] }
        : { orderBy?: EmpruntGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EmpruntGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmpruntGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Emprunt model
   */
  readonly fields: EmpruntFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Emprunt.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EmpruntClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    exemplaire<T extends ExemplairePhysiqueDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ExemplairePhysiqueDefaultArgs<ExtArgs>>): Prisma__ExemplairePhysiqueClient<$Result.GetResult<Prisma.$ExemplairePhysiquePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    universiteEmprunteurRel<T extends UniversiteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversiteDefaultArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Emprunt model
   */
  interface EmpruntFieldRefs {
    readonly id: FieldRef<"Emprunt", 'String'>
    readonly exemplaireId: FieldRef<"Emprunt", 'String'>
    readonly userId: FieldRef<"Emprunt", 'String'>
    readonly dateEmprunt: FieldRef<"Emprunt", 'DateTime'>
    readonly dateRetourPrevue: FieldRef<"Emprunt", 'DateTime'>
    readonly dateRetourEffective: FieldRef<"Emprunt", 'DateTime'>
    readonly statut: FieldRef<"Emprunt", 'StatutEmprunt'>
    readonly commentaire: FieldRef<"Emprunt", 'String'>
    readonly universiteEmprunteur: FieldRef<"Emprunt", 'String'>
    readonly estEmpruntExterne: FieldRef<"Emprunt", 'Boolean'>
    readonly motifEmprunt: FieldRef<"Emprunt", 'String'>
    readonly validePar: FieldRef<"Emprunt", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Emprunt findUnique
   */
  export type EmpruntFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprunt
     */
    select?: EmpruntSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprunt
     */
    omit?: EmpruntOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpruntInclude<ExtArgs> | null
    /**
     * Filter, which Emprunt to fetch.
     */
    where: EmpruntWhereUniqueInput
  }

  /**
   * Emprunt findUniqueOrThrow
   */
  export type EmpruntFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprunt
     */
    select?: EmpruntSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprunt
     */
    omit?: EmpruntOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpruntInclude<ExtArgs> | null
    /**
     * Filter, which Emprunt to fetch.
     */
    where: EmpruntWhereUniqueInput
  }

  /**
   * Emprunt findFirst
   */
  export type EmpruntFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprunt
     */
    select?: EmpruntSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprunt
     */
    omit?: EmpruntOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpruntInclude<ExtArgs> | null
    /**
     * Filter, which Emprunt to fetch.
     */
    where?: EmpruntWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Emprunts to fetch.
     */
    orderBy?: EmpruntOrderByWithRelationInput | EmpruntOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Emprunts.
     */
    cursor?: EmpruntWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Emprunts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Emprunts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Emprunts.
     */
    distinct?: EmpruntScalarFieldEnum | EmpruntScalarFieldEnum[]
  }

  /**
   * Emprunt findFirstOrThrow
   */
  export type EmpruntFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprunt
     */
    select?: EmpruntSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprunt
     */
    omit?: EmpruntOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpruntInclude<ExtArgs> | null
    /**
     * Filter, which Emprunt to fetch.
     */
    where?: EmpruntWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Emprunts to fetch.
     */
    orderBy?: EmpruntOrderByWithRelationInput | EmpruntOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Emprunts.
     */
    cursor?: EmpruntWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Emprunts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Emprunts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Emprunts.
     */
    distinct?: EmpruntScalarFieldEnum | EmpruntScalarFieldEnum[]
  }

  /**
   * Emprunt findMany
   */
  export type EmpruntFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprunt
     */
    select?: EmpruntSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprunt
     */
    omit?: EmpruntOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpruntInclude<ExtArgs> | null
    /**
     * Filter, which Emprunts to fetch.
     */
    where?: EmpruntWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Emprunts to fetch.
     */
    orderBy?: EmpruntOrderByWithRelationInput | EmpruntOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Emprunts.
     */
    cursor?: EmpruntWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Emprunts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Emprunts.
     */
    skip?: number
    distinct?: EmpruntScalarFieldEnum | EmpruntScalarFieldEnum[]
  }

  /**
   * Emprunt create
   */
  export type EmpruntCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprunt
     */
    select?: EmpruntSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprunt
     */
    omit?: EmpruntOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpruntInclude<ExtArgs> | null
    /**
     * The data needed to create a Emprunt.
     */
    data: XOR<EmpruntCreateInput, EmpruntUncheckedCreateInput>
  }

  /**
   * Emprunt createMany
   */
  export type EmpruntCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Emprunts.
     */
    data: EmpruntCreateManyInput | EmpruntCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Emprunt update
   */
  export type EmpruntUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprunt
     */
    select?: EmpruntSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprunt
     */
    omit?: EmpruntOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpruntInclude<ExtArgs> | null
    /**
     * The data needed to update a Emprunt.
     */
    data: XOR<EmpruntUpdateInput, EmpruntUncheckedUpdateInput>
    /**
     * Choose, which Emprunt to update.
     */
    where: EmpruntWhereUniqueInput
  }

  /**
   * Emprunt updateMany
   */
  export type EmpruntUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Emprunts.
     */
    data: XOR<EmpruntUpdateManyMutationInput, EmpruntUncheckedUpdateManyInput>
    /**
     * Filter which Emprunts to update
     */
    where?: EmpruntWhereInput
    /**
     * Limit how many Emprunts to update.
     */
    limit?: number
  }

  /**
   * Emprunt upsert
   */
  export type EmpruntUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprunt
     */
    select?: EmpruntSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprunt
     */
    omit?: EmpruntOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpruntInclude<ExtArgs> | null
    /**
     * The filter to search for the Emprunt to update in case it exists.
     */
    where: EmpruntWhereUniqueInput
    /**
     * In case the Emprunt found by the `where` argument doesn't exist, create a new Emprunt with this data.
     */
    create: XOR<EmpruntCreateInput, EmpruntUncheckedCreateInput>
    /**
     * In case the Emprunt was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EmpruntUpdateInput, EmpruntUncheckedUpdateInput>
  }

  /**
   * Emprunt delete
   */
  export type EmpruntDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprunt
     */
    select?: EmpruntSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprunt
     */
    omit?: EmpruntOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpruntInclude<ExtArgs> | null
    /**
     * Filter which Emprunt to delete.
     */
    where: EmpruntWhereUniqueInput
  }

  /**
   * Emprunt deleteMany
   */
  export type EmpruntDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Emprunts to delete
     */
    where?: EmpruntWhereInput
    /**
     * Limit how many Emprunts to delete.
     */
    limit?: number
  }

  /**
   * Emprunt without action
   */
  export type EmpruntDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprunt
     */
    select?: EmpruntSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprunt
     */
    omit?: EmpruntOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpruntInclude<ExtArgs> | null
  }


  /**
   * Model Recommandation
   */

  export type AggregateRecommandation = {
    _count: RecommandationCountAggregateOutputType | null
    _avg: RecommandationAvgAggregateOutputType | null
    _sum: RecommandationSumAggregateOutputType | null
    _min: RecommandationMinAggregateOutputType | null
    _max: RecommandationMaxAggregateOutputType | null
  }

  export type RecommandationAvgAggregateOutputType = {
    score: number | null
  }

  export type RecommandationSumAggregateOutputType = {
    score: number | null
  }

  export type RecommandationMinAggregateOutputType = {
    id: string | null
    userId: string | null
    ressourceId: string | null
    dateRecommandation: Date | null
    score: number | null
    motif: $Enums.MotifRecommandation | null
    estVue: boolean | null
    estInteruniversitaire: boolean | null
    universiteSource: string | null
  }

  export type RecommandationMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    ressourceId: string | null
    dateRecommandation: Date | null
    score: number | null
    motif: $Enums.MotifRecommandation | null
    estVue: boolean | null
    estInteruniversitaire: boolean | null
    universiteSource: string | null
  }

  export type RecommandationCountAggregateOutputType = {
    id: number
    userId: number
    ressourceId: number
    dateRecommandation: number
    score: number
    motif: number
    estVue: number
    estInteruniversitaire: number
    universiteSource: number
    _all: number
  }


  export type RecommandationAvgAggregateInputType = {
    score?: true
  }

  export type RecommandationSumAggregateInputType = {
    score?: true
  }

  export type RecommandationMinAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    dateRecommandation?: true
    score?: true
    motif?: true
    estVue?: true
    estInteruniversitaire?: true
    universiteSource?: true
  }

  export type RecommandationMaxAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    dateRecommandation?: true
    score?: true
    motif?: true
    estVue?: true
    estInteruniversitaire?: true
    universiteSource?: true
  }

  export type RecommandationCountAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    dateRecommandation?: true
    score?: true
    motif?: true
    estVue?: true
    estInteruniversitaire?: true
    universiteSource?: true
    _all?: true
  }

  export type RecommandationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Recommandation to aggregate.
     */
    where?: RecommandationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Recommandations to fetch.
     */
    orderBy?: RecommandationOrderByWithRelationInput | RecommandationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RecommandationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Recommandations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Recommandations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Recommandations
    **/
    _count?: true | RecommandationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RecommandationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RecommandationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RecommandationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RecommandationMaxAggregateInputType
  }

  export type GetRecommandationAggregateType<T extends RecommandationAggregateArgs> = {
        [P in keyof T & keyof AggregateRecommandation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRecommandation[P]>
      : GetScalarType<T[P], AggregateRecommandation[P]>
  }




  export type RecommandationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RecommandationWhereInput
    orderBy?: RecommandationOrderByWithAggregationInput | RecommandationOrderByWithAggregationInput[]
    by: RecommandationScalarFieldEnum[] | RecommandationScalarFieldEnum
    having?: RecommandationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RecommandationCountAggregateInputType | true
    _avg?: RecommandationAvgAggregateInputType
    _sum?: RecommandationSumAggregateInputType
    _min?: RecommandationMinAggregateInputType
    _max?: RecommandationMaxAggregateInputType
  }

  export type RecommandationGroupByOutputType = {
    id: string
    userId: string
    ressourceId: string
    dateRecommandation: Date
    score: number
    motif: $Enums.MotifRecommandation
    estVue: boolean
    estInteruniversitaire: boolean
    universiteSource: string | null
    _count: RecommandationCountAggregateOutputType | null
    _avg: RecommandationAvgAggregateOutputType | null
    _sum: RecommandationSumAggregateOutputType | null
    _min: RecommandationMinAggregateOutputType | null
    _max: RecommandationMaxAggregateOutputType | null
  }

  type GetRecommandationGroupByPayload<T extends RecommandationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RecommandationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RecommandationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RecommandationGroupByOutputType[P]>
            : GetScalarType<T[P], RecommandationGroupByOutputType[P]>
        }
      >
    >


  export type RecommandationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    ressourceId?: boolean
    dateRecommandation?: boolean
    score?: boolean
    motif?: boolean
    estVue?: boolean
    estInteruniversitaire?: boolean
    universiteSource?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
    universiteSourceRel?: boolean | Recommandation$universiteSourceRelArgs<ExtArgs>
  }, ExtArgs["result"]["recommandation"]>



  export type RecommandationSelectScalar = {
    id?: boolean
    userId?: boolean
    ressourceId?: boolean
    dateRecommandation?: boolean
    score?: boolean
    motif?: boolean
    estVue?: boolean
    estInteruniversitaire?: boolean
    universiteSource?: boolean
  }

  export type RecommandationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "ressourceId" | "dateRecommandation" | "score" | "motif" | "estVue" | "estInteruniversitaire" | "universiteSource", ExtArgs["result"]["recommandation"]>
  export type RecommandationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
    universiteSourceRel?: boolean | Recommandation$universiteSourceRelArgs<ExtArgs>
  }

  export type $RecommandationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Recommandation"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      ressource: Prisma.$RessourcePayload<ExtArgs>
      universiteSourceRel: Prisma.$UniversitePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      ressourceId: string
      dateRecommandation: Date
      score: number
      motif: $Enums.MotifRecommandation
      estVue: boolean
      estInteruniversitaire: boolean
      universiteSource: string | null
    }, ExtArgs["result"]["recommandation"]>
    composites: {}
  }

  type RecommandationGetPayload<S extends boolean | null | undefined | RecommandationDefaultArgs> = $Result.GetResult<Prisma.$RecommandationPayload, S>

  type RecommandationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RecommandationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RecommandationCountAggregateInputType | true
    }

  export interface RecommandationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Recommandation'], meta: { name: 'Recommandation' } }
    /**
     * Find zero or one Recommandation that matches the filter.
     * @param {RecommandationFindUniqueArgs} args - Arguments to find a Recommandation
     * @example
     * // Get one Recommandation
     * const recommandation = await prisma.recommandation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RecommandationFindUniqueArgs>(args: SelectSubset<T, RecommandationFindUniqueArgs<ExtArgs>>): Prisma__RecommandationClient<$Result.GetResult<Prisma.$RecommandationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Recommandation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RecommandationFindUniqueOrThrowArgs} args - Arguments to find a Recommandation
     * @example
     * // Get one Recommandation
     * const recommandation = await prisma.recommandation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RecommandationFindUniqueOrThrowArgs>(args: SelectSubset<T, RecommandationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RecommandationClient<$Result.GetResult<Prisma.$RecommandationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Recommandation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecommandationFindFirstArgs} args - Arguments to find a Recommandation
     * @example
     * // Get one Recommandation
     * const recommandation = await prisma.recommandation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RecommandationFindFirstArgs>(args?: SelectSubset<T, RecommandationFindFirstArgs<ExtArgs>>): Prisma__RecommandationClient<$Result.GetResult<Prisma.$RecommandationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Recommandation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecommandationFindFirstOrThrowArgs} args - Arguments to find a Recommandation
     * @example
     * // Get one Recommandation
     * const recommandation = await prisma.recommandation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RecommandationFindFirstOrThrowArgs>(args?: SelectSubset<T, RecommandationFindFirstOrThrowArgs<ExtArgs>>): Prisma__RecommandationClient<$Result.GetResult<Prisma.$RecommandationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Recommandations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecommandationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Recommandations
     * const recommandations = await prisma.recommandation.findMany()
     * 
     * // Get first 10 Recommandations
     * const recommandations = await prisma.recommandation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const recommandationWithIdOnly = await prisma.recommandation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RecommandationFindManyArgs>(args?: SelectSubset<T, RecommandationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RecommandationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Recommandation.
     * @param {RecommandationCreateArgs} args - Arguments to create a Recommandation.
     * @example
     * // Create one Recommandation
     * const Recommandation = await prisma.recommandation.create({
     *   data: {
     *     // ... data to create a Recommandation
     *   }
     * })
     * 
     */
    create<T extends RecommandationCreateArgs>(args: SelectSubset<T, RecommandationCreateArgs<ExtArgs>>): Prisma__RecommandationClient<$Result.GetResult<Prisma.$RecommandationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Recommandations.
     * @param {RecommandationCreateManyArgs} args - Arguments to create many Recommandations.
     * @example
     * // Create many Recommandations
     * const recommandation = await prisma.recommandation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RecommandationCreateManyArgs>(args?: SelectSubset<T, RecommandationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Recommandation.
     * @param {RecommandationDeleteArgs} args - Arguments to delete one Recommandation.
     * @example
     * // Delete one Recommandation
     * const Recommandation = await prisma.recommandation.delete({
     *   where: {
     *     // ... filter to delete one Recommandation
     *   }
     * })
     * 
     */
    delete<T extends RecommandationDeleteArgs>(args: SelectSubset<T, RecommandationDeleteArgs<ExtArgs>>): Prisma__RecommandationClient<$Result.GetResult<Prisma.$RecommandationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Recommandation.
     * @param {RecommandationUpdateArgs} args - Arguments to update one Recommandation.
     * @example
     * // Update one Recommandation
     * const recommandation = await prisma.recommandation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RecommandationUpdateArgs>(args: SelectSubset<T, RecommandationUpdateArgs<ExtArgs>>): Prisma__RecommandationClient<$Result.GetResult<Prisma.$RecommandationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Recommandations.
     * @param {RecommandationDeleteManyArgs} args - Arguments to filter Recommandations to delete.
     * @example
     * // Delete a few Recommandations
     * const { count } = await prisma.recommandation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RecommandationDeleteManyArgs>(args?: SelectSubset<T, RecommandationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Recommandations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecommandationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Recommandations
     * const recommandation = await prisma.recommandation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RecommandationUpdateManyArgs>(args: SelectSubset<T, RecommandationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Recommandation.
     * @param {RecommandationUpsertArgs} args - Arguments to update or create a Recommandation.
     * @example
     * // Update or create a Recommandation
     * const recommandation = await prisma.recommandation.upsert({
     *   create: {
     *     // ... data to create a Recommandation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Recommandation we want to update
     *   }
     * })
     */
    upsert<T extends RecommandationUpsertArgs>(args: SelectSubset<T, RecommandationUpsertArgs<ExtArgs>>): Prisma__RecommandationClient<$Result.GetResult<Prisma.$RecommandationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Recommandations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecommandationCountArgs} args - Arguments to filter Recommandations to count.
     * @example
     * // Count the number of Recommandations
     * const count = await prisma.recommandation.count({
     *   where: {
     *     // ... the filter for the Recommandations we want to count
     *   }
     * })
    **/
    count<T extends RecommandationCountArgs>(
      args?: Subset<T, RecommandationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RecommandationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Recommandation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecommandationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RecommandationAggregateArgs>(args: Subset<T, RecommandationAggregateArgs>): Prisma.PrismaPromise<GetRecommandationAggregateType<T>>

    /**
     * Group by Recommandation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecommandationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RecommandationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RecommandationGroupByArgs['orderBy'] }
        : { orderBy?: RecommandationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RecommandationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRecommandationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Recommandation model
   */
  readonly fields: RecommandationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Recommandation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RecommandationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ressource<T extends RessourceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RessourceDefaultArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    universiteSourceRel<T extends Recommandation$universiteSourceRelArgs<ExtArgs> = {}>(args?: Subset<T, Recommandation$universiteSourceRelArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Recommandation model
   */
  interface RecommandationFieldRefs {
    readonly id: FieldRef<"Recommandation", 'String'>
    readonly userId: FieldRef<"Recommandation", 'String'>
    readonly ressourceId: FieldRef<"Recommandation", 'String'>
    readonly dateRecommandation: FieldRef<"Recommandation", 'DateTime'>
    readonly score: FieldRef<"Recommandation", 'Float'>
    readonly motif: FieldRef<"Recommandation", 'MotifRecommandation'>
    readonly estVue: FieldRef<"Recommandation", 'Boolean'>
    readonly estInteruniversitaire: FieldRef<"Recommandation", 'Boolean'>
    readonly universiteSource: FieldRef<"Recommandation", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Recommandation findUnique
   */
  export type RecommandationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recommandation
     */
    select?: RecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recommandation
     */
    omit?: RecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecommandationInclude<ExtArgs> | null
    /**
     * Filter, which Recommandation to fetch.
     */
    where: RecommandationWhereUniqueInput
  }

  /**
   * Recommandation findUniqueOrThrow
   */
  export type RecommandationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recommandation
     */
    select?: RecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recommandation
     */
    omit?: RecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecommandationInclude<ExtArgs> | null
    /**
     * Filter, which Recommandation to fetch.
     */
    where: RecommandationWhereUniqueInput
  }

  /**
   * Recommandation findFirst
   */
  export type RecommandationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recommandation
     */
    select?: RecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recommandation
     */
    omit?: RecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecommandationInclude<ExtArgs> | null
    /**
     * Filter, which Recommandation to fetch.
     */
    where?: RecommandationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Recommandations to fetch.
     */
    orderBy?: RecommandationOrderByWithRelationInput | RecommandationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Recommandations.
     */
    cursor?: RecommandationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Recommandations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Recommandations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Recommandations.
     */
    distinct?: RecommandationScalarFieldEnum | RecommandationScalarFieldEnum[]
  }

  /**
   * Recommandation findFirstOrThrow
   */
  export type RecommandationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recommandation
     */
    select?: RecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recommandation
     */
    omit?: RecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecommandationInclude<ExtArgs> | null
    /**
     * Filter, which Recommandation to fetch.
     */
    where?: RecommandationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Recommandations to fetch.
     */
    orderBy?: RecommandationOrderByWithRelationInput | RecommandationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Recommandations.
     */
    cursor?: RecommandationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Recommandations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Recommandations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Recommandations.
     */
    distinct?: RecommandationScalarFieldEnum | RecommandationScalarFieldEnum[]
  }

  /**
   * Recommandation findMany
   */
  export type RecommandationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recommandation
     */
    select?: RecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recommandation
     */
    omit?: RecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecommandationInclude<ExtArgs> | null
    /**
     * Filter, which Recommandations to fetch.
     */
    where?: RecommandationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Recommandations to fetch.
     */
    orderBy?: RecommandationOrderByWithRelationInput | RecommandationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Recommandations.
     */
    cursor?: RecommandationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Recommandations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Recommandations.
     */
    skip?: number
    distinct?: RecommandationScalarFieldEnum | RecommandationScalarFieldEnum[]
  }

  /**
   * Recommandation create
   */
  export type RecommandationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recommandation
     */
    select?: RecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recommandation
     */
    omit?: RecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecommandationInclude<ExtArgs> | null
    /**
     * The data needed to create a Recommandation.
     */
    data: XOR<RecommandationCreateInput, RecommandationUncheckedCreateInput>
  }

  /**
   * Recommandation createMany
   */
  export type RecommandationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Recommandations.
     */
    data: RecommandationCreateManyInput | RecommandationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Recommandation update
   */
  export type RecommandationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recommandation
     */
    select?: RecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recommandation
     */
    omit?: RecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecommandationInclude<ExtArgs> | null
    /**
     * The data needed to update a Recommandation.
     */
    data: XOR<RecommandationUpdateInput, RecommandationUncheckedUpdateInput>
    /**
     * Choose, which Recommandation to update.
     */
    where: RecommandationWhereUniqueInput
  }

  /**
   * Recommandation updateMany
   */
  export type RecommandationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Recommandations.
     */
    data: XOR<RecommandationUpdateManyMutationInput, RecommandationUncheckedUpdateManyInput>
    /**
     * Filter which Recommandations to update
     */
    where?: RecommandationWhereInput
    /**
     * Limit how many Recommandations to update.
     */
    limit?: number
  }

  /**
   * Recommandation upsert
   */
  export type RecommandationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recommandation
     */
    select?: RecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recommandation
     */
    omit?: RecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecommandationInclude<ExtArgs> | null
    /**
     * The filter to search for the Recommandation to update in case it exists.
     */
    where: RecommandationWhereUniqueInput
    /**
     * In case the Recommandation found by the `where` argument doesn't exist, create a new Recommandation with this data.
     */
    create: XOR<RecommandationCreateInput, RecommandationUncheckedCreateInput>
    /**
     * In case the Recommandation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RecommandationUpdateInput, RecommandationUncheckedUpdateInput>
  }

  /**
   * Recommandation delete
   */
  export type RecommandationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recommandation
     */
    select?: RecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recommandation
     */
    omit?: RecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecommandationInclude<ExtArgs> | null
    /**
     * Filter which Recommandation to delete.
     */
    where: RecommandationWhereUniqueInput
  }

  /**
   * Recommandation deleteMany
   */
  export type RecommandationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Recommandations to delete
     */
    where?: RecommandationWhereInput
    /**
     * Limit how many Recommandations to delete.
     */
    limit?: number
  }

  /**
   * Recommandation.universiteSourceRel
   */
  export type Recommandation$universiteSourceRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Universite
     */
    select?: UniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Universite
     */
    omit?: UniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversiteInclude<ExtArgs> | null
    where?: UniversiteWhereInput
  }

  /**
   * Recommandation without action
   */
  export type RecommandationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recommandation
     */
    select?: RecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recommandation
     */
    omit?: RecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecommandationInclude<ExtArgs> | null
  }


  /**
   * Model Universite
   */

  export type AggregateUniversite = {
    _count: UniversiteCountAggregateOutputType | null
    _min: UniversiteMinAggregateOutputType | null
    _max: UniversiteMaxAggregateOutputType | null
  }

  export type UniversiteMinAggregateOutputType = {
    id: string | null
    nom: string | null
    adresse: string | null
    ville: string | null
    pays: string | null
    siteWeb: string | null
    dateCreation: Date | null
    adresseBlockchain: string | null
    estActive: boolean | null
  }

  export type UniversiteMaxAggregateOutputType = {
    id: string | null
    nom: string | null
    adresse: string | null
    ville: string | null
    pays: string | null
    siteWeb: string | null
    dateCreation: Date | null
    adresseBlockchain: string | null
    estActive: boolean | null
  }

  export type UniversiteCountAggregateOutputType = {
    id: number
    nom: number
    adresse: number
    ville: number
    pays: number
    siteWeb: number
    dateCreation: number
    adresseBlockchain: number
    estActive: number
    _all: number
  }


  export type UniversiteMinAggregateInputType = {
    id?: true
    nom?: true
    adresse?: true
    ville?: true
    pays?: true
    siteWeb?: true
    dateCreation?: true
    adresseBlockchain?: true
    estActive?: true
  }

  export type UniversiteMaxAggregateInputType = {
    id?: true
    nom?: true
    adresse?: true
    ville?: true
    pays?: true
    siteWeb?: true
    dateCreation?: true
    adresseBlockchain?: true
    estActive?: true
  }

  export type UniversiteCountAggregateInputType = {
    id?: true
    nom?: true
    adresse?: true
    ville?: true
    pays?: true
    siteWeb?: true
    dateCreation?: true
    adresseBlockchain?: true
    estActive?: true
    _all?: true
  }

  export type UniversiteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Universite to aggregate.
     */
    where?: UniversiteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Universites to fetch.
     */
    orderBy?: UniversiteOrderByWithRelationInput | UniversiteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UniversiteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Universites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Universites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Universites
    **/
    _count?: true | UniversiteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UniversiteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UniversiteMaxAggregateInputType
  }

  export type GetUniversiteAggregateType<T extends UniversiteAggregateArgs> = {
        [P in keyof T & keyof AggregateUniversite]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUniversite[P]>
      : GetScalarType<T[P], AggregateUniversite[P]>
  }




  export type UniversiteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UniversiteWhereInput
    orderBy?: UniversiteOrderByWithAggregationInput | UniversiteOrderByWithAggregationInput[]
    by: UniversiteScalarFieldEnum[] | UniversiteScalarFieldEnum
    having?: UniversiteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UniversiteCountAggregateInputType | true
    _min?: UniversiteMinAggregateInputType
    _max?: UniversiteMaxAggregateInputType
  }

  export type UniversiteGroupByOutputType = {
    id: string
    nom: string
    adresse: string | null
    ville: string
    pays: string
    siteWeb: string | null
    dateCreation: Date
    adresseBlockchain: string | null
    estActive: boolean
    _count: UniversiteCountAggregateOutputType | null
    _min: UniversiteMinAggregateOutputType | null
    _max: UniversiteMaxAggregateOutputType | null
  }

  type GetUniversiteGroupByPayload<T extends UniversiteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UniversiteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UniversiteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UniversiteGroupByOutputType[P]>
            : GetScalarType<T[P], UniversiteGroupByOutputType[P]>
        }
      >
    >


  export type UniversiteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nom?: boolean
    adresse?: boolean
    ville?: boolean
    pays?: boolean
    siteWeb?: boolean
    dateCreation?: boolean
    adresseBlockchain?: boolean
    estActive?: boolean
    users?: boolean | Universite$usersArgs<ExtArgs>
    ressources?: boolean | Universite$ressourcesArgs<ExtArgs>
    conventionsSource?: boolean | Universite$conventionsSourceArgs<ExtArgs>
    conventionsDestination?: boolean | Universite$conventionsDestinationArgs<ExtArgs>
    statistiquesSource?: boolean | Universite$statistiquesSourceArgs<ExtArgs>
    statistiquesDestination?: boolean | Universite$statistiquesDestinationArgs<ExtArgs>
    reservations?: boolean | Universite$reservationsArgs<ExtArgs>
    emprunts?: boolean | Universite$empruntsArgs<ExtArgs>
    recommandationsSource?: boolean | Universite$recommandationsSourceArgs<ExtArgs>
    statistiquesBibliotheque?: boolean | Universite$statistiquesBibliothequeArgs<ExtArgs>
    partagesSource?: boolean | Universite$partagesSourceArgs<ExtArgs>
    partagesDestination?: boolean | Universite$partagesDestinationArgs<ExtArgs>
    transactionsOrigine?: boolean | Universite$transactionsOrigineArgs<ExtArgs>
    transactionsDestination?: boolean | Universite$transactionsDestinationArgs<ExtArgs>
    HistoriqueAcces?: boolean | Universite$HistoriqueAccesArgs<ExtArgs>
    _count?: boolean | UniversiteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["universite"]>



  export type UniversiteSelectScalar = {
    id?: boolean
    nom?: boolean
    adresse?: boolean
    ville?: boolean
    pays?: boolean
    siteWeb?: boolean
    dateCreation?: boolean
    adresseBlockchain?: boolean
    estActive?: boolean
  }

  export type UniversiteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nom" | "adresse" | "ville" | "pays" | "siteWeb" | "dateCreation" | "adresseBlockchain" | "estActive", ExtArgs["result"]["universite"]>
  export type UniversiteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | Universite$usersArgs<ExtArgs>
    ressources?: boolean | Universite$ressourcesArgs<ExtArgs>
    conventionsSource?: boolean | Universite$conventionsSourceArgs<ExtArgs>
    conventionsDestination?: boolean | Universite$conventionsDestinationArgs<ExtArgs>
    statistiquesSource?: boolean | Universite$statistiquesSourceArgs<ExtArgs>
    statistiquesDestination?: boolean | Universite$statistiquesDestinationArgs<ExtArgs>
    reservations?: boolean | Universite$reservationsArgs<ExtArgs>
    emprunts?: boolean | Universite$empruntsArgs<ExtArgs>
    recommandationsSource?: boolean | Universite$recommandationsSourceArgs<ExtArgs>
    statistiquesBibliotheque?: boolean | Universite$statistiquesBibliothequeArgs<ExtArgs>
    partagesSource?: boolean | Universite$partagesSourceArgs<ExtArgs>
    partagesDestination?: boolean | Universite$partagesDestinationArgs<ExtArgs>
    transactionsOrigine?: boolean | Universite$transactionsOrigineArgs<ExtArgs>
    transactionsDestination?: boolean | Universite$transactionsDestinationArgs<ExtArgs>
    HistoriqueAcces?: boolean | Universite$HistoriqueAccesArgs<ExtArgs>
    _count?: boolean | UniversiteCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UniversitePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Universite"
    objects: {
      users: Prisma.$UserPayload<ExtArgs>[]
      ressources: Prisma.$RessourcePayload<ExtArgs>[]
      conventionsSource: Prisma.$ConventionInteruniversitairePayload<ExtArgs>[]
      conventionsDestination: Prisma.$ConventionInteruniversitairePayload<ExtArgs>[]
      statistiquesSource: Prisma.$StatistiqueInteruniversitairePayload<ExtArgs>[]
      statistiquesDestination: Prisma.$StatistiqueInteruniversitairePayload<ExtArgs>[]
      reservations: Prisma.$ReservationPayload<ExtArgs>[]
      emprunts: Prisma.$EmpruntPayload<ExtArgs>[]
      recommandationsSource: Prisma.$RecommandationPayload<ExtArgs>[]
      statistiquesBibliotheque: Prisma.$StatistiqueBibliothequePayload<ExtArgs>[]
      partagesSource: Prisma.$PartageUniversitePayload<ExtArgs>[]
      partagesDestination: Prisma.$PartageUniversitePayload<ExtArgs>[]
      transactionsOrigine: Prisma.$TransactionBlockchainPayload<ExtArgs>[]
      transactionsDestination: Prisma.$TransactionBlockchainPayload<ExtArgs>[]
      HistoriqueAcces: Prisma.$HistoriqueAccesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nom: string
      adresse: string | null
      ville: string
      pays: string
      siteWeb: string | null
      dateCreation: Date
      adresseBlockchain: string | null
      estActive: boolean
    }, ExtArgs["result"]["universite"]>
    composites: {}
  }

  type UniversiteGetPayload<S extends boolean | null | undefined | UniversiteDefaultArgs> = $Result.GetResult<Prisma.$UniversitePayload, S>

  type UniversiteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UniversiteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UniversiteCountAggregateInputType | true
    }

  export interface UniversiteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Universite'], meta: { name: 'Universite' } }
    /**
     * Find zero or one Universite that matches the filter.
     * @param {UniversiteFindUniqueArgs} args - Arguments to find a Universite
     * @example
     * // Get one Universite
     * const universite = await prisma.universite.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UniversiteFindUniqueArgs>(args: SelectSubset<T, UniversiteFindUniqueArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Universite that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UniversiteFindUniqueOrThrowArgs} args - Arguments to find a Universite
     * @example
     * // Get one Universite
     * const universite = await prisma.universite.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UniversiteFindUniqueOrThrowArgs>(args: SelectSubset<T, UniversiteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Universite that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversiteFindFirstArgs} args - Arguments to find a Universite
     * @example
     * // Get one Universite
     * const universite = await prisma.universite.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UniversiteFindFirstArgs>(args?: SelectSubset<T, UniversiteFindFirstArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Universite that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversiteFindFirstOrThrowArgs} args - Arguments to find a Universite
     * @example
     * // Get one Universite
     * const universite = await prisma.universite.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UniversiteFindFirstOrThrowArgs>(args?: SelectSubset<T, UniversiteFindFirstOrThrowArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Universites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversiteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Universites
     * const universites = await prisma.universite.findMany()
     * 
     * // Get first 10 Universites
     * const universites = await prisma.universite.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const universiteWithIdOnly = await prisma.universite.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UniversiteFindManyArgs>(args?: SelectSubset<T, UniversiteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Universite.
     * @param {UniversiteCreateArgs} args - Arguments to create a Universite.
     * @example
     * // Create one Universite
     * const Universite = await prisma.universite.create({
     *   data: {
     *     // ... data to create a Universite
     *   }
     * })
     * 
     */
    create<T extends UniversiteCreateArgs>(args: SelectSubset<T, UniversiteCreateArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Universites.
     * @param {UniversiteCreateManyArgs} args - Arguments to create many Universites.
     * @example
     * // Create many Universites
     * const universite = await prisma.universite.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UniversiteCreateManyArgs>(args?: SelectSubset<T, UniversiteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Universite.
     * @param {UniversiteDeleteArgs} args - Arguments to delete one Universite.
     * @example
     * // Delete one Universite
     * const Universite = await prisma.universite.delete({
     *   where: {
     *     // ... filter to delete one Universite
     *   }
     * })
     * 
     */
    delete<T extends UniversiteDeleteArgs>(args: SelectSubset<T, UniversiteDeleteArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Universite.
     * @param {UniversiteUpdateArgs} args - Arguments to update one Universite.
     * @example
     * // Update one Universite
     * const universite = await prisma.universite.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UniversiteUpdateArgs>(args: SelectSubset<T, UniversiteUpdateArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Universites.
     * @param {UniversiteDeleteManyArgs} args - Arguments to filter Universites to delete.
     * @example
     * // Delete a few Universites
     * const { count } = await prisma.universite.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UniversiteDeleteManyArgs>(args?: SelectSubset<T, UniversiteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Universites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversiteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Universites
     * const universite = await prisma.universite.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UniversiteUpdateManyArgs>(args: SelectSubset<T, UniversiteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Universite.
     * @param {UniversiteUpsertArgs} args - Arguments to update or create a Universite.
     * @example
     * // Update or create a Universite
     * const universite = await prisma.universite.upsert({
     *   create: {
     *     // ... data to create a Universite
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Universite we want to update
     *   }
     * })
     */
    upsert<T extends UniversiteUpsertArgs>(args: SelectSubset<T, UniversiteUpsertArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Universites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversiteCountArgs} args - Arguments to filter Universites to count.
     * @example
     * // Count the number of Universites
     * const count = await prisma.universite.count({
     *   where: {
     *     // ... the filter for the Universites we want to count
     *   }
     * })
    **/
    count<T extends UniversiteCountArgs>(
      args?: Subset<T, UniversiteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UniversiteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Universite.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversiteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UniversiteAggregateArgs>(args: Subset<T, UniversiteAggregateArgs>): Prisma.PrismaPromise<GetUniversiteAggregateType<T>>

    /**
     * Group by Universite.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversiteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UniversiteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UniversiteGroupByArgs['orderBy'] }
        : { orderBy?: UniversiteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UniversiteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUniversiteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Universite model
   */
  readonly fields: UniversiteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Universite.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UniversiteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends Universite$usersArgs<ExtArgs> = {}>(args?: Subset<T, Universite$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ressources<T extends Universite$ressourcesArgs<ExtArgs> = {}>(args?: Subset<T, Universite$ressourcesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    conventionsSource<T extends Universite$conventionsSourceArgs<ExtArgs> = {}>(args?: Subset<T, Universite$conventionsSourceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConventionInteruniversitairePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    conventionsDestination<T extends Universite$conventionsDestinationArgs<ExtArgs> = {}>(args?: Subset<T, Universite$conventionsDestinationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConventionInteruniversitairePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    statistiquesSource<T extends Universite$statistiquesSourceArgs<ExtArgs> = {}>(args?: Subset<T, Universite$statistiquesSourceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StatistiqueInteruniversitairePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    statistiquesDestination<T extends Universite$statistiquesDestinationArgs<ExtArgs> = {}>(args?: Subset<T, Universite$statistiquesDestinationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StatistiqueInteruniversitairePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservations<T extends Universite$reservationsArgs<ExtArgs> = {}>(args?: Subset<T, Universite$reservationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    emprunts<T extends Universite$empruntsArgs<ExtArgs> = {}>(args?: Subset<T, Universite$empruntsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmpruntPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    recommandationsSource<T extends Universite$recommandationsSourceArgs<ExtArgs> = {}>(args?: Subset<T, Universite$recommandationsSourceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RecommandationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    statistiquesBibliotheque<T extends Universite$statistiquesBibliothequeArgs<ExtArgs> = {}>(args?: Subset<T, Universite$statistiquesBibliothequeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StatistiqueBibliothequePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    partagesSource<T extends Universite$partagesSourceArgs<ExtArgs> = {}>(args?: Subset<T, Universite$partagesSourceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PartageUniversitePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    partagesDestination<T extends Universite$partagesDestinationArgs<ExtArgs> = {}>(args?: Subset<T, Universite$partagesDestinationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PartageUniversitePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transactionsOrigine<T extends Universite$transactionsOrigineArgs<ExtArgs> = {}>(args?: Subset<T, Universite$transactionsOrigineArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionBlockchainPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transactionsDestination<T extends Universite$transactionsDestinationArgs<ExtArgs> = {}>(args?: Subset<T, Universite$transactionsDestinationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionBlockchainPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    HistoriqueAcces<T extends Universite$HistoriqueAccesArgs<ExtArgs> = {}>(args?: Subset<T, Universite$HistoriqueAccesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistoriqueAccesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Universite model
   */
  interface UniversiteFieldRefs {
    readonly id: FieldRef<"Universite", 'String'>
    readonly nom: FieldRef<"Universite", 'String'>
    readonly adresse: FieldRef<"Universite", 'String'>
    readonly ville: FieldRef<"Universite", 'String'>
    readonly pays: FieldRef<"Universite", 'String'>
    readonly siteWeb: FieldRef<"Universite", 'String'>
    readonly dateCreation: FieldRef<"Universite", 'DateTime'>
    readonly adresseBlockchain: FieldRef<"Universite", 'String'>
    readonly estActive: FieldRef<"Universite", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Universite findUnique
   */
  export type UniversiteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Universite
     */
    select?: UniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Universite
     */
    omit?: UniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversiteInclude<ExtArgs> | null
    /**
     * Filter, which Universite to fetch.
     */
    where: UniversiteWhereUniqueInput
  }

  /**
   * Universite findUniqueOrThrow
   */
  export type UniversiteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Universite
     */
    select?: UniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Universite
     */
    omit?: UniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversiteInclude<ExtArgs> | null
    /**
     * Filter, which Universite to fetch.
     */
    where: UniversiteWhereUniqueInput
  }

  /**
   * Universite findFirst
   */
  export type UniversiteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Universite
     */
    select?: UniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Universite
     */
    omit?: UniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversiteInclude<ExtArgs> | null
    /**
     * Filter, which Universite to fetch.
     */
    where?: UniversiteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Universites to fetch.
     */
    orderBy?: UniversiteOrderByWithRelationInput | UniversiteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Universites.
     */
    cursor?: UniversiteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Universites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Universites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Universites.
     */
    distinct?: UniversiteScalarFieldEnum | UniversiteScalarFieldEnum[]
  }

  /**
   * Universite findFirstOrThrow
   */
  export type UniversiteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Universite
     */
    select?: UniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Universite
     */
    omit?: UniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversiteInclude<ExtArgs> | null
    /**
     * Filter, which Universite to fetch.
     */
    where?: UniversiteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Universites to fetch.
     */
    orderBy?: UniversiteOrderByWithRelationInput | UniversiteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Universites.
     */
    cursor?: UniversiteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Universites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Universites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Universites.
     */
    distinct?: UniversiteScalarFieldEnum | UniversiteScalarFieldEnum[]
  }

  /**
   * Universite findMany
   */
  export type UniversiteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Universite
     */
    select?: UniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Universite
     */
    omit?: UniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversiteInclude<ExtArgs> | null
    /**
     * Filter, which Universites to fetch.
     */
    where?: UniversiteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Universites to fetch.
     */
    orderBy?: UniversiteOrderByWithRelationInput | UniversiteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Universites.
     */
    cursor?: UniversiteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Universites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Universites.
     */
    skip?: number
    distinct?: UniversiteScalarFieldEnum | UniversiteScalarFieldEnum[]
  }

  /**
   * Universite create
   */
  export type UniversiteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Universite
     */
    select?: UniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Universite
     */
    omit?: UniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversiteInclude<ExtArgs> | null
    /**
     * The data needed to create a Universite.
     */
    data: XOR<UniversiteCreateInput, UniversiteUncheckedCreateInput>
  }

  /**
   * Universite createMany
   */
  export type UniversiteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Universites.
     */
    data: UniversiteCreateManyInput | UniversiteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Universite update
   */
  export type UniversiteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Universite
     */
    select?: UniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Universite
     */
    omit?: UniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversiteInclude<ExtArgs> | null
    /**
     * The data needed to update a Universite.
     */
    data: XOR<UniversiteUpdateInput, UniversiteUncheckedUpdateInput>
    /**
     * Choose, which Universite to update.
     */
    where: UniversiteWhereUniqueInput
  }

  /**
   * Universite updateMany
   */
  export type UniversiteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Universites.
     */
    data: XOR<UniversiteUpdateManyMutationInput, UniversiteUncheckedUpdateManyInput>
    /**
     * Filter which Universites to update
     */
    where?: UniversiteWhereInput
    /**
     * Limit how many Universites to update.
     */
    limit?: number
  }

  /**
   * Universite upsert
   */
  export type UniversiteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Universite
     */
    select?: UniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Universite
     */
    omit?: UniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversiteInclude<ExtArgs> | null
    /**
     * The filter to search for the Universite to update in case it exists.
     */
    where: UniversiteWhereUniqueInput
    /**
     * In case the Universite found by the `where` argument doesn't exist, create a new Universite with this data.
     */
    create: XOR<UniversiteCreateInput, UniversiteUncheckedCreateInput>
    /**
     * In case the Universite was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UniversiteUpdateInput, UniversiteUncheckedUpdateInput>
  }

  /**
   * Universite delete
   */
  export type UniversiteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Universite
     */
    select?: UniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Universite
     */
    omit?: UniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversiteInclude<ExtArgs> | null
    /**
     * Filter which Universite to delete.
     */
    where: UniversiteWhereUniqueInput
  }

  /**
   * Universite deleteMany
   */
  export type UniversiteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Universites to delete
     */
    where?: UniversiteWhereInput
    /**
     * Limit how many Universites to delete.
     */
    limit?: number
  }

  /**
   * Universite.users
   */
  export type Universite$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Universite.ressources
   */
  export type Universite$ressourcesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ressource
     */
    select?: RessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ressource
     */
    omit?: RessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RessourceInclude<ExtArgs> | null
    where?: RessourceWhereInput
    orderBy?: RessourceOrderByWithRelationInput | RessourceOrderByWithRelationInput[]
    cursor?: RessourceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RessourceScalarFieldEnum | RessourceScalarFieldEnum[]
  }

  /**
   * Universite.conventionsSource
   */
  export type Universite$conventionsSourceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConventionInteruniversitaire
     */
    select?: ConventionInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConventionInteruniversitaire
     */
    omit?: ConventionInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConventionInteruniversitaireInclude<ExtArgs> | null
    where?: ConventionInteruniversitaireWhereInput
    orderBy?: ConventionInteruniversitaireOrderByWithRelationInput | ConventionInteruniversitaireOrderByWithRelationInput[]
    cursor?: ConventionInteruniversitaireWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConventionInteruniversitaireScalarFieldEnum | ConventionInteruniversitaireScalarFieldEnum[]
  }

  /**
   * Universite.conventionsDestination
   */
  export type Universite$conventionsDestinationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConventionInteruniversitaire
     */
    select?: ConventionInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConventionInteruniversitaire
     */
    omit?: ConventionInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConventionInteruniversitaireInclude<ExtArgs> | null
    where?: ConventionInteruniversitaireWhereInput
    orderBy?: ConventionInteruniversitaireOrderByWithRelationInput | ConventionInteruniversitaireOrderByWithRelationInput[]
    cursor?: ConventionInteruniversitaireWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConventionInteruniversitaireScalarFieldEnum | ConventionInteruniversitaireScalarFieldEnum[]
  }

  /**
   * Universite.statistiquesSource
   */
  export type Universite$statistiquesSourceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueInteruniversitaire
     */
    select?: StatistiqueInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueInteruniversitaire
     */
    omit?: StatistiqueInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueInteruniversitaireInclude<ExtArgs> | null
    where?: StatistiqueInteruniversitaireWhereInput
    orderBy?: StatistiqueInteruniversitaireOrderByWithRelationInput | StatistiqueInteruniversitaireOrderByWithRelationInput[]
    cursor?: StatistiqueInteruniversitaireWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StatistiqueInteruniversitaireScalarFieldEnum | StatistiqueInteruniversitaireScalarFieldEnum[]
  }

  /**
   * Universite.statistiquesDestination
   */
  export type Universite$statistiquesDestinationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueInteruniversitaire
     */
    select?: StatistiqueInteruniversitaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueInteruniversitaire
     */
    omit?: StatistiqueInteruniversitaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueInteruniversitaireInclude<ExtArgs> | null
    where?: StatistiqueInteruniversitaireWhereInput
    orderBy?: StatistiqueInteruniversitaireOrderByWithRelationInput | StatistiqueInteruniversitaireOrderByWithRelationInput[]
    cursor?: StatistiqueInteruniversitaireWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StatistiqueInteruniversitaireScalarFieldEnum | StatistiqueInteruniversitaireScalarFieldEnum[]
  }

  /**
   * Universite.reservations
   */
  export type Universite$reservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    where?: ReservationWhereInput
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    cursor?: ReservationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Universite.emprunts
   */
  export type Universite$empruntsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprunt
     */
    select?: EmpruntSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprunt
     */
    omit?: EmpruntOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpruntInclude<ExtArgs> | null
    where?: EmpruntWhereInput
    orderBy?: EmpruntOrderByWithRelationInput | EmpruntOrderByWithRelationInput[]
    cursor?: EmpruntWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmpruntScalarFieldEnum | EmpruntScalarFieldEnum[]
  }

  /**
   * Universite.recommandationsSource
   */
  export type Universite$recommandationsSourceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recommandation
     */
    select?: RecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recommandation
     */
    omit?: RecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecommandationInclude<ExtArgs> | null
    where?: RecommandationWhereInput
    orderBy?: RecommandationOrderByWithRelationInput | RecommandationOrderByWithRelationInput[]
    cursor?: RecommandationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RecommandationScalarFieldEnum | RecommandationScalarFieldEnum[]
  }

  /**
   * Universite.statistiquesBibliotheque
   */
  export type Universite$statistiquesBibliothequeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueBibliotheque
     */
    select?: StatistiqueBibliothequeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueBibliotheque
     */
    omit?: StatistiqueBibliothequeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueBibliothequeInclude<ExtArgs> | null
    where?: StatistiqueBibliothequeWhereInput
    orderBy?: StatistiqueBibliothequeOrderByWithRelationInput | StatistiqueBibliothequeOrderByWithRelationInput[]
    cursor?: StatistiqueBibliothequeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StatistiqueBibliothequeScalarFieldEnum | StatistiqueBibliothequeScalarFieldEnum[]
  }

  /**
   * Universite.partagesSource
   */
  export type Universite$partagesSourceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PartageUniversite
     */
    select?: PartageUniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PartageUniversite
     */
    omit?: PartageUniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PartageUniversiteInclude<ExtArgs> | null
    where?: PartageUniversiteWhereInput
    orderBy?: PartageUniversiteOrderByWithRelationInput | PartageUniversiteOrderByWithRelationInput[]
    cursor?: PartageUniversiteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PartageUniversiteScalarFieldEnum | PartageUniversiteScalarFieldEnum[]
  }

  /**
   * Universite.partagesDestination
   */
  export type Universite$partagesDestinationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PartageUniversite
     */
    select?: PartageUniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PartageUniversite
     */
    omit?: PartageUniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PartageUniversiteInclude<ExtArgs> | null
    where?: PartageUniversiteWhereInput
    orderBy?: PartageUniversiteOrderByWithRelationInput | PartageUniversiteOrderByWithRelationInput[]
    cursor?: PartageUniversiteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PartageUniversiteScalarFieldEnum | PartageUniversiteScalarFieldEnum[]
  }

  /**
   * Universite.transactionsOrigine
   */
  export type Universite$transactionsOrigineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionBlockchain
     */
    select?: TransactionBlockchainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionBlockchain
     */
    omit?: TransactionBlockchainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionBlockchainInclude<ExtArgs> | null
    where?: TransactionBlockchainWhereInput
    orderBy?: TransactionBlockchainOrderByWithRelationInput | TransactionBlockchainOrderByWithRelationInput[]
    cursor?: TransactionBlockchainWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionBlockchainScalarFieldEnum | TransactionBlockchainScalarFieldEnum[]
  }

  /**
   * Universite.transactionsDestination
   */
  export type Universite$transactionsDestinationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionBlockchain
     */
    select?: TransactionBlockchainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionBlockchain
     */
    omit?: TransactionBlockchainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionBlockchainInclude<ExtArgs> | null
    where?: TransactionBlockchainWhereInput
    orderBy?: TransactionBlockchainOrderByWithRelationInput | TransactionBlockchainOrderByWithRelationInput[]
    cursor?: TransactionBlockchainWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionBlockchainScalarFieldEnum | TransactionBlockchainScalarFieldEnum[]
  }

  /**
   * Universite.HistoriqueAcces
   */
  export type Universite$HistoriqueAccesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoriqueAcces
     */
    select?: HistoriqueAccesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoriqueAcces
     */
    omit?: HistoriqueAccesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoriqueAccesInclude<ExtArgs> | null
    where?: HistoriqueAccesWhereInput
    orderBy?: HistoriqueAccesOrderByWithRelationInput | HistoriqueAccesOrderByWithRelationInput[]
    cursor?: HistoriqueAccesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistoriqueAccesScalarFieldEnum | HistoriqueAccesScalarFieldEnum[]
  }

  /**
   * Universite without action
   */
  export type UniversiteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Universite
     */
    select?: UniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Universite
     */
    omit?: UniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversiteInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    nbMaxEmpruntsExternes: number | null
  }

  export type UserSumAggregateOutputType = {
    nbMaxEmpruntsExternes: number | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    motDePasse: string | null
    nom: string | null
    prenom: string | null
    image: string | null
    role: $Enums.RoleUser | null
    departement: string | null
    faculte: string | null
    specialite: string | null
    niveauEtudes: string | null
    dateInscription: Date | null
    derniereConnexion: Date | null
    estActif: boolean | null
    universiteId: string | null
    preferencesRecommandation: string | null
    frequenceRecommandation: $Enums.FrequenceRecommandation | null
    droitEmpruntExterieur: boolean | null
    droitReservationExterieure: boolean | null
    universiteAutorisees: string | null
    nbMaxEmpruntsExternes: number | null
    statutValidation: string | null
    dateValidation: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    motDePasse: string | null
    nom: string | null
    prenom: string | null
    image: string | null
    role: $Enums.RoleUser | null
    departement: string | null
    faculte: string | null
    specialite: string | null
    niveauEtudes: string | null
    dateInscription: Date | null
    derniereConnexion: Date | null
    estActif: boolean | null
    universiteId: string | null
    preferencesRecommandation: string | null
    frequenceRecommandation: $Enums.FrequenceRecommandation | null
    droitEmpruntExterieur: boolean | null
    droitReservationExterieure: boolean | null
    universiteAutorisees: string | null
    nbMaxEmpruntsExternes: number | null
    statutValidation: string | null
    dateValidation: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    motDePasse: number
    nom: number
    prenom: number
    image: number
    role: number
    departement: number
    faculte: number
    specialite: number
    niveauEtudes: number
    dateInscription: number
    derniereConnexion: number
    estActif: number
    universiteId: number
    preferencesRecommandation: number
    frequenceRecommandation: number
    droitEmpruntExterieur: number
    droitReservationExterieure: number
    universiteAutorisees: number
    nbMaxEmpruntsExternes: number
    statutValidation: number
    dateValidation: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    nbMaxEmpruntsExternes?: true
  }

  export type UserSumAggregateInputType = {
    nbMaxEmpruntsExternes?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    motDePasse?: true
    nom?: true
    prenom?: true
    image?: true
    role?: true
    departement?: true
    faculte?: true
    specialite?: true
    niveauEtudes?: true
    dateInscription?: true
    derniereConnexion?: true
    estActif?: true
    universiteId?: true
    preferencesRecommandation?: true
    frequenceRecommandation?: true
    droitEmpruntExterieur?: true
    droitReservationExterieure?: true
    universiteAutorisees?: true
    nbMaxEmpruntsExternes?: true
    statutValidation?: true
    dateValidation?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    motDePasse?: true
    nom?: true
    prenom?: true
    image?: true
    role?: true
    departement?: true
    faculte?: true
    specialite?: true
    niveauEtudes?: true
    dateInscription?: true
    derniereConnexion?: true
    estActif?: true
    universiteId?: true
    preferencesRecommandation?: true
    frequenceRecommandation?: true
    droitEmpruntExterieur?: true
    droitReservationExterieure?: true
    universiteAutorisees?: true
    nbMaxEmpruntsExternes?: true
    statutValidation?: true
    dateValidation?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    motDePasse?: true
    nom?: true
    prenom?: true
    image?: true
    role?: true
    departement?: true
    faculte?: true
    specialite?: true
    niveauEtudes?: true
    dateInscription?: true
    derniereConnexion?: true
    estActif?: true
    universiteId?: true
    preferencesRecommandation?: true
    frequenceRecommandation?: true
    droitEmpruntExterieur?: true
    droitReservationExterieure?: true
    universiteAutorisees?: true
    nbMaxEmpruntsExternes?: true
    statutValidation?: true
    dateValidation?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image: string | null
    role: $Enums.RoleUser
    departement: string | null
    faculte: string | null
    specialite: string | null
    niveauEtudes: string | null
    dateInscription: Date
    derniereConnexion: Date | null
    estActif: boolean
    universiteId: string
    preferencesRecommandation: string | null
    frequenceRecommandation: $Enums.FrequenceRecommandation
    droitEmpruntExterieur: boolean
    droitReservationExterieure: boolean
    universiteAutorisees: string | null
    nbMaxEmpruntsExternes: number
    statutValidation: string | null
    dateValidation: Date | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    motDePasse?: boolean
    nom?: boolean
    prenom?: boolean
    image?: boolean
    role?: boolean
    departement?: boolean
    faculte?: boolean
    specialite?: boolean
    niveauEtudes?: boolean
    dateInscription?: boolean
    derniereConnexion?: boolean
    estActif?: boolean
    universiteId?: boolean
    preferencesRecommandation?: boolean
    frequenceRecommandation?: boolean
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: boolean
    nbMaxEmpruntsExternes?: boolean
    statutValidation?: boolean
    dateValidation?: boolean
    universite?: boolean | UniversiteDefaultArgs<ExtArgs>
    contributions?: boolean | User$contributionsArgs<ExtArgs>
    favoris?: boolean | User$favorisArgs<ExtArgs>
    commentaires?: boolean | User$commentairesArgs<ExtArgs>
    notations?: boolean | User$notationsArgs<ExtArgs>
    historiques?: boolean | User$historiquesArgs<ExtArgs>
    collections?: boolean | User$collectionsArgs<ExtArgs>
    reservations?: boolean | User$reservationsArgs<ExtArgs>
    emprunts?: boolean | User$empruntsArgs<ExtArgs>
    recommandations?: boolean | User$recommandationsArgs<ExtArgs>
    JournalAudit?: boolean | User$JournalAuditArgs<ExtArgs>
    DonneesRecommandation?: boolean | User$DonneesRecommandationArgs<ExtArgs>
    Notification?: boolean | User$NotificationArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>



  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    motDePasse?: boolean
    nom?: boolean
    prenom?: boolean
    image?: boolean
    role?: boolean
    departement?: boolean
    faculte?: boolean
    specialite?: boolean
    niveauEtudes?: boolean
    dateInscription?: boolean
    derniereConnexion?: boolean
    estActif?: boolean
    universiteId?: boolean
    preferencesRecommandation?: boolean
    frequenceRecommandation?: boolean
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: boolean
    nbMaxEmpruntsExternes?: boolean
    statutValidation?: boolean
    dateValidation?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "motDePasse" | "nom" | "prenom" | "image" | "role" | "departement" | "faculte" | "specialite" | "niveauEtudes" | "dateInscription" | "derniereConnexion" | "estActif" | "universiteId" | "preferencesRecommandation" | "frequenceRecommandation" | "droitEmpruntExterieur" | "droitReservationExterieure" | "universiteAutorisees" | "nbMaxEmpruntsExternes" | "statutValidation" | "dateValidation", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    universite?: boolean | UniversiteDefaultArgs<ExtArgs>
    contributions?: boolean | User$contributionsArgs<ExtArgs>
    favoris?: boolean | User$favorisArgs<ExtArgs>
    commentaires?: boolean | User$commentairesArgs<ExtArgs>
    notations?: boolean | User$notationsArgs<ExtArgs>
    historiques?: boolean | User$historiquesArgs<ExtArgs>
    collections?: boolean | User$collectionsArgs<ExtArgs>
    reservations?: boolean | User$reservationsArgs<ExtArgs>
    emprunts?: boolean | User$empruntsArgs<ExtArgs>
    recommandations?: boolean | User$recommandationsArgs<ExtArgs>
    JournalAudit?: boolean | User$JournalAuditArgs<ExtArgs>
    DonneesRecommandation?: boolean | User$DonneesRecommandationArgs<ExtArgs>
    Notification?: boolean | User$NotificationArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      universite: Prisma.$UniversitePayload<ExtArgs>
      contributions: Prisma.$RessourcePayload<ExtArgs>[]
      favoris: Prisma.$FavoriPayload<ExtArgs>[]
      commentaires: Prisma.$CommentairePayload<ExtArgs>[]
      notations: Prisma.$NotationPayload<ExtArgs>[]
      historiques: Prisma.$HistoriqueAccesPayload<ExtArgs>[]
      collections: Prisma.$CollectionPayload<ExtArgs>[]
      reservations: Prisma.$ReservationPayload<ExtArgs>[]
      emprunts: Prisma.$EmpruntPayload<ExtArgs>[]
      recommandations: Prisma.$RecommandationPayload<ExtArgs>[]
      JournalAudit: Prisma.$JournalAuditPayload<ExtArgs>[]
      DonneesRecommandation: Prisma.$DonneesRecommandationPayload<ExtArgs>[]
      Notification: Prisma.$NotificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      motDePasse: string
      nom: string
      prenom: string
      image: string | null
      role: $Enums.RoleUser
      departement: string | null
      faculte: string | null
      specialite: string | null
      niveauEtudes: string | null
      dateInscription: Date
      derniereConnexion: Date | null
      estActif: boolean
      universiteId: string
      preferencesRecommandation: string | null
      frequenceRecommandation: $Enums.FrequenceRecommandation
      droitEmpruntExterieur: boolean
      droitReservationExterieure: boolean
      universiteAutorisees: string | null
      nbMaxEmpruntsExternes: number
      statutValidation: string | null
      dateValidation: Date | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    universite<T extends UniversiteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversiteDefaultArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    contributions<T extends User$contributionsArgs<ExtArgs> = {}>(args?: Subset<T, User$contributionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    favoris<T extends User$favorisArgs<ExtArgs> = {}>(args?: Subset<T, User$favorisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoriPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    commentaires<T extends User$commentairesArgs<ExtArgs> = {}>(args?: Subset<T, User$commentairesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentairePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notations<T extends User$notationsArgs<ExtArgs> = {}>(args?: Subset<T, User$notationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    historiques<T extends User$historiquesArgs<ExtArgs> = {}>(args?: Subset<T, User$historiquesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistoriqueAccesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    collections<T extends User$collectionsArgs<ExtArgs> = {}>(args?: Subset<T, User$collectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservations<T extends User$reservationsArgs<ExtArgs> = {}>(args?: Subset<T, User$reservationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    emprunts<T extends User$empruntsArgs<ExtArgs> = {}>(args?: Subset<T, User$empruntsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmpruntPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    recommandations<T extends User$recommandationsArgs<ExtArgs> = {}>(args?: Subset<T, User$recommandationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RecommandationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    JournalAudit<T extends User$JournalAuditArgs<ExtArgs> = {}>(args?: Subset<T, User$JournalAuditArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JournalAuditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    DonneesRecommandation<T extends User$DonneesRecommandationArgs<ExtArgs> = {}>(args?: Subset<T, User$DonneesRecommandationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonneesRecommandationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Notification<T extends User$NotificationArgs<ExtArgs> = {}>(args?: Subset<T, User$NotificationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly motDePasse: FieldRef<"User", 'String'>
    readonly nom: FieldRef<"User", 'String'>
    readonly prenom: FieldRef<"User", 'String'>
    readonly image: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'RoleUser'>
    readonly departement: FieldRef<"User", 'String'>
    readonly faculte: FieldRef<"User", 'String'>
    readonly specialite: FieldRef<"User", 'String'>
    readonly niveauEtudes: FieldRef<"User", 'String'>
    readonly dateInscription: FieldRef<"User", 'DateTime'>
    readonly derniereConnexion: FieldRef<"User", 'DateTime'>
    readonly estActif: FieldRef<"User", 'Boolean'>
    readonly universiteId: FieldRef<"User", 'String'>
    readonly preferencesRecommandation: FieldRef<"User", 'String'>
    readonly frequenceRecommandation: FieldRef<"User", 'FrequenceRecommandation'>
    readonly droitEmpruntExterieur: FieldRef<"User", 'Boolean'>
    readonly droitReservationExterieure: FieldRef<"User", 'Boolean'>
    readonly universiteAutorisees: FieldRef<"User", 'String'>
    readonly nbMaxEmpruntsExternes: FieldRef<"User", 'Int'>
    readonly statutValidation: FieldRef<"User", 'String'>
    readonly dateValidation: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.contributions
   */
  export type User$contributionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ressource
     */
    select?: RessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ressource
     */
    omit?: RessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RessourceInclude<ExtArgs> | null
    where?: RessourceWhereInput
    orderBy?: RessourceOrderByWithRelationInput | RessourceOrderByWithRelationInput[]
    cursor?: RessourceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RessourceScalarFieldEnum | RessourceScalarFieldEnum[]
  }

  /**
   * User.favoris
   */
  export type User$favorisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favori
     */
    select?: FavoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favori
     */
    omit?: FavoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriInclude<ExtArgs> | null
    where?: FavoriWhereInput
    orderBy?: FavoriOrderByWithRelationInput | FavoriOrderByWithRelationInput[]
    cursor?: FavoriWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriScalarFieldEnum | FavoriScalarFieldEnum[]
  }

  /**
   * User.commentaires
   */
  export type User$commentairesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commentaire
     */
    select?: CommentaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commentaire
     */
    omit?: CommentaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentaireInclude<ExtArgs> | null
    where?: CommentaireWhereInput
    orderBy?: CommentaireOrderByWithRelationInput | CommentaireOrderByWithRelationInput[]
    cursor?: CommentaireWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentaireScalarFieldEnum | CommentaireScalarFieldEnum[]
  }

  /**
   * User.notations
   */
  export type User$notationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notation
     */
    select?: NotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notation
     */
    omit?: NotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotationInclude<ExtArgs> | null
    where?: NotationWhereInput
    orderBy?: NotationOrderByWithRelationInput | NotationOrderByWithRelationInput[]
    cursor?: NotationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotationScalarFieldEnum | NotationScalarFieldEnum[]
  }

  /**
   * User.historiques
   */
  export type User$historiquesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoriqueAcces
     */
    select?: HistoriqueAccesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoriqueAcces
     */
    omit?: HistoriqueAccesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoriqueAccesInclude<ExtArgs> | null
    where?: HistoriqueAccesWhereInput
    orderBy?: HistoriqueAccesOrderByWithRelationInput | HistoriqueAccesOrderByWithRelationInput[]
    cursor?: HistoriqueAccesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistoriqueAccesScalarFieldEnum | HistoriqueAccesScalarFieldEnum[]
  }

  /**
   * User.collections
   */
  export type User$collectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    where?: CollectionWhereInput
    orderBy?: CollectionOrderByWithRelationInput | CollectionOrderByWithRelationInput[]
    cursor?: CollectionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CollectionScalarFieldEnum | CollectionScalarFieldEnum[]
  }

  /**
   * User.reservations
   */
  export type User$reservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    where?: ReservationWhereInput
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    cursor?: ReservationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * User.emprunts
   */
  export type User$empruntsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprunt
     */
    select?: EmpruntSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprunt
     */
    omit?: EmpruntOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpruntInclude<ExtArgs> | null
    where?: EmpruntWhereInput
    orderBy?: EmpruntOrderByWithRelationInput | EmpruntOrderByWithRelationInput[]
    cursor?: EmpruntWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmpruntScalarFieldEnum | EmpruntScalarFieldEnum[]
  }

  /**
   * User.recommandations
   */
  export type User$recommandationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recommandation
     */
    select?: RecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recommandation
     */
    omit?: RecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecommandationInclude<ExtArgs> | null
    where?: RecommandationWhereInput
    orderBy?: RecommandationOrderByWithRelationInput | RecommandationOrderByWithRelationInput[]
    cursor?: RecommandationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RecommandationScalarFieldEnum | RecommandationScalarFieldEnum[]
  }

  /**
   * User.JournalAudit
   */
  export type User$JournalAuditArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JournalAudit
     */
    select?: JournalAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JournalAudit
     */
    omit?: JournalAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JournalAuditInclude<ExtArgs> | null
    where?: JournalAuditWhereInput
    orderBy?: JournalAuditOrderByWithRelationInput | JournalAuditOrderByWithRelationInput[]
    cursor?: JournalAuditWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JournalAuditScalarFieldEnum | JournalAuditScalarFieldEnum[]
  }

  /**
   * User.DonneesRecommandation
   */
  export type User$DonneesRecommandationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonneesRecommandation
     */
    select?: DonneesRecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonneesRecommandation
     */
    omit?: DonneesRecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonneesRecommandationInclude<ExtArgs> | null
    where?: DonneesRecommandationWhereInput
    orderBy?: DonneesRecommandationOrderByWithRelationInput | DonneesRecommandationOrderByWithRelationInput[]
    cursor?: DonneesRecommandationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DonneesRecommandationScalarFieldEnum | DonneesRecommandationScalarFieldEnum[]
  }

  /**
   * User.Notification
   */
  export type User$NotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Favori
   */

  export type AggregateFavori = {
    _count: FavoriCountAggregateOutputType | null
    _min: FavoriMinAggregateOutputType | null
    _max: FavoriMaxAggregateOutputType | null
  }

  export type FavoriMinAggregateOutputType = {
    id: string | null
    userId: string | null
    ressourceId: string | null
    dateAjout: Date | null
    note: string | null
  }

  export type FavoriMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    ressourceId: string | null
    dateAjout: Date | null
    note: string | null
  }

  export type FavoriCountAggregateOutputType = {
    id: number
    userId: number
    ressourceId: number
    dateAjout: number
    note: number
    _all: number
  }


  export type FavoriMinAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    dateAjout?: true
    note?: true
  }

  export type FavoriMaxAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    dateAjout?: true
    note?: true
  }

  export type FavoriCountAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    dateAjout?: true
    note?: true
    _all?: true
  }

  export type FavoriAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favori to aggregate.
     */
    where?: FavoriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoris to fetch.
     */
    orderBy?: FavoriOrderByWithRelationInput | FavoriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FavoriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoris.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Favoris
    **/
    _count?: true | FavoriCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavoriMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavoriMaxAggregateInputType
  }

  export type GetFavoriAggregateType<T extends FavoriAggregateArgs> = {
        [P in keyof T & keyof AggregateFavori]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavori[P]>
      : GetScalarType<T[P], AggregateFavori[P]>
  }




  export type FavoriGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriWhereInput
    orderBy?: FavoriOrderByWithAggregationInput | FavoriOrderByWithAggregationInput[]
    by: FavoriScalarFieldEnum[] | FavoriScalarFieldEnum
    having?: FavoriScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavoriCountAggregateInputType | true
    _min?: FavoriMinAggregateInputType
    _max?: FavoriMaxAggregateInputType
  }

  export type FavoriGroupByOutputType = {
    id: string
    userId: string
    ressourceId: string
    dateAjout: Date
    note: string | null
    _count: FavoriCountAggregateOutputType | null
    _min: FavoriMinAggregateOutputType | null
    _max: FavoriMaxAggregateOutputType | null
  }

  type GetFavoriGroupByPayload<T extends FavoriGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavoriGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavoriGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavoriGroupByOutputType[P]>
            : GetScalarType<T[P], FavoriGroupByOutputType[P]>
        }
      >
    >


  export type FavoriSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    ressourceId?: boolean
    dateAjout?: boolean
    note?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favori"]>



  export type FavoriSelectScalar = {
    id?: boolean
    userId?: boolean
    ressourceId?: boolean
    dateAjout?: boolean
    note?: boolean
  }

  export type FavoriOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "ressourceId" | "dateAjout" | "note", ExtArgs["result"]["favori"]>
  export type FavoriInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
  }

  export type $FavoriPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Favori"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      ressource: Prisma.$RessourcePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      ressourceId: string
      dateAjout: Date
      note: string | null
    }, ExtArgs["result"]["favori"]>
    composites: {}
  }

  type FavoriGetPayload<S extends boolean | null | undefined | FavoriDefaultArgs> = $Result.GetResult<Prisma.$FavoriPayload, S>

  type FavoriCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FavoriFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FavoriCountAggregateInputType | true
    }

  export interface FavoriDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Favori'], meta: { name: 'Favori' } }
    /**
     * Find zero or one Favori that matches the filter.
     * @param {FavoriFindUniqueArgs} args - Arguments to find a Favori
     * @example
     * // Get one Favori
     * const favori = await prisma.favori.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FavoriFindUniqueArgs>(args: SelectSubset<T, FavoriFindUniqueArgs<ExtArgs>>): Prisma__FavoriClient<$Result.GetResult<Prisma.$FavoriPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Favori that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FavoriFindUniqueOrThrowArgs} args - Arguments to find a Favori
     * @example
     * // Get one Favori
     * const favori = await prisma.favori.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FavoriFindUniqueOrThrowArgs>(args: SelectSubset<T, FavoriFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FavoriClient<$Result.GetResult<Prisma.$FavoriPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Favori that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriFindFirstArgs} args - Arguments to find a Favori
     * @example
     * // Get one Favori
     * const favori = await prisma.favori.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FavoriFindFirstArgs>(args?: SelectSubset<T, FavoriFindFirstArgs<ExtArgs>>): Prisma__FavoriClient<$Result.GetResult<Prisma.$FavoriPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Favori that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriFindFirstOrThrowArgs} args - Arguments to find a Favori
     * @example
     * // Get one Favori
     * const favori = await prisma.favori.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FavoriFindFirstOrThrowArgs>(args?: SelectSubset<T, FavoriFindFirstOrThrowArgs<ExtArgs>>): Prisma__FavoriClient<$Result.GetResult<Prisma.$FavoriPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Favoris that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Favoris
     * const favoris = await prisma.favori.findMany()
     * 
     * // Get first 10 Favoris
     * const favoris = await prisma.favori.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const favoriWithIdOnly = await prisma.favori.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FavoriFindManyArgs>(args?: SelectSubset<T, FavoriFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoriPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Favori.
     * @param {FavoriCreateArgs} args - Arguments to create a Favori.
     * @example
     * // Create one Favori
     * const Favori = await prisma.favori.create({
     *   data: {
     *     // ... data to create a Favori
     *   }
     * })
     * 
     */
    create<T extends FavoriCreateArgs>(args: SelectSubset<T, FavoriCreateArgs<ExtArgs>>): Prisma__FavoriClient<$Result.GetResult<Prisma.$FavoriPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Favoris.
     * @param {FavoriCreateManyArgs} args - Arguments to create many Favoris.
     * @example
     * // Create many Favoris
     * const favori = await prisma.favori.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FavoriCreateManyArgs>(args?: SelectSubset<T, FavoriCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Favori.
     * @param {FavoriDeleteArgs} args - Arguments to delete one Favori.
     * @example
     * // Delete one Favori
     * const Favori = await prisma.favori.delete({
     *   where: {
     *     // ... filter to delete one Favori
     *   }
     * })
     * 
     */
    delete<T extends FavoriDeleteArgs>(args: SelectSubset<T, FavoriDeleteArgs<ExtArgs>>): Prisma__FavoriClient<$Result.GetResult<Prisma.$FavoriPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Favori.
     * @param {FavoriUpdateArgs} args - Arguments to update one Favori.
     * @example
     * // Update one Favori
     * const favori = await prisma.favori.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FavoriUpdateArgs>(args: SelectSubset<T, FavoriUpdateArgs<ExtArgs>>): Prisma__FavoriClient<$Result.GetResult<Prisma.$FavoriPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Favoris.
     * @param {FavoriDeleteManyArgs} args - Arguments to filter Favoris to delete.
     * @example
     * // Delete a few Favoris
     * const { count } = await prisma.favori.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FavoriDeleteManyArgs>(args?: SelectSubset<T, FavoriDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favoris.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Favoris
     * const favori = await prisma.favori.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FavoriUpdateManyArgs>(args: SelectSubset<T, FavoriUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Favori.
     * @param {FavoriUpsertArgs} args - Arguments to update or create a Favori.
     * @example
     * // Update or create a Favori
     * const favori = await prisma.favori.upsert({
     *   create: {
     *     // ... data to create a Favori
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Favori we want to update
     *   }
     * })
     */
    upsert<T extends FavoriUpsertArgs>(args: SelectSubset<T, FavoriUpsertArgs<ExtArgs>>): Prisma__FavoriClient<$Result.GetResult<Prisma.$FavoriPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Favoris.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriCountArgs} args - Arguments to filter Favoris to count.
     * @example
     * // Count the number of Favoris
     * const count = await prisma.favori.count({
     *   where: {
     *     // ... the filter for the Favoris we want to count
     *   }
     * })
    **/
    count<T extends FavoriCountArgs>(
      args?: Subset<T, FavoriCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavoriCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Favori.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavoriAggregateArgs>(args: Subset<T, FavoriAggregateArgs>): Prisma.PrismaPromise<GetFavoriAggregateType<T>>

    /**
     * Group by Favori.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FavoriGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FavoriGroupByArgs['orderBy'] }
        : { orderBy?: FavoriGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FavoriGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavoriGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Favori model
   */
  readonly fields: FavoriFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Favori.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FavoriClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ressource<T extends RessourceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RessourceDefaultArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Favori model
   */
  interface FavoriFieldRefs {
    readonly id: FieldRef<"Favori", 'String'>
    readonly userId: FieldRef<"Favori", 'String'>
    readonly ressourceId: FieldRef<"Favori", 'String'>
    readonly dateAjout: FieldRef<"Favori", 'DateTime'>
    readonly note: FieldRef<"Favori", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Favori findUnique
   */
  export type FavoriFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favori
     */
    select?: FavoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favori
     */
    omit?: FavoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriInclude<ExtArgs> | null
    /**
     * Filter, which Favori to fetch.
     */
    where: FavoriWhereUniqueInput
  }

  /**
   * Favori findUniqueOrThrow
   */
  export type FavoriFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favori
     */
    select?: FavoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favori
     */
    omit?: FavoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriInclude<ExtArgs> | null
    /**
     * Filter, which Favori to fetch.
     */
    where: FavoriWhereUniqueInput
  }

  /**
   * Favori findFirst
   */
  export type FavoriFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favori
     */
    select?: FavoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favori
     */
    omit?: FavoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriInclude<ExtArgs> | null
    /**
     * Filter, which Favori to fetch.
     */
    where?: FavoriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoris to fetch.
     */
    orderBy?: FavoriOrderByWithRelationInput | FavoriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favoris.
     */
    cursor?: FavoriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoris.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favoris.
     */
    distinct?: FavoriScalarFieldEnum | FavoriScalarFieldEnum[]
  }

  /**
   * Favori findFirstOrThrow
   */
  export type FavoriFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favori
     */
    select?: FavoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favori
     */
    omit?: FavoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriInclude<ExtArgs> | null
    /**
     * Filter, which Favori to fetch.
     */
    where?: FavoriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoris to fetch.
     */
    orderBy?: FavoriOrderByWithRelationInput | FavoriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favoris.
     */
    cursor?: FavoriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoris.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favoris.
     */
    distinct?: FavoriScalarFieldEnum | FavoriScalarFieldEnum[]
  }

  /**
   * Favori findMany
   */
  export type FavoriFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favori
     */
    select?: FavoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favori
     */
    omit?: FavoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriInclude<ExtArgs> | null
    /**
     * Filter, which Favoris to fetch.
     */
    where?: FavoriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoris to fetch.
     */
    orderBy?: FavoriOrderByWithRelationInput | FavoriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Favoris.
     */
    cursor?: FavoriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoris.
     */
    skip?: number
    distinct?: FavoriScalarFieldEnum | FavoriScalarFieldEnum[]
  }

  /**
   * Favori create
   */
  export type FavoriCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favori
     */
    select?: FavoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favori
     */
    omit?: FavoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriInclude<ExtArgs> | null
    /**
     * The data needed to create a Favori.
     */
    data: XOR<FavoriCreateInput, FavoriUncheckedCreateInput>
  }

  /**
   * Favori createMany
   */
  export type FavoriCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Favoris.
     */
    data: FavoriCreateManyInput | FavoriCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Favori update
   */
  export type FavoriUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favori
     */
    select?: FavoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favori
     */
    omit?: FavoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriInclude<ExtArgs> | null
    /**
     * The data needed to update a Favori.
     */
    data: XOR<FavoriUpdateInput, FavoriUncheckedUpdateInput>
    /**
     * Choose, which Favori to update.
     */
    where: FavoriWhereUniqueInput
  }

  /**
   * Favori updateMany
   */
  export type FavoriUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Favoris.
     */
    data: XOR<FavoriUpdateManyMutationInput, FavoriUncheckedUpdateManyInput>
    /**
     * Filter which Favoris to update
     */
    where?: FavoriWhereInput
    /**
     * Limit how many Favoris to update.
     */
    limit?: number
  }

  /**
   * Favori upsert
   */
  export type FavoriUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favori
     */
    select?: FavoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favori
     */
    omit?: FavoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriInclude<ExtArgs> | null
    /**
     * The filter to search for the Favori to update in case it exists.
     */
    where: FavoriWhereUniqueInput
    /**
     * In case the Favori found by the `where` argument doesn't exist, create a new Favori with this data.
     */
    create: XOR<FavoriCreateInput, FavoriUncheckedCreateInput>
    /**
     * In case the Favori was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FavoriUpdateInput, FavoriUncheckedUpdateInput>
  }

  /**
   * Favori delete
   */
  export type FavoriDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favori
     */
    select?: FavoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favori
     */
    omit?: FavoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriInclude<ExtArgs> | null
    /**
     * Filter which Favori to delete.
     */
    where: FavoriWhereUniqueInput
  }

  /**
   * Favori deleteMany
   */
  export type FavoriDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favoris to delete
     */
    where?: FavoriWhereInput
    /**
     * Limit how many Favoris to delete.
     */
    limit?: number
  }

  /**
   * Favori without action
   */
  export type FavoriDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favori
     */
    select?: FavoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favori
     */
    omit?: FavoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriInclude<ExtArgs> | null
  }


  /**
   * Model Commentaire
   */

  export type AggregateCommentaire = {
    _count: CommentaireCountAggregateOutputType | null
    _min: CommentaireMinAggregateOutputType | null
    _max: CommentaireMaxAggregateOutputType | null
  }

  export type CommentaireMinAggregateOutputType = {
    id: string | null
    userId: string | null
    ressourceId: string | null
    contenu: string | null
    dateCreation: Date | null
    estModere: boolean | null
  }

  export type CommentaireMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    ressourceId: string | null
    contenu: string | null
    dateCreation: Date | null
    estModere: boolean | null
  }

  export type CommentaireCountAggregateOutputType = {
    id: number
    userId: number
    ressourceId: number
    contenu: number
    dateCreation: number
    estModere: number
    _all: number
  }


  export type CommentaireMinAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    contenu?: true
    dateCreation?: true
    estModere?: true
  }

  export type CommentaireMaxAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    contenu?: true
    dateCreation?: true
    estModere?: true
  }

  export type CommentaireCountAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    contenu?: true
    dateCreation?: true
    estModere?: true
    _all?: true
  }

  export type CommentaireAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Commentaire to aggregate.
     */
    where?: CommentaireWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Commentaires to fetch.
     */
    orderBy?: CommentaireOrderByWithRelationInput | CommentaireOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CommentaireWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Commentaires from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Commentaires.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Commentaires
    **/
    _count?: true | CommentaireCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommentaireMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommentaireMaxAggregateInputType
  }

  export type GetCommentaireAggregateType<T extends CommentaireAggregateArgs> = {
        [P in keyof T & keyof AggregateCommentaire]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommentaire[P]>
      : GetScalarType<T[P], AggregateCommentaire[P]>
  }




  export type CommentaireGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentaireWhereInput
    orderBy?: CommentaireOrderByWithAggregationInput | CommentaireOrderByWithAggregationInput[]
    by: CommentaireScalarFieldEnum[] | CommentaireScalarFieldEnum
    having?: CommentaireScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommentaireCountAggregateInputType | true
    _min?: CommentaireMinAggregateInputType
    _max?: CommentaireMaxAggregateInputType
  }

  export type CommentaireGroupByOutputType = {
    id: string
    userId: string
    ressourceId: string
    contenu: string
    dateCreation: Date
    estModere: boolean
    _count: CommentaireCountAggregateOutputType | null
    _min: CommentaireMinAggregateOutputType | null
    _max: CommentaireMaxAggregateOutputType | null
  }

  type GetCommentaireGroupByPayload<T extends CommentaireGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommentaireGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommentaireGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommentaireGroupByOutputType[P]>
            : GetScalarType<T[P], CommentaireGroupByOutputType[P]>
        }
      >
    >


  export type CommentaireSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    ressourceId?: boolean
    contenu?: boolean
    dateCreation?: boolean
    estModere?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["commentaire"]>



  export type CommentaireSelectScalar = {
    id?: boolean
    userId?: boolean
    ressourceId?: boolean
    contenu?: boolean
    dateCreation?: boolean
    estModere?: boolean
  }

  export type CommentaireOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "ressourceId" | "contenu" | "dateCreation" | "estModere", ExtArgs["result"]["commentaire"]>
  export type CommentaireInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
  }

  export type $CommentairePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Commentaire"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      ressource: Prisma.$RessourcePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      ressourceId: string
      contenu: string
      dateCreation: Date
      estModere: boolean
    }, ExtArgs["result"]["commentaire"]>
    composites: {}
  }

  type CommentaireGetPayload<S extends boolean | null | undefined | CommentaireDefaultArgs> = $Result.GetResult<Prisma.$CommentairePayload, S>

  type CommentaireCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CommentaireFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommentaireCountAggregateInputType | true
    }

  export interface CommentaireDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Commentaire'], meta: { name: 'Commentaire' } }
    /**
     * Find zero or one Commentaire that matches the filter.
     * @param {CommentaireFindUniqueArgs} args - Arguments to find a Commentaire
     * @example
     * // Get one Commentaire
     * const commentaire = await prisma.commentaire.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CommentaireFindUniqueArgs>(args: SelectSubset<T, CommentaireFindUniqueArgs<ExtArgs>>): Prisma__CommentaireClient<$Result.GetResult<Prisma.$CommentairePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Commentaire that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CommentaireFindUniqueOrThrowArgs} args - Arguments to find a Commentaire
     * @example
     * // Get one Commentaire
     * const commentaire = await prisma.commentaire.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CommentaireFindUniqueOrThrowArgs>(args: SelectSubset<T, CommentaireFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CommentaireClient<$Result.GetResult<Prisma.$CommentairePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Commentaire that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentaireFindFirstArgs} args - Arguments to find a Commentaire
     * @example
     * // Get one Commentaire
     * const commentaire = await prisma.commentaire.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CommentaireFindFirstArgs>(args?: SelectSubset<T, CommentaireFindFirstArgs<ExtArgs>>): Prisma__CommentaireClient<$Result.GetResult<Prisma.$CommentairePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Commentaire that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentaireFindFirstOrThrowArgs} args - Arguments to find a Commentaire
     * @example
     * // Get one Commentaire
     * const commentaire = await prisma.commentaire.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CommentaireFindFirstOrThrowArgs>(args?: SelectSubset<T, CommentaireFindFirstOrThrowArgs<ExtArgs>>): Prisma__CommentaireClient<$Result.GetResult<Prisma.$CommentairePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Commentaires that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentaireFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Commentaires
     * const commentaires = await prisma.commentaire.findMany()
     * 
     * // Get first 10 Commentaires
     * const commentaires = await prisma.commentaire.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const commentaireWithIdOnly = await prisma.commentaire.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CommentaireFindManyArgs>(args?: SelectSubset<T, CommentaireFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentairePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Commentaire.
     * @param {CommentaireCreateArgs} args - Arguments to create a Commentaire.
     * @example
     * // Create one Commentaire
     * const Commentaire = await prisma.commentaire.create({
     *   data: {
     *     // ... data to create a Commentaire
     *   }
     * })
     * 
     */
    create<T extends CommentaireCreateArgs>(args: SelectSubset<T, CommentaireCreateArgs<ExtArgs>>): Prisma__CommentaireClient<$Result.GetResult<Prisma.$CommentairePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Commentaires.
     * @param {CommentaireCreateManyArgs} args - Arguments to create many Commentaires.
     * @example
     * // Create many Commentaires
     * const commentaire = await prisma.commentaire.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CommentaireCreateManyArgs>(args?: SelectSubset<T, CommentaireCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Commentaire.
     * @param {CommentaireDeleteArgs} args - Arguments to delete one Commentaire.
     * @example
     * // Delete one Commentaire
     * const Commentaire = await prisma.commentaire.delete({
     *   where: {
     *     // ... filter to delete one Commentaire
     *   }
     * })
     * 
     */
    delete<T extends CommentaireDeleteArgs>(args: SelectSubset<T, CommentaireDeleteArgs<ExtArgs>>): Prisma__CommentaireClient<$Result.GetResult<Prisma.$CommentairePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Commentaire.
     * @param {CommentaireUpdateArgs} args - Arguments to update one Commentaire.
     * @example
     * // Update one Commentaire
     * const commentaire = await prisma.commentaire.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CommentaireUpdateArgs>(args: SelectSubset<T, CommentaireUpdateArgs<ExtArgs>>): Prisma__CommentaireClient<$Result.GetResult<Prisma.$CommentairePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Commentaires.
     * @param {CommentaireDeleteManyArgs} args - Arguments to filter Commentaires to delete.
     * @example
     * // Delete a few Commentaires
     * const { count } = await prisma.commentaire.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CommentaireDeleteManyArgs>(args?: SelectSubset<T, CommentaireDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Commentaires.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentaireUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Commentaires
     * const commentaire = await prisma.commentaire.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CommentaireUpdateManyArgs>(args: SelectSubset<T, CommentaireUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Commentaire.
     * @param {CommentaireUpsertArgs} args - Arguments to update or create a Commentaire.
     * @example
     * // Update or create a Commentaire
     * const commentaire = await prisma.commentaire.upsert({
     *   create: {
     *     // ... data to create a Commentaire
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Commentaire we want to update
     *   }
     * })
     */
    upsert<T extends CommentaireUpsertArgs>(args: SelectSubset<T, CommentaireUpsertArgs<ExtArgs>>): Prisma__CommentaireClient<$Result.GetResult<Prisma.$CommentairePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Commentaires.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentaireCountArgs} args - Arguments to filter Commentaires to count.
     * @example
     * // Count the number of Commentaires
     * const count = await prisma.commentaire.count({
     *   where: {
     *     // ... the filter for the Commentaires we want to count
     *   }
     * })
    **/
    count<T extends CommentaireCountArgs>(
      args?: Subset<T, CommentaireCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommentaireCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Commentaire.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentaireAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommentaireAggregateArgs>(args: Subset<T, CommentaireAggregateArgs>): Prisma.PrismaPromise<GetCommentaireAggregateType<T>>

    /**
     * Group by Commentaire.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentaireGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CommentaireGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CommentaireGroupByArgs['orderBy'] }
        : { orderBy?: CommentaireGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CommentaireGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommentaireGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Commentaire model
   */
  readonly fields: CommentaireFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Commentaire.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CommentaireClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ressource<T extends RessourceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RessourceDefaultArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Commentaire model
   */
  interface CommentaireFieldRefs {
    readonly id: FieldRef<"Commentaire", 'String'>
    readonly userId: FieldRef<"Commentaire", 'String'>
    readonly ressourceId: FieldRef<"Commentaire", 'String'>
    readonly contenu: FieldRef<"Commentaire", 'String'>
    readonly dateCreation: FieldRef<"Commentaire", 'DateTime'>
    readonly estModere: FieldRef<"Commentaire", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Commentaire findUnique
   */
  export type CommentaireFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commentaire
     */
    select?: CommentaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commentaire
     */
    omit?: CommentaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentaireInclude<ExtArgs> | null
    /**
     * Filter, which Commentaire to fetch.
     */
    where: CommentaireWhereUniqueInput
  }

  /**
   * Commentaire findUniqueOrThrow
   */
  export type CommentaireFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commentaire
     */
    select?: CommentaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commentaire
     */
    omit?: CommentaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentaireInclude<ExtArgs> | null
    /**
     * Filter, which Commentaire to fetch.
     */
    where: CommentaireWhereUniqueInput
  }

  /**
   * Commentaire findFirst
   */
  export type CommentaireFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commentaire
     */
    select?: CommentaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commentaire
     */
    omit?: CommentaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentaireInclude<ExtArgs> | null
    /**
     * Filter, which Commentaire to fetch.
     */
    where?: CommentaireWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Commentaires to fetch.
     */
    orderBy?: CommentaireOrderByWithRelationInput | CommentaireOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Commentaires.
     */
    cursor?: CommentaireWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Commentaires from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Commentaires.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Commentaires.
     */
    distinct?: CommentaireScalarFieldEnum | CommentaireScalarFieldEnum[]
  }

  /**
   * Commentaire findFirstOrThrow
   */
  export type CommentaireFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commentaire
     */
    select?: CommentaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commentaire
     */
    omit?: CommentaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentaireInclude<ExtArgs> | null
    /**
     * Filter, which Commentaire to fetch.
     */
    where?: CommentaireWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Commentaires to fetch.
     */
    orderBy?: CommentaireOrderByWithRelationInput | CommentaireOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Commentaires.
     */
    cursor?: CommentaireWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Commentaires from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Commentaires.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Commentaires.
     */
    distinct?: CommentaireScalarFieldEnum | CommentaireScalarFieldEnum[]
  }

  /**
   * Commentaire findMany
   */
  export type CommentaireFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commentaire
     */
    select?: CommentaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commentaire
     */
    omit?: CommentaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentaireInclude<ExtArgs> | null
    /**
     * Filter, which Commentaires to fetch.
     */
    where?: CommentaireWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Commentaires to fetch.
     */
    orderBy?: CommentaireOrderByWithRelationInput | CommentaireOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Commentaires.
     */
    cursor?: CommentaireWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Commentaires from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Commentaires.
     */
    skip?: number
    distinct?: CommentaireScalarFieldEnum | CommentaireScalarFieldEnum[]
  }

  /**
   * Commentaire create
   */
  export type CommentaireCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commentaire
     */
    select?: CommentaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commentaire
     */
    omit?: CommentaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentaireInclude<ExtArgs> | null
    /**
     * The data needed to create a Commentaire.
     */
    data: XOR<CommentaireCreateInput, CommentaireUncheckedCreateInput>
  }

  /**
   * Commentaire createMany
   */
  export type CommentaireCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Commentaires.
     */
    data: CommentaireCreateManyInput | CommentaireCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Commentaire update
   */
  export type CommentaireUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commentaire
     */
    select?: CommentaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commentaire
     */
    omit?: CommentaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentaireInclude<ExtArgs> | null
    /**
     * The data needed to update a Commentaire.
     */
    data: XOR<CommentaireUpdateInput, CommentaireUncheckedUpdateInput>
    /**
     * Choose, which Commentaire to update.
     */
    where: CommentaireWhereUniqueInput
  }

  /**
   * Commentaire updateMany
   */
  export type CommentaireUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Commentaires.
     */
    data: XOR<CommentaireUpdateManyMutationInput, CommentaireUncheckedUpdateManyInput>
    /**
     * Filter which Commentaires to update
     */
    where?: CommentaireWhereInput
    /**
     * Limit how many Commentaires to update.
     */
    limit?: number
  }

  /**
   * Commentaire upsert
   */
  export type CommentaireUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commentaire
     */
    select?: CommentaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commentaire
     */
    omit?: CommentaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentaireInclude<ExtArgs> | null
    /**
     * The filter to search for the Commentaire to update in case it exists.
     */
    where: CommentaireWhereUniqueInput
    /**
     * In case the Commentaire found by the `where` argument doesn't exist, create a new Commentaire with this data.
     */
    create: XOR<CommentaireCreateInput, CommentaireUncheckedCreateInput>
    /**
     * In case the Commentaire was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CommentaireUpdateInput, CommentaireUncheckedUpdateInput>
  }

  /**
   * Commentaire delete
   */
  export type CommentaireDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commentaire
     */
    select?: CommentaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commentaire
     */
    omit?: CommentaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentaireInclude<ExtArgs> | null
    /**
     * Filter which Commentaire to delete.
     */
    where: CommentaireWhereUniqueInput
  }

  /**
   * Commentaire deleteMany
   */
  export type CommentaireDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Commentaires to delete
     */
    where?: CommentaireWhereInput
    /**
     * Limit how many Commentaires to delete.
     */
    limit?: number
  }

  /**
   * Commentaire without action
   */
  export type CommentaireDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commentaire
     */
    select?: CommentaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commentaire
     */
    omit?: CommentaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentaireInclude<ExtArgs> | null
  }


  /**
   * Model Notation
   */

  export type AggregateNotation = {
    _count: NotationCountAggregateOutputType | null
    _avg: NotationAvgAggregateOutputType | null
    _sum: NotationSumAggregateOutputType | null
    _min: NotationMinAggregateOutputType | null
    _max: NotationMaxAggregateOutputType | null
  }

  export type NotationAvgAggregateOutputType = {
    note: number | null
  }

  export type NotationSumAggregateOutputType = {
    note: number | null
  }

  export type NotationMinAggregateOutputType = {
    id: string | null
    userId: string | null
    ressourceId: string | null
    note: number | null
    dateNotation: Date | null
  }

  export type NotationMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    ressourceId: string | null
    note: number | null
    dateNotation: Date | null
  }

  export type NotationCountAggregateOutputType = {
    id: number
    userId: number
    ressourceId: number
    note: number
    dateNotation: number
    _all: number
  }


  export type NotationAvgAggregateInputType = {
    note?: true
  }

  export type NotationSumAggregateInputType = {
    note?: true
  }

  export type NotationMinAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    note?: true
    dateNotation?: true
  }

  export type NotationMaxAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    note?: true
    dateNotation?: true
  }

  export type NotationCountAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    note?: true
    dateNotation?: true
    _all?: true
  }

  export type NotationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notation to aggregate.
     */
    where?: NotationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notations to fetch.
     */
    orderBy?: NotationOrderByWithRelationInput | NotationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notations
    **/
    _count?: true | NotationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotationMaxAggregateInputType
  }

  export type GetNotationAggregateType<T extends NotationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotation[P]>
      : GetScalarType<T[P], AggregateNotation[P]>
  }




  export type NotationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotationWhereInput
    orderBy?: NotationOrderByWithAggregationInput | NotationOrderByWithAggregationInput[]
    by: NotationScalarFieldEnum[] | NotationScalarFieldEnum
    having?: NotationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotationCountAggregateInputType | true
    _avg?: NotationAvgAggregateInputType
    _sum?: NotationSumAggregateInputType
    _min?: NotationMinAggregateInputType
    _max?: NotationMaxAggregateInputType
  }

  export type NotationGroupByOutputType = {
    id: string
    userId: string
    ressourceId: string
    note: number
    dateNotation: Date
    _count: NotationCountAggregateOutputType | null
    _avg: NotationAvgAggregateOutputType | null
    _sum: NotationSumAggregateOutputType | null
    _min: NotationMinAggregateOutputType | null
    _max: NotationMaxAggregateOutputType | null
  }

  type GetNotationGroupByPayload<T extends NotationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotationGroupByOutputType[P]>
            : GetScalarType<T[P], NotationGroupByOutputType[P]>
        }
      >
    >


  export type NotationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    ressourceId?: boolean
    note?: boolean
    dateNotation?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notation"]>



  export type NotationSelectScalar = {
    id?: boolean
    userId?: boolean
    ressourceId?: boolean
    note?: boolean
    dateNotation?: boolean
  }

  export type NotationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "ressourceId" | "note" | "dateNotation", ExtArgs["result"]["notation"]>
  export type NotationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
  }

  export type $NotationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notation"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      ressource: Prisma.$RessourcePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      ressourceId: string
      note: number
      dateNotation: Date
    }, ExtArgs["result"]["notation"]>
    composites: {}
  }

  type NotationGetPayload<S extends boolean | null | undefined | NotationDefaultArgs> = $Result.GetResult<Prisma.$NotationPayload, S>

  type NotationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NotationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotationCountAggregateInputType | true
    }

  export interface NotationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notation'], meta: { name: 'Notation' } }
    /**
     * Find zero or one Notation that matches the filter.
     * @param {NotationFindUniqueArgs} args - Arguments to find a Notation
     * @example
     * // Get one Notation
     * const notation = await prisma.notation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotationFindUniqueArgs>(args: SelectSubset<T, NotationFindUniqueArgs<ExtArgs>>): Prisma__NotationClient<$Result.GetResult<Prisma.$NotationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NotationFindUniqueOrThrowArgs} args - Arguments to find a Notation
     * @example
     * // Get one Notation
     * const notation = await prisma.notation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotationFindUniqueOrThrowArgs>(args: SelectSubset<T, NotationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotationClient<$Result.GetResult<Prisma.$NotationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotationFindFirstArgs} args - Arguments to find a Notation
     * @example
     * // Get one Notation
     * const notation = await prisma.notation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotationFindFirstArgs>(args?: SelectSubset<T, NotationFindFirstArgs<ExtArgs>>): Prisma__NotationClient<$Result.GetResult<Prisma.$NotationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotationFindFirstOrThrowArgs} args - Arguments to find a Notation
     * @example
     * // Get one Notation
     * const notation = await prisma.notation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotationFindFirstOrThrowArgs>(args?: SelectSubset<T, NotationFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotationClient<$Result.GetResult<Prisma.$NotationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notations
     * const notations = await prisma.notation.findMany()
     * 
     * // Get first 10 Notations
     * const notations = await prisma.notation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notationWithIdOnly = await prisma.notation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotationFindManyArgs>(args?: SelectSubset<T, NotationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notation.
     * @param {NotationCreateArgs} args - Arguments to create a Notation.
     * @example
     * // Create one Notation
     * const Notation = await prisma.notation.create({
     *   data: {
     *     // ... data to create a Notation
     *   }
     * })
     * 
     */
    create<T extends NotationCreateArgs>(args: SelectSubset<T, NotationCreateArgs<ExtArgs>>): Prisma__NotationClient<$Result.GetResult<Prisma.$NotationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notations.
     * @param {NotationCreateManyArgs} args - Arguments to create many Notations.
     * @example
     * // Create many Notations
     * const notation = await prisma.notation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotationCreateManyArgs>(args?: SelectSubset<T, NotationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Notation.
     * @param {NotationDeleteArgs} args - Arguments to delete one Notation.
     * @example
     * // Delete one Notation
     * const Notation = await prisma.notation.delete({
     *   where: {
     *     // ... filter to delete one Notation
     *   }
     * })
     * 
     */
    delete<T extends NotationDeleteArgs>(args: SelectSubset<T, NotationDeleteArgs<ExtArgs>>): Prisma__NotationClient<$Result.GetResult<Prisma.$NotationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notation.
     * @param {NotationUpdateArgs} args - Arguments to update one Notation.
     * @example
     * // Update one Notation
     * const notation = await prisma.notation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotationUpdateArgs>(args: SelectSubset<T, NotationUpdateArgs<ExtArgs>>): Prisma__NotationClient<$Result.GetResult<Prisma.$NotationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notations.
     * @param {NotationDeleteManyArgs} args - Arguments to filter Notations to delete.
     * @example
     * // Delete a few Notations
     * const { count } = await prisma.notation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotationDeleteManyArgs>(args?: SelectSubset<T, NotationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notations
     * const notation = await prisma.notation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotationUpdateManyArgs>(args: SelectSubset<T, NotationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Notation.
     * @param {NotationUpsertArgs} args - Arguments to update or create a Notation.
     * @example
     * // Update or create a Notation
     * const notation = await prisma.notation.upsert({
     *   create: {
     *     // ... data to create a Notation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notation we want to update
     *   }
     * })
     */
    upsert<T extends NotationUpsertArgs>(args: SelectSubset<T, NotationUpsertArgs<ExtArgs>>): Prisma__NotationClient<$Result.GetResult<Prisma.$NotationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotationCountArgs} args - Arguments to filter Notations to count.
     * @example
     * // Count the number of Notations
     * const count = await prisma.notation.count({
     *   where: {
     *     // ... the filter for the Notations we want to count
     *   }
     * })
    **/
    count<T extends NotationCountArgs>(
      args?: Subset<T, NotationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotationAggregateArgs>(args: Subset<T, NotationAggregateArgs>): Prisma.PrismaPromise<GetNotationAggregateType<T>>

    /**
     * Group by Notation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotationGroupByArgs['orderBy'] }
        : { orderBy?: NotationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notation model
   */
  readonly fields: NotationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ressource<T extends RessourceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RessourceDefaultArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notation model
   */
  interface NotationFieldRefs {
    readonly id: FieldRef<"Notation", 'String'>
    readonly userId: FieldRef<"Notation", 'String'>
    readonly ressourceId: FieldRef<"Notation", 'String'>
    readonly note: FieldRef<"Notation", 'Int'>
    readonly dateNotation: FieldRef<"Notation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Notation findUnique
   */
  export type NotationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notation
     */
    select?: NotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notation
     */
    omit?: NotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotationInclude<ExtArgs> | null
    /**
     * Filter, which Notation to fetch.
     */
    where: NotationWhereUniqueInput
  }

  /**
   * Notation findUniqueOrThrow
   */
  export type NotationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notation
     */
    select?: NotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notation
     */
    omit?: NotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotationInclude<ExtArgs> | null
    /**
     * Filter, which Notation to fetch.
     */
    where: NotationWhereUniqueInput
  }

  /**
   * Notation findFirst
   */
  export type NotationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notation
     */
    select?: NotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notation
     */
    omit?: NotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotationInclude<ExtArgs> | null
    /**
     * Filter, which Notation to fetch.
     */
    where?: NotationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notations to fetch.
     */
    orderBy?: NotationOrderByWithRelationInput | NotationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notations.
     */
    cursor?: NotationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notations.
     */
    distinct?: NotationScalarFieldEnum | NotationScalarFieldEnum[]
  }

  /**
   * Notation findFirstOrThrow
   */
  export type NotationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notation
     */
    select?: NotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notation
     */
    omit?: NotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotationInclude<ExtArgs> | null
    /**
     * Filter, which Notation to fetch.
     */
    where?: NotationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notations to fetch.
     */
    orderBy?: NotationOrderByWithRelationInput | NotationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notations.
     */
    cursor?: NotationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notations.
     */
    distinct?: NotationScalarFieldEnum | NotationScalarFieldEnum[]
  }

  /**
   * Notation findMany
   */
  export type NotationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notation
     */
    select?: NotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notation
     */
    omit?: NotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotationInclude<ExtArgs> | null
    /**
     * Filter, which Notations to fetch.
     */
    where?: NotationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notations to fetch.
     */
    orderBy?: NotationOrderByWithRelationInput | NotationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notations.
     */
    cursor?: NotationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notations.
     */
    skip?: number
    distinct?: NotationScalarFieldEnum | NotationScalarFieldEnum[]
  }

  /**
   * Notation create
   */
  export type NotationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notation
     */
    select?: NotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notation
     */
    omit?: NotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotationInclude<ExtArgs> | null
    /**
     * The data needed to create a Notation.
     */
    data: XOR<NotationCreateInput, NotationUncheckedCreateInput>
  }

  /**
   * Notation createMany
   */
  export type NotationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notations.
     */
    data: NotationCreateManyInput | NotationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notation update
   */
  export type NotationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notation
     */
    select?: NotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notation
     */
    omit?: NotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotationInclude<ExtArgs> | null
    /**
     * The data needed to update a Notation.
     */
    data: XOR<NotationUpdateInput, NotationUncheckedUpdateInput>
    /**
     * Choose, which Notation to update.
     */
    where: NotationWhereUniqueInput
  }

  /**
   * Notation updateMany
   */
  export type NotationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notations.
     */
    data: XOR<NotationUpdateManyMutationInput, NotationUncheckedUpdateManyInput>
    /**
     * Filter which Notations to update
     */
    where?: NotationWhereInput
    /**
     * Limit how many Notations to update.
     */
    limit?: number
  }

  /**
   * Notation upsert
   */
  export type NotationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notation
     */
    select?: NotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notation
     */
    omit?: NotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotationInclude<ExtArgs> | null
    /**
     * The filter to search for the Notation to update in case it exists.
     */
    where: NotationWhereUniqueInput
    /**
     * In case the Notation found by the `where` argument doesn't exist, create a new Notation with this data.
     */
    create: XOR<NotationCreateInput, NotationUncheckedCreateInput>
    /**
     * In case the Notation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotationUpdateInput, NotationUncheckedUpdateInput>
  }

  /**
   * Notation delete
   */
  export type NotationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notation
     */
    select?: NotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notation
     */
    omit?: NotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotationInclude<ExtArgs> | null
    /**
     * Filter which Notation to delete.
     */
    where: NotationWhereUniqueInput
  }

  /**
   * Notation deleteMany
   */
  export type NotationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notations to delete
     */
    where?: NotationWhereInput
    /**
     * Limit how many Notations to delete.
     */
    limit?: number
  }

  /**
   * Notation without action
   */
  export type NotationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notation
     */
    select?: NotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notation
     */
    omit?: NotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotationInclude<ExtArgs> | null
  }


  /**
   * Model HistoriqueAcces
   */

  export type AggregateHistoriqueAcces = {
    _count: HistoriqueAccesCountAggregateOutputType | null
    _min: HistoriqueAccesMinAggregateOutputType | null
    _max: HistoriqueAccesMaxAggregateOutputType | null
  }

  export type HistoriqueAccesMinAggregateOutputType = {
    id: string | null
    userId: string | null
    ressourceId: string | null
    dateAcces: Date | null
    typeAcces: $Enums.TypeAcces | null
    ipAcces: string | null
    universiteSrc: string | null
  }

  export type HistoriqueAccesMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    ressourceId: string | null
    dateAcces: Date | null
    typeAcces: $Enums.TypeAcces | null
    ipAcces: string | null
    universiteSrc: string | null
  }

  export type HistoriqueAccesCountAggregateOutputType = {
    id: number
    userId: number
    ressourceId: number
    dateAcces: number
    typeAcces: number
    ipAcces: number
    universiteSrc: number
    _all: number
  }


  export type HistoriqueAccesMinAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    dateAcces?: true
    typeAcces?: true
    ipAcces?: true
    universiteSrc?: true
  }

  export type HistoriqueAccesMaxAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    dateAcces?: true
    typeAcces?: true
    ipAcces?: true
    universiteSrc?: true
  }

  export type HistoriqueAccesCountAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    dateAcces?: true
    typeAcces?: true
    ipAcces?: true
    universiteSrc?: true
    _all?: true
  }

  export type HistoriqueAccesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistoriqueAcces to aggregate.
     */
    where?: HistoriqueAccesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistoriqueAcces to fetch.
     */
    orderBy?: HistoriqueAccesOrderByWithRelationInput | HistoriqueAccesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HistoriqueAccesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistoriqueAcces from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistoriqueAcces.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HistoriqueAcces
    **/
    _count?: true | HistoriqueAccesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HistoriqueAccesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HistoriqueAccesMaxAggregateInputType
  }

  export type GetHistoriqueAccesAggregateType<T extends HistoriqueAccesAggregateArgs> = {
        [P in keyof T & keyof AggregateHistoriqueAcces]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistoriqueAcces[P]>
      : GetScalarType<T[P], AggregateHistoriqueAcces[P]>
  }




  export type HistoriqueAccesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistoriqueAccesWhereInput
    orderBy?: HistoriqueAccesOrderByWithAggregationInput | HistoriqueAccesOrderByWithAggregationInput[]
    by: HistoriqueAccesScalarFieldEnum[] | HistoriqueAccesScalarFieldEnum
    having?: HistoriqueAccesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HistoriqueAccesCountAggregateInputType | true
    _min?: HistoriqueAccesMinAggregateInputType
    _max?: HistoriqueAccesMaxAggregateInputType
  }

  export type HistoriqueAccesGroupByOutputType = {
    id: string
    userId: string
    ressourceId: string
    dateAcces: Date
    typeAcces: $Enums.TypeAcces
    ipAcces: string
    universiteSrc: string | null
    _count: HistoriqueAccesCountAggregateOutputType | null
    _min: HistoriqueAccesMinAggregateOutputType | null
    _max: HistoriqueAccesMaxAggregateOutputType | null
  }

  type GetHistoriqueAccesGroupByPayload<T extends HistoriqueAccesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HistoriqueAccesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HistoriqueAccesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HistoriqueAccesGroupByOutputType[P]>
            : GetScalarType<T[P], HistoriqueAccesGroupByOutputType[P]>
        }
      >
    >


  export type HistoriqueAccesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    ressourceId?: boolean
    dateAcces?: boolean
    typeAcces?: boolean
    ipAcces?: boolean
    universiteSrc?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
    universiteSrcRel?: boolean | HistoriqueAcces$universiteSrcRelArgs<ExtArgs>
  }, ExtArgs["result"]["historiqueAcces"]>



  export type HistoriqueAccesSelectScalar = {
    id?: boolean
    userId?: boolean
    ressourceId?: boolean
    dateAcces?: boolean
    typeAcces?: boolean
    ipAcces?: boolean
    universiteSrc?: boolean
  }

  export type HistoriqueAccesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "ressourceId" | "dateAcces" | "typeAcces" | "ipAcces" | "universiteSrc", ExtArgs["result"]["historiqueAcces"]>
  export type HistoriqueAccesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
    universiteSrcRel?: boolean | HistoriqueAcces$universiteSrcRelArgs<ExtArgs>
  }

  export type $HistoriqueAccesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HistoriqueAcces"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      ressource: Prisma.$RessourcePayload<ExtArgs>
      universiteSrcRel: Prisma.$UniversitePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      ressourceId: string
      dateAcces: Date
      typeAcces: $Enums.TypeAcces
      ipAcces: string
      universiteSrc: string | null
    }, ExtArgs["result"]["historiqueAcces"]>
    composites: {}
  }

  type HistoriqueAccesGetPayload<S extends boolean | null | undefined | HistoriqueAccesDefaultArgs> = $Result.GetResult<Prisma.$HistoriqueAccesPayload, S>

  type HistoriqueAccesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<HistoriqueAccesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HistoriqueAccesCountAggregateInputType | true
    }

  export interface HistoriqueAccesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HistoriqueAcces'], meta: { name: 'HistoriqueAcces' } }
    /**
     * Find zero or one HistoriqueAcces that matches the filter.
     * @param {HistoriqueAccesFindUniqueArgs} args - Arguments to find a HistoriqueAcces
     * @example
     * // Get one HistoriqueAcces
     * const historiqueAcces = await prisma.historiqueAcces.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HistoriqueAccesFindUniqueArgs>(args: SelectSubset<T, HistoriqueAccesFindUniqueArgs<ExtArgs>>): Prisma__HistoriqueAccesClient<$Result.GetResult<Prisma.$HistoriqueAccesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one HistoriqueAcces that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {HistoriqueAccesFindUniqueOrThrowArgs} args - Arguments to find a HistoriqueAcces
     * @example
     * // Get one HistoriqueAcces
     * const historiqueAcces = await prisma.historiqueAcces.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HistoriqueAccesFindUniqueOrThrowArgs>(args: SelectSubset<T, HistoriqueAccesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HistoriqueAccesClient<$Result.GetResult<Prisma.$HistoriqueAccesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HistoriqueAcces that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistoriqueAccesFindFirstArgs} args - Arguments to find a HistoriqueAcces
     * @example
     * // Get one HistoriqueAcces
     * const historiqueAcces = await prisma.historiqueAcces.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HistoriqueAccesFindFirstArgs>(args?: SelectSubset<T, HistoriqueAccesFindFirstArgs<ExtArgs>>): Prisma__HistoriqueAccesClient<$Result.GetResult<Prisma.$HistoriqueAccesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HistoriqueAcces that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistoriqueAccesFindFirstOrThrowArgs} args - Arguments to find a HistoriqueAcces
     * @example
     * // Get one HistoriqueAcces
     * const historiqueAcces = await prisma.historiqueAcces.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HistoriqueAccesFindFirstOrThrowArgs>(args?: SelectSubset<T, HistoriqueAccesFindFirstOrThrowArgs<ExtArgs>>): Prisma__HistoriqueAccesClient<$Result.GetResult<Prisma.$HistoriqueAccesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more HistoriqueAcces that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistoriqueAccesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HistoriqueAcces
     * const historiqueAcces = await prisma.historiqueAcces.findMany()
     * 
     * // Get first 10 HistoriqueAcces
     * const historiqueAcces = await prisma.historiqueAcces.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const historiqueAccesWithIdOnly = await prisma.historiqueAcces.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HistoriqueAccesFindManyArgs>(args?: SelectSubset<T, HistoriqueAccesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistoriqueAccesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a HistoriqueAcces.
     * @param {HistoriqueAccesCreateArgs} args - Arguments to create a HistoriqueAcces.
     * @example
     * // Create one HistoriqueAcces
     * const HistoriqueAcces = await prisma.historiqueAcces.create({
     *   data: {
     *     // ... data to create a HistoriqueAcces
     *   }
     * })
     * 
     */
    create<T extends HistoriqueAccesCreateArgs>(args: SelectSubset<T, HistoriqueAccesCreateArgs<ExtArgs>>): Prisma__HistoriqueAccesClient<$Result.GetResult<Prisma.$HistoriqueAccesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many HistoriqueAcces.
     * @param {HistoriqueAccesCreateManyArgs} args - Arguments to create many HistoriqueAcces.
     * @example
     * // Create many HistoriqueAcces
     * const historiqueAcces = await prisma.historiqueAcces.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HistoriqueAccesCreateManyArgs>(args?: SelectSubset<T, HistoriqueAccesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a HistoriqueAcces.
     * @param {HistoriqueAccesDeleteArgs} args - Arguments to delete one HistoriqueAcces.
     * @example
     * // Delete one HistoriqueAcces
     * const HistoriqueAcces = await prisma.historiqueAcces.delete({
     *   where: {
     *     // ... filter to delete one HistoriqueAcces
     *   }
     * })
     * 
     */
    delete<T extends HistoriqueAccesDeleteArgs>(args: SelectSubset<T, HistoriqueAccesDeleteArgs<ExtArgs>>): Prisma__HistoriqueAccesClient<$Result.GetResult<Prisma.$HistoriqueAccesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one HistoriqueAcces.
     * @param {HistoriqueAccesUpdateArgs} args - Arguments to update one HistoriqueAcces.
     * @example
     * // Update one HistoriqueAcces
     * const historiqueAcces = await prisma.historiqueAcces.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HistoriqueAccesUpdateArgs>(args: SelectSubset<T, HistoriqueAccesUpdateArgs<ExtArgs>>): Prisma__HistoriqueAccesClient<$Result.GetResult<Prisma.$HistoriqueAccesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more HistoriqueAcces.
     * @param {HistoriqueAccesDeleteManyArgs} args - Arguments to filter HistoriqueAcces to delete.
     * @example
     * // Delete a few HistoriqueAcces
     * const { count } = await prisma.historiqueAcces.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HistoriqueAccesDeleteManyArgs>(args?: SelectSubset<T, HistoriqueAccesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistoriqueAcces.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistoriqueAccesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HistoriqueAcces
     * const historiqueAcces = await prisma.historiqueAcces.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HistoriqueAccesUpdateManyArgs>(args: SelectSubset<T, HistoriqueAccesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one HistoriqueAcces.
     * @param {HistoriqueAccesUpsertArgs} args - Arguments to update or create a HistoriqueAcces.
     * @example
     * // Update or create a HistoriqueAcces
     * const historiqueAcces = await prisma.historiqueAcces.upsert({
     *   create: {
     *     // ... data to create a HistoriqueAcces
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HistoriqueAcces we want to update
     *   }
     * })
     */
    upsert<T extends HistoriqueAccesUpsertArgs>(args: SelectSubset<T, HistoriqueAccesUpsertArgs<ExtArgs>>): Prisma__HistoriqueAccesClient<$Result.GetResult<Prisma.$HistoriqueAccesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of HistoriqueAcces.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistoriqueAccesCountArgs} args - Arguments to filter HistoriqueAcces to count.
     * @example
     * // Count the number of HistoriqueAcces
     * const count = await prisma.historiqueAcces.count({
     *   where: {
     *     // ... the filter for the HistoriqueAcces we want to count
     *   }
     * })
    **/
    count<T extends HistoriqueAccesCountArgs>(
      args?: Subset<T, HistoriqueAccesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HistoriqueAccesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HistoriqueAcces.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistoriqueAccesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HistoriqueAccesAggregateArgs>(args: Subset<T, HistoriqueAccesAggregateArgs>): Prisma.PrismaPromise<GetHistoriqueAccesAggregateType<T>>

    /**
     * Group by HistoriqueAcces.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistoriqueAccesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HistoriqueAccesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HistoriqueAccesGroupByArgs['orderBy'] }
        : { orderBy?: HistoriqueAccesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HistoriqueAccesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistoriqueAccesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HistoriqueAcces model
   */
  readonly fields: HistoriqueAccesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HistoriqueAcces.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HistoriqueAccesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ressource<T extends RessourceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RessourceDefaultArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    universiteSrcRel<T extends HistoriqueAcces$universiteSrcRelArgs<ExtArgs> = {}>(args?: Subset<T, HistoriqueAcces$universiteSrcRelArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HistoriqueAcces model
   */
  interface HistoriqueAccesFieldRefs {
    readonly id: FieldRef<"HistoriqueAcces", 'String'>
    readonly userId: FieldRef<"HistoriqueAcces", 'String'>
    readonly ressourceId: FieldRef<"HistoriqueAcces", 'String'>
    readonly dateAcces: FieldRef<"HistoriqueAcces", 'DateTime'>
    readonly typeAcces: FieldRef<"HistoriqueAcces", 'TypeAcces'>
    readonly ipAcces: FieldRef<"HistoriqueAcces", 'String'>
    readonly universiteSrc: FieldRef<"HistoriqueAcces", 'String'>
  }
    

  // Custom InputTypes
  /**
   * HistoriqueAcces findUnique
   */
  export type HistoriqueAccesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoriqueAcces
     */
    select?: HistoriqueAccesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoriqueAcces
     */
    omit?: HistoriqueAccesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoriqueAccesInclude<ExtArgs> | null
    /**
     * Filter, which HistoriqueAcces to fetch.
     */
    where: HistoriqueAccesWhereUniqueInput
  }

  /**
   * HistoriqueAcces findUniqueOrThrow
   */
  export type HistoriqueAccesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoriqueAcces
     */
    select?: HistoriqueAccesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoriqueAcces
     */
    omit?: HistoriqueAccesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoriqueAccesInclude<ExtArgs> | null
    /**
     * Filter, which HistoriqueAcces to fetch.
     */
    where: HistoriqueAccesWhereUniqueInput
  }

  /**
   * HistoriqueAcces findFirst
   */
  export type HistoriqueAccesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoriqueAcces
     */
    select?: HistoriqueAccesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoriqueAcces
     */
    omit?: HistoriqueAccesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoriqueAccesInclude<ExtArgs> | null
    /**
     * Filter, which HistoriqueAcces to fetch.
     */
    where?: HistoriqueAccesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistoriqueAcces to fetch.
     */
    orderBy?: HistoriqueAccesOrderByWithRelationInput | HistoriqueAccesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistoriqueAcces.
     */
    cursor?: HistoriqueAccesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistoriqueAcces from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistoriqueAcces.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistoriqueAcces.
     */
    distinct?: HistoriqueAccesScalarFieldEnum | HistoriqueAccesScalarFieldEnum[]
  }

  /**
   * HistoriqueAcces findFirstOrThrow
   */
  export type HistoriqueAccesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoriqueAcces
     */
    select?: HistoriqueAccesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoriqueAcces
     */
    omit?: HistoriqueAccesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoriqueAccesInclude<ExtArgs> | null
    /**
     * Filter, which HistoriqueAcces to fetch.
     */
    where?: HistoriqueAccesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistoriqueAcces to fetch.
     */
    orderBy?: HistoriqueAccesOrderByWithRelationInput | HistoriqueAccesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistoriqueAcces.
     */
    cursor?: HistoriqueAccesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistoriqueAcces from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistoriqueAcces.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistoriqueAcces.
     */
    distinct?: HistoriqueAccesScalarFieldEnum | HistoriqueAccesScalarFieldEnum[]
  }

  /**
   * HistoriqueAcces findMany
   */
  export type HistoriqueAccesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoriqueAcces
     */
    select?: HistoriqueAccesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoriqueAcces
     */
    omit?: HistoriqueAccesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoriqueAccesInclude<ExtArgs> | null
    /**
     * Filter, which HistoriqueAcces to fetch.
     */
    where?: HistoriqueAccesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistoriqueAcces to fetch.
     */
    orderBy?: HistoriqueAccesOrderByWithRelationInput | HistoriqueAccesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HistoriqueAcces.
     */
    cursor?: HistoriqueAccesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistoriqueAcces from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistoriqueAcces.
     */
    skip?: number
    distinct?: HistoriqueAccesScalarFieldEnum | HistoriqueAccesScalarFieldEnum[]
  }

  /**
   * HistoriqueAcces create
   */
  export type HistoriqueAccesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoriqueAcces
     */
    select?: HistoriqueAccesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoriqueAcces
     */
    omit?: HistoriqueAccesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoriqueAccesInclude<ExtArgs> | null
    /**
     * The data needed to create a HistoriqueAcces.
     */
    data: XOR<HistoriqueAccesCreateInput, HistoriqueAccesUncheckedCreateInput>
  }

  /**
   * HistoriqueAcces createMany
   */
  export type HistoriqueAccesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HistoriqueAcces.
     */
    data: HistoriqueAccesCreateManyInput | HistoriqueAccesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HistoriqueAcces update
   */
  export type HistoriqueAccesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoriqueAcces
     */
    select?: HistoriqueAccesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoriqueAcces
     */
    omit?: HistoriqueAccesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoriqueAccesInclude<ExtArgs> | null
    /**
     * The data needed to update a HistoriqueAcces.
     */
    data: XOR<HistoriqueAccesUpdateInput, HistoriqueAccesUncheckedUpdateInput>
    /**
     * Choose, which HistoriqueAcces to update.
     */
    where: HistoriqueAccesWhereUniqueInput
  }

  /**
   * HistoriqueAcces updateMany
   */
  export type HistoriqueAccesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HistoriqueAcces.
     */
    data: XOR<HistoriqueAccesUpdateManyMutationInput, HistoriqueAccesUncheckedUpdateManyInput>
    /**
     * Filter which HistoriqueAcces to update
     */
    where?: HistoriqueAccesWhereInput
    /**
     * Limit how many HistoriqueAcces to update.
     */
    limit?: number
  }

  /**
   * HistoriqueAcces upsert
   */
  export type HistoriqueAccesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoriqueAcces
     */
    select?: HistoriqueAccesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoriqueAcces
     */
    omit?: HistoriqueAccesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoriqueAccesInclude<ExtArgs> | null
    /**
     * The filter to search for the HistoriqueAcces to update in case it exists.
     */
    where: HistoriqueAccesWhereUniqueInput
    /**
     * In case the HistoriqueAcces found by the `where` argument doesn't exist, create a new HistoriqueAcces with this data.
     */
    create: XOR<HistoriqueAccesCreateInput, HistoriqueAccesUncheckedCreateInput>
    /**
     * In case the HistoriqueAcces was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HistoriqueAccesUpdateInput, HistoriqueAccesUncheckedUpdateInput>
  }

  /**
   * HistoriqueAcces delete
   */
  export type HistoriqueAccesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoriqueAcces
     */
    select?: HistoriqueAccesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoriqueAcces
     */
    omit?: HistoriqueAccesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoriqueAccesInclude<ExtArgs> | null
    /**
     * Filter which HistoriqueAcces to delete.
     */
    where: HistoriqueAccesWhereUniqueInput
  }

  /**
   * HistoriqueAcces deleteMany
   */
  export type HistoriqueAccesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistoriqueAcces to delete
     */
    where?: HistoriqueAccesWhereInput
    /**
     * Limit how many HistoriqueAcces to delete.
     */
    limit?: number
  }

  /**
   * HistoriqueAcces.universiteSrcRel
   */
  export type HistoriqueAcces$universiteSrcRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Universite
     */
    select?: UniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Universite
     */
    omit?: UniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversiteInclude<ExtArgs> | null
    where?: UniversiteWhereInput
  }

  /**
   * HistoriqueAcces without action
   */
  export type HistoriqueAccesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoriqueAcces
     */
    select?: HistoriqueAccesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoriqueAcces
     */
    omit?: HistoriqueAccesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoriqueAccesInclude<ExtArgs> | null
  }


  /**
   * Model DonneesRecommandation
   */

  export type AggregateDonneesRecommandation = {
    _count: DonneesRecommandationCountAggregateOutputType | null
    _avg: DonneesRecommandationAvgAggregateOutputType | null
    _sum: DonneesRecommandationSumAggregateOutputType | null
    _min: DonneesRecommandationMinAggregateOutputType | null
    _max: DonneesRecommandationMaxAggregateOutputType | null
  }

  export type DonneesRecommandationAvgAggregateOutputType = {
    score: number | null
  }

  export type DonneesRecommandationSumAggregateOutputType = {
    score: number | null
  }

  export type DonneesRecommandationMinAggregateOutputType = {
    id: string | null
    userId: string | null
    ressourceId: string | null
    score: number | null
    typeInteraction: $Enums.TypeInteraction | null
    dateDonnee: Date | null
  }

  export type DonneesRecommandationMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    ressourceId: string | null
    score: number | null
    typeInteraction: $Enums.TypeInteraction | null
    dateDonnee: Date | null
  }

  export type DonneesRecommandationCountAggregateOutputType = {
    id: number
    userId: number
    ressourceId: number
    score: number
    typeInteraction: number
    dateDonnee: number
    _all: number
  }


  export type DonneesRecommandationAvgAggregateInputType = {
    score?: true
  }

  export type DonneesRecommandationSumAggregateInputType = {
    score?: true
  }

  export type DonneesRecommandationMinAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    score?: true
    typeInteraction?: true
    dateDonnee?: true
  }

  export type DonneesRecommandationMaxAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    score?: true
    typeInteraction?: true
    dateDonnee?: true
  }

  export type DonneesRecommandationCountAggregateInputType = {
    id?: true
    userId?: true
    ressourceId?: true
    score?: true
    typeInteraction?: true
    dateDonnee?: true
    _all?: true
  }

  export type DonneesRecommandationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DonneesRecommandation to aggregate.
     */
    where?: DonneesRecommandationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonneesRecommandations to fetch.
     */
    orderBy?: DonneesRecommandationOrderByWithRelationInput | DonneesRecommandationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DonneesRecommandationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonneesRecommandations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonneesRecommandations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DonneesRecommandations
    **/
    _count?: true | DonneesRecommandationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DonneesRecommandationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DonneesRecommandationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DonneesRecommandationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DonneesRecommandationMaxAggregateInputType
  }

  export type GetDonneesRecommandationAggregateType<T extends DonneesRecommandationAggregateArgs> = {
        [P in keyof T & keyof AggregateDonneesRecommandation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDonneesRecommandation[P]>
      : GetScalarType<T[P], AggregateDonneesRecommandation[P]>
  }




  export type DonneesRecommandationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonneesRecommandationWhereInput
    orderBy?: DonneesRecommandationOrderByWithAggregationInput | DonneesRecommandationOrderByWithAggregationInput[]
    by: DonneesRecommandationScalarFieldEnum[] | DonneesRecommandationScalarFieldEnum
    having?: DonneesRecommandationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DonneesRecommandationCountAggregateInputType | true
    _avg?: DonneesRecommandationAvgAggregateInputType
    _sum?: DonneesRecommandationSumAggregateInputType
    _min?: DonneesRecommandationMinAggregateInputType
    _max?: DonneesRecommandationMaxAggregateInputType
  }

  export type DonneesRecommandationGroupByOutputType = {
    id: string
    userId: string
    ressourceId: string
    score: number
    typeInteraction: $Enums.TypeInteraction
    dateDonnee: Date
    _count: DonneesRecommandationCountAggregateOutputType | null
    _avg: DonneesRecommandationAvgAggregateOutputType | null
    _sum: DonneesRecommandationSumAggregateOutputType | null
    _min: DonneesRecommandationMinAggregateOutputType | null
    _max: DonneesRecommandationMaxAggregateOutputType | null
  }

  type GetDonneesRecommandationGroupByPayload<T extends DonneesRecommandationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DonneesRecommandationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DonneesRecommandationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DonneesRecommandationGroupByOutputType[P]>
            : GetScalarType<T[P], DonneesRecommandationGroupByOutputType[P]>
        }
      >
    >


  export type DonneesRecommandationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    ressourceId?: boolean
    score?: boolean
    typeInteraction?: boolean
    dateDonnee?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["donneesRecommandation"]>



  export type DonneesRecommandationSelectScalar = {
    id?: boolean
    userId?: boolean
    ressourceId?: boolean
    score?: boolean
    typeInteraction?: boolean
    dateDonnee?: boolean
  }

  export type DonneesRecommandationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "ressourceId" | "score" | "typeInteraction" | "dateDonnee", ExtArgs["result"]["donneesRecommandation"]>
  export type DonneesRecommandationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
  }

  export type $DonneesRecommandationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DonneesRecommandation"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      ressource: Prisma.$RessourcePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      ressourceId: string
      score: number
      typeInteraction: $Enums.TypeInteraction
      dateDonnee: Date
    }, ExtArgs["result"]["donneesRecommandation"]>
    composites: {}
  }

  type DonneesRecommandationGetPayload<S extends boolean | null | undefined | DonneesRecommandationDefaultArgs> = $Result.GetResult<Prisma.$DonneesRecommandationPayload, S>

  type DonneesRecommandationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DonneesRecommandationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DonneesRecommandationCountAggregateInputType | true
    }

  export interface DonneesRecommandationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DonneesRecommandation'], meta: { name: 'DonneesRecommandation' } }
    /**
     * Find zero or one DonneesRecommandation that matches the filter.
     * @param {DonneesRecommandationFindUniqueArgs} args - Arguments to find a DonneesRecommandation
     * @example
     * // Get one DonneesRecommandation
     * const donneesRecommandation = await prisma.donneesRecommandation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DonneesRecommandationFindUniqueArgs>(args: SelectSubset<T, DonneesRecommandationFindUniqueArgs<ExtArgs>>): Prisma__DonneesRecommandationClient<$Result.GetResult<Prisma.$DonneesRecommandationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DonneesRecommandation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DonneesRecommandationFindUniqueOrThrowArgs} args - Arguments to find a DonneesRecommandation
     * @example
     * // Get one DonneesRecommandation
     * const donneesRecommandation = await prisma.donneesRecommandation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DonneesRecommandationFindUniqueOrThrowArgs>(args: SelectSubset<T, DonneesRecommandationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DonneesRecommandationClient<$Result.GetResult<Prisma.$DonneesRecommandationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DonneesRecommandation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonneesRecommandationFindFirstArgs} args - Arguments to find a DonneesRecommandation
     * @example
     * // Get one DonneesRecommandation
     * const donneesRecommandation = await prisma.donneesRecommandation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DonneesRecommandationFindFirstArgs>(args?: SelectSubset<T, DonneesRecommandationFindFirstArgs<ExtArgs>>): Prisma__DonneesRecommandationClient<$Result.GetResult<Prisma.$DonneesRecommandationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DonneesRecommandation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonneesRecommandationFindFirstOrThrowArgs} args - Arguments to find a DonneesRecommandation
     * @example
     * // Get one DonneesRecommandation
     * const donneesRecommandation = await prisma.donneesRecommandation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DonneesRecommandationFindFirstOrThrowArgs>(args?: SelectSubset<T, DonneesRecommandationFindFirstOrThrowArgs<ExtArgs>>): Prisma__DonneesRecommandationClient<$Result.GetResult<Prisma.$DonneesRecommandationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DonneesRecommandations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonneesRecommandationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DonneesRecommandations
     * const donneesRecommandations = await prisma.donneesRecommandation.findMany()
     * 
     * // Get first 10 DonneesRecommandations
     * const donneesRecommandations = await prisma.donneesRecommandation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const donneesRecommandationWithIdOnly = await prisma.donneesRecommandation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DonneesRecommandationFindManyArgs>(args?: SelectSubset<T, DonneesRecommandationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonneesRecommandationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DonneesRecommandation.
     * @param {DonneesRecommandationCreateArgs} args - Arguments to create a DonneesRecommandation.
     * @example
     * // Create one DonneesRecommandation
     * const DonneesRecommandation = await prisma.donneesRecommandation.create({
     *   data: {
     *     // ... data to create a DonneesRecommandation
     *   }
     * })
     * 
     */
    create<T extends DonneesRecommandationCreateArgs>(args: SelectSubset<T, DonneesRecommandationCreateArgs<ExtArgs>>): Prisma__DonneesRecommandationClient<$Result.GetResult<Prisma.$DonneesRecommandationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DonneesRecommandations.
     * @param {DonneesRecommandationCreateManyArgs} args - Arguments to create many DonneesRecommandations.
     * @example
     * // Create many DonneesRecommandations
     * const donneesRecommandation = await prisma.donneesRecommandation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DonneesRecommandationCreateManyArgs>(args?: SelectSubset<T, DonneesRecommandationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a DonneesRecommandation.
     * @param {DonneesRecommandationDeleteArgs} args - Arguments to delete one DonneesRecommandation.
     * @example
     * // Delete one DonneesRecommandation
     * const DonneesRecommandation = await prisma.donneesRecommandation.delete({
     *   where: {
     *     // ... filter to delete one DonneesRecommandation
     *   }
     * })
     * 
     */
    delete<T extends DonneesRecommandationDeleteArgs>(args: SelectSubset<T, DonneesRecommandationDeleteArgs<ExtArgs>>): Prisma__DonneesRecommandationClient<$Result.GetResult<Prisma.$DonneesRecommandationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DonneesRecommandation.
     * @param {DonneesRecommandationUpdateArgs} args - Arguments to update one DonneesRecommandation.
     * @example
     * // Update one DonneesRecommandation
     * const donneesRecommandation = await prisma.donneesRecommandation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DonneesRecommandationUpdateArgs>(args: SelectSubset<T, DonneesRecommandationUpdateArgs<ExtArgs>>): Prisma__DonneesRecommandationClient<$Result.GetResult<Prisma.$DonneesRecommandationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DonneesRecommandations.
     * @param {DonneesRecommandationDeleteManyArgs} args - Arguments to filter DonneesRecommandations to delete.
     * @example
     * // Delete a few DonneesRecommandations
     * const { count } = await prisma.donneesRecommandation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DonneesRecommandationDeleteManyArgs>(args?: SelectSubset<T, DonneesRecommandationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DonneesRecommandations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonneesRecommandationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DonneesRecommandations
     * const donneesRecommandation = await prisma.donneesRecommandation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DonneesRecommandationUpdateManyArgs>(args: SelectSubset<T, DonneesRecommandationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DonneesRecommandation.
     * @param {DonneesRecommandationUpsertArgs} args - Arguments to update or create a DonneesRecommandation.
     * @example
     * // Update or create a DonneesRecommandation
     * const donneesRecommandation = await prisma.donneesRecommandation.upsert({
     *   create: {
     *     // ... data to create a DonneesRecommandation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DonneesRecommandation we want to update
     *   }
     * })
     */
    upsert<T extends DonneesRecommandationUpsertArgs>(args: SelectSubset<T, DonneesRecommandationUpsertArgs<ExtArgs>>): Prisma__DonneesRecommandationClient<$Result.GetResult<Prisma.$DonneesRecommandationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DonneesRecommandations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonneesRecommandationCountArgs} args - Arguments to filter DonneesRecommandations to count.
     * @example
     * // Count the number of DonneesRecommandations
     * const count = await prisma.donneesRecommandation.count({
     *   where: {
     *     // ... the filter for the DonneesRecommandations we want to count
     *   }
     * })
    **/
    count<T extends DonneesRecommandationCountArgs>(
      args?: Subset<T, DonneesRecommandationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DonneesRecommandationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DonneesRecommandation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonneesRecommandationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DonneesRecommandationAggregateArgs>(args: Subset<T, DonneesRecommandationAggregateArgs>): Prisma.PrismaPromise<GetDonneesRecommandationAggregateType<T>>

    /**
     * Group by DonneesRecommandation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonneesRecommandationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DonneesRecommandationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DonneesRecommandationGroupByArgs['orderBy'] }
        : { orderBy?: DonneesRecommandationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DonneesRecommandationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDonneesRecommandationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DonneesRecommandation model
   */
  readonly fields: DonneesRecommandationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DonneesRecommandation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DonneesRecommandationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ressource<T extends RessourceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RessourceDefaultArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DonneesRecommandation model
   */
  interface DonneesRecommandationFieldRefs {
    readonly id: FieldRef<"DonneesRecommandation", 'String'>
    readonly userId: FieldRef<"DonneesRecommandation", 'String'>
    readonly ressourceId: FieldRef<"DonneesRecommandation", 'String'>
    readonly score: FieldRef<"DonneesRecommandation", 'Float'>
    readonly typeInteraction: FieldRef<"DonneesRecommandation", 'TypeInteraction'>
    readonly dateDonnee: FieldRef<"DonneesRecommandation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DonneesRecommandation findUnique
   */
  export type DonneesRecommandationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonneesRecommandation
     */
    select?: DonneesRecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonneesRecommandation
     */
    omit?: DonneesRecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonneesRecommandationInclude<ExtArgs> | null
    /**
     * Filter, which DonneesRecommandation to fetch.
     */
    where: DonneesRecommandationWhereUniqueInput
  }

  /**
   * DonneesRecommandation findUniqueOrThrow
   */
  export type DonneesRecommandationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonneesRecommandation
     */
    select?: DonneesRecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonneesRecommandation
     */
    omit?: DonneesRecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonneesRecommandationInclude<ExtArgs> | null
    /**
     * Filter, which DonneesRecommandation to fetch.
     */
    where: DonneesRecommandationWhereUniqueInput
  }

  /**
   * DonneesRecommandation findFirst
   */
  export type DonneesRecommandationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonneesRecommandation
     */
    select?: DonneesRecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonneesRecommandation
     */
    omit?: DonneesRecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonneesRecommandationInclude<ExtArgs> | null
    /**
     * Filter, which DonneesRecommandation to fetch.
     */
    where?: DonneesRecommandationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonneesRecommandations to fetch.
     */
    orderBy?: DonneesRecommandationOrderByWithRelationInput | DonneesRecommandationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DonneesRecommandations.
     */
    cursor?: DonneesRecommandationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonneesRecommandations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonneesRecommandations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DonneesRecommandations.
     */
    distinct?: DonneesRecommandationScalarFieldEnum | DonneesRecommandationScalarFieldEnum[]
  }

  /**
   * DonneesRecommandation findFirstOrThrow
   */
  export type DonneesRecommandationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonneesRecommandation
     */
    select?: DonneesRecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonneesRecommandation
     */
    omit?: DonneesRecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonneesRecommandationInclude<ExtArgs> | null
    /**
     * Filter, which DonneesRecommandation to fetch.
     */
    where?: DonneesRecommandationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonneesRecommandations to fetch.
     */
    orderBy?: DonneesRecommandationOrderByWithRelationInput | DonneesRecommandationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DonneesRecommandations.
     */
    cursor?: DonneesRecommandationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonneesRecommandations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonneesRecommandations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DonneesRecommandations.
     */
    distinct?: DonneesRecommandationScalarFieldEnum | DonneesRecommandationScalarFieldEnum[]
  }

  /**
   * DonneesRecommandation findMany
   */
  export type DonneesRecommandationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonneesRecommandation
     */
    select?: DonneesRecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonneesRecommandation
     */
    omit?: DonneesRecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonneesRecommandationInclude<ExtArgs> | null
    /**
     * Filter, which DonneesRecommandations to fetch.
     */
    where?: DonneesRecommandationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonneesRecommandations to fetch.
     */
    orderBy?: DonneesRecommandationOrderByWithRelationInput | DonneesRecommandationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DonneesRecommandations.
     */
    cursor?: DonneesRecommandationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonneesRecommandations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonneesRecommandations.
     */
    skip?: number
    distinct?: DonneesRecommandationScalarFieldEnum | DonneesRecommandationScalarFieldEnum[]
  }

  /**
   * DonneesRecommandation create
   */
  export type DonneesRecommandationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonneesRecommandation
     */
    select?: DonneesRecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonneesRecommandation
     */
    omit?: DonneesRecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonneesRecommandationInclude<ExtArgs> | null
    /**
     * The data needed to create a DonneesRecommandation.
     */
    data: XOR<DonneesRecommandationCreateInput, DonneesRecommandationUncheckedCreateInput>
  }

  /**
   * DonneesRecommandation createMany
   */
  export type DonneesRecommandationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DonneesRecommandations.
     */
    data: DonneesRecommandationCreateManyInput | DonneesRecommandationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DonneesRecommandation update
   */
  export type DonneesRecommandationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonneesRecommandation
     */
    select?: DonneesRecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonneesRecommandation
     */
    omit?: DonneesRecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonneesRecommandationInclude<ExtArgs> | null
    /**
     * The data needed to update a DonneesRecommandation.
     */
    data: XOR<DonneesRecommandationUpdateInput, DonneesRecommandationUncheckedUpdateInput>
    /**
     * Choose, which DonneesRecommandation to update.
     */
    where: DonneesRecommandationWhereUniqueInput
  }

  /**
   * DonneesRecommandation updateMany
   */
  export type DonneesRecommandationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DonneesRecommandations.
     */
    data: XOR<DonneesRecommandationUpdateManyMutationInput, DonneesRecommandationUncheckedUpdateManyInput>
    /**
     * Filter which DonneesRecommandations to update
     */
    where?: DonneesRecommandationWhereInput
    /**
     * Limit how many DonneesRecommandations to update.
     */
    limit?: number
  }

  /**
   * DonneesRecommandation upsert
   */
  export type DonneesRecommandationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonneesRecommandation
     */
    select?: DonneesRecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonneesRecommandation
     */
    omit?: DonneesRecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonneesRecommandationInclude<ExtArgs> | null
    /**
     * The filter to search for the DonneesRecommandation to update in case it exists.
     */
    where: DonneesRecommandationWhereUniqueInput
    /**
     * In case the DonneesRecommandation found by the `where` argument doesn't exist, create a new DonneesRecommandation with this data.
     */
    create: XOR<DonneesRecommandationCreateInput, DonneesRecommandationUncheckedCreateInput>
    /**
     * In case the DonneesRecommandation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DonneesRecommandationUpdateInput, DonneesRecommandationUncheckedUpdateInput>
  }

  /**
   * DonneesRecommandation delete
   */
  export type DonneesRecommandationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonneesRecommandation
     */
    select?: DonneesRecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonneesRecommandation
     */
    omit?: DonneesRecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonneesRecommandationInclude<ExtArgs> | null
    /**
     * Filter which DonneesRecommandation to delete.
     */
    where: DonneesRecommandationWhereUniqueInput
  }

  /**
   * DonneesRecommandation deleteMany
   */
  export type DonneesRecommandationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DonneesRecommandations to delete
     */
    where?: DonneesRecommandationWhereInput
    /**
     * Limit how many DonneesRecommandations to delete.
     */
    limit?: number
  }

  /**
   * DonneesRecommandation without action
   */
  export type DonneesRecommandationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonneesRecommandation
     */
    select?: DonneesRecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonneesRecommandation
     */
    omit?: DonneesRecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonneesRecommandationInclude<ExtArgs> | null
  }


  /**
   * Model Collection
   */

  export type AggregateCollection = {
    _count: CollectionCountAggregateOutputType | null
    _min: CollectionMinAggregateOutputType | null
    _max: CollectionMaxAggregateOutputType | null
  }

  export type CollectionMinAggregateOutputType = {
    id: string | null
    userId: string | null
    nom: string | null
    description: string | null
    estPublique: boolean | null
    dateCreation: Date | null
  }

  export type CollectionMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    nom: string | null
    description: string | null
    estPublique: boolean | null
    dateCreation: Date | null
  }

  export type CollectionCountAggregateOutputType = {
    id: number
    userId: number
    nom: number
    description: number
    estPublique: number
    dateCreation: number
    _all: number
  }


  export type CollectionMinAggregateInputType = {
    id?: true
    userId?: true
    nom?: true
    description?: true
    estPublique?: true
    dateCreation?: true
  }

  export type CollectionMaxAggregateInputType = {
    id?: true
    userId?: true
    nom?: true
    description?: true
    estPublique?: true
    dateCreation?: true
  }

  export type CollectionCountAggregateInputType = {
    id?: true
    userId?: true
    nom?: true
    description?: true
    estPublique?: true
    dateCreation?: true
    _all?: true
  }

  export type CollectionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Collection to aggregate.
     */
    where?: CollectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Collections to fetch.
     */
    orderBy?: CollectionOrderByWithRelationInput | CollectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CollectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Collections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Collections
    **/
    _count?: true | CollectionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CollectionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CollectionMaxAggregateInputType
  }

  export type GetCollectionAggregateType<T extends CollectionAggregateArgs> = {
        [P in keyof T & keyof AggregateCollection]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCollection[P]>
      : GetScalarType<T[P], AggregateCollection[P]>
  }




  export type CollectionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CollectionWhereInput
    orderBy?: CollectionOrderByWithAggregationInput | CollectionOrderByWithAggregationInput[]
    by: CollectionScalarFieldEnum[] | CollectionScalarFieldEnum
    having?: CollectionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CollectionCountAggregateInputType | true
    _min?: CollectionMinAggregateInputType
    _max?: CollectionMaxAggregateInputType
  }

  export type CollectionGroupByOutputType = {
    id: string
    userId: string
    nom: string
    description: string | null
    estPublique: boolean
    dateCreation: Date
    _count: CollectionCountAggregateOutputType | null
    _min: CollectionMinAggregateOutputType | null
    _max: CollectionMaxAggregateOutputType | null
  }

  type GetCollectionGroupByPayload<T extends CollectionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CollectionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CollectionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CollectionGroupByOutputType[P]>
            : GetScalarType<T[P], CollectionGroupByOutputType[P]>
        }
      >
    >


  export type CollectionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    nom?: boolean
    description?: boolean
    estPublique?: boolean
    dateCreation?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    ressources?: boolean | Collection$ressourcesArgs<ExtArgs>
    _count?: boolean | CollectionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["collection"]>



  export type CollectionSelectScalar = {
    id?: boolean
    userId?: boolean
    nom?: boolean
    description?: boolean
    estPublique?: boolean
    dateCreation?: boolean
  }

  export type CollectionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "nom" | "description" | "estPublique" | "dateCreation", ExtArgs["result"]["collection"]>
  export type CollectionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    ressources?: boolean | Collection$ressourcesArgs<ExtArgs>
    _count?: boolean | CollectionCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CollectionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Collection"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      ressources: Prisma.$CollectionRessourcePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      nom: string
      description: string | null
      estPublique: boolean
      dateCreation: Date
    }, ExtArgs["result"]["collection"]>
    composites: {}
  }

  type CollectionGetPayload<S extends boolean | null | undefined | CollectionDefaultArgs> = $Result.GetResult<Prisma.$CollectionPayload, S>

  type CollectionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CollectionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CollectionCountAggregateInputType | true
    }

  export interface CollectionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Collection'], meta: { name: 'Collection' } }
    /**
     * Find zero or one Collection that matches the filter.
     * @param {CollectionFindUniqueArgs} args - Arguments to find a Collection
     * @example
     * // Get one Collection
     * const collection = await prisma.collection.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CollectionFindUniqueArgs>(args: SelectSubset<T, CollectionFindUniqueArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Collection that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CollectionFindUniqueOrThrowArgs} args - Arguments to find a Collection
     * @example
     * // Get one Collection
     * const collection = await prisma.collection.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CollectionFindUniqueOrThrowArgs>(args: SelectSubset<T, CollectionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Collection that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionFindFirstArgs} args - Arguments to find a Collection
     * @example
     * // Get one Collection
     * const collection = await prisma.collection.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CollectionFindFirstArgs>(args?: SelectSubset<T, CollectionFindFirstArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Collection that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionFindFirstOrThrowArgs} args - Arguments to find a Collection
     * @example
     * // Get one Collection
     * const collection = await prisma.collection.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CollectionFindFirstOrThrowArgs>(args?: SelectSubset<T, CollectionFindFirstOrThrowArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Collections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Collections
     * const collections = await prisma.collection.findMany()
     * 
     * // Get first 10 Collections
     * const collections = await prisma.collection.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const collectionWithIdOnly = await prisma.collection.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CollectionFindManyArgs>(args?: SelectSubset<T, CollectionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Collection.
     * @param {CollectionCreateArgs} args - Arguments to create a Collection.
     * @example
     * // Create one Collection
     * const Collection = await prisma.collection.create({
     *   data: {
     *     // ... data to create a Collection
     *   }
     * })
     * 
     */
    create<T extends CollectionCreateArgs>(args: SelectSubset<T, CollectionCreateArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Collections.
     * @param {CollectionCreateManyArgs} args - Arguments to create many Collections.
     * @example
     * // Create many Collections
     * const collection = await prisma.collection.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CollectionCreateManyArgs>(args?: SelectSubset<T, CollectionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Collection.
     * @param {CollectionDeleteArgs} args - Arguments to delete one Collection.
     * @example
     * // Delete one Collection
     * const Collection = await prisma.collection.delete({
     *   where: {
     *     // ... filter to delete one Collection
     *   }
     * })
     * 
     */
    delete<T extends CollectionDeleteArgs>(args: SelectSubset<T, CollectionDeleteArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Collection.
     * @param {CollectionUpdateArgs} args - Arguments to update one Collection.
     * @example
     * // Update one Collection
     * const collection = await prisma.collection.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CollectionUpdateArgs>(args: SelectSubset<T, CollectionUpdateArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Collections.
     * @param {CollectionDeleteManyArgs} args - Arguments to filter Collections to delete.
     * @example
     * // Delete a few Collections
     * const { count } = await prisma.collection.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CollectionDeleteManyArgs>(args?: SelectSubset<T, CollectionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Collections
     * const collection = await prisma.collection.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CollectionUpdateManyArgs>(args: SelectSubset<T, CollectionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Collection.
     * @param {CollectionUpsertArgs} args - Arguments to update or create a Collection.
     * @example
     * // Update or create a Collection
     * const collection = await prisma.collection.upsert({
     *   create: {
     *     // ... data to create a Collection
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Collection we want to update
     *   }
     * })
     */
    upsert<T extends CollectionUpsertArgs>(args: SelectSubset<T, CollectionUpsertArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionCountArgs} args - Arguments to filter Collections to count.
     * @example
     * // Count the number of Collections
     * const count = await prisma.collection.count({
     *   where: {
     *     // ... the filter for the Collections we want to count
     *   }
     * })
    **/
    count<T extends CollectionCountArgs>(
      args?: Subset<T, CollectionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CollectionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Collection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CollectionAggregateArgs>(args: Subset<T, CollectionAggregateArgs>): Prisma.PrismaPromise<GetCollectionAggregateType<T>>

    /**
     * Group by Collection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CollectionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CollectionGroupByArgs['orderBy'] }
        : { orderBy?: CollectionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CollectionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCollectionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Collection model
   */
  readonly fields: CollectionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Collection.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CollectionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ressources<T extends Collection$ressourcesArgs<ExtArgs> = {}>(args?: Subset<T, Collection$ressourcesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CollectionRessourcePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Collection model
   */
  interface CollectionFieldRefs {
    readonly id: FieldRef<"Collection", 'String'>
    readonly userId: FieldRef<"Collection", 'String'>
    readonly nom: FieldRef<"Collection", 'String'>
    readonly description: FieldRef<"Collection", 'String'>
    readonly estPublique: FieldRef<"Collection", 'Boolean'>
    readonly dateCreation: FieldRef<"Collection", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Collection findUnique
   */
  export type CollectionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    /**
     * Filter, which Collection to fetch.
     */
    where: CollectionWhereUniqueInput
  }

  /**
   * Collection findUniqueOrThrow
   */
  export type CollectionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    /**
     * Filter, which Collection to fetch.
     */
    where: CollectionWhereUniqueInput
  }

  /**
   * Collection findFirst
   */
  export type CollectionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    /**
     * Filter, which Collection to fetch.
     */
    where?: CollectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Collections to fetch.
     */
    orderBy?: CollectionOrderByWithRelationInput | CollectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Collections.
     */
    cursor?: CollectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Collections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Collections.
     */
    distinct?: CollectionScalarFieldEnum | CollectionScalarFieldEnum[]
  }

  /**
   * Collection findFirstOrThrow
   */
  export type CollectionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    /**
     * Filter, which Collection to fetch.
     */
    where?: CollectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Collections to fetch.
     */
    orderBy?: CollectionOrderByWithRelationInput | CollectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Collections.
     */
    cursor?: CollectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Collections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Collections.
     */
    distinct?: CollectionScalarFieldEnum | CollectionScalarFieldEnum[]
  }

  /**
   * Collection findMany
   */
  export type CollectionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    /**
     * Filter, which Collections to fetch.
     */
    where?: CollectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Collections to fetch.
     */
    orderBy?: CollectionOrderByWithRelationInput | CollectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Collections.
     */
    cursor?: CollectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Collections.
     */
    skip?: number
    distinct?: CollectionScalarFieldEnum | CollectionScalarFieldEnum[]
  }

  /**
   * Collection create
   */
  export type CollectionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    /**
     * The data needed to create a Collection.
     */
    data: XOR<CollectionCreateInput, CollectionUncheckedCreateInput>
  }

  /**
   * Collection createMany
   */
  export type CollectionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Collections.
     */
    data: CollectionCreateManyInput | CollectionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Collection update
   */
  export type CollectionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    /**
     * The data needed to update a Collection.
     */
    data: XOR<CollectionUpdateInput, CollectionUncheckedUpdateInput>
    /**
     * Choose, which Collection to update.
     */
    where: CollectionWhereUniqueInput
  }

  /**
   * Collection updateMany
   */
  export type CollectionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Collections.
     */
    data: XOR<CollectionUpdateManyMutationInput, CollectionUncheckedUpdateManyInput>
    /**
     * Filter which Collections to update
     */
    where?: CollectionWhereInput
    /**
     * Limit how many Collections to update.
     */
    limit?: number
  }

  /**
   * Collection upsert
   */
  export type CollectionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    /**
     * The filter to search for the Collection to update in case it exists.
     */
    where: CollectionWhereUniqueInput
    /**
     * In case the Collection found by the `where` argument doesn't exist, create a new Collection with this data.
     */
    create: XOR<CollectionCreateInput, CollectionUncheckedCreateInput>
    /**
     * In case the Collection was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CollectionUpdateInput, CollectionUncheckedUpdateInput>
  }

  /**
   * Collection delete
   */
  export type CollectionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    /**
     * Filter which Collection to delete.
     */
    where: CollectionWhereUniqueInput
  }

  /**
   * Collection deleteMany
   */
  export type CollectionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Collections to delete
     */
    where?: CollectionWhereInput
    /**
     * Limit how many Collections to delete.
     */
    limit?: number
  }

  /**
   * Collection.ressources
   */
  export type Collection$ressourcesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CollectionRessource
     */
    select?: CollectionRessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CollectionRessource
     */
    omit?: CollectionRessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionRessourceInclude<ExtArgs> | null
    where?: CollectionRessourceWhereInput
    orderBy?: CollectionRessourceOrderByWithRelationInput | CollectionRessourceOrderByWithRelationInput[]
    cursor?: CollectionRessourceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CollectionRessourceScalarFieldEnum | CollectionRessourceScalarFieldEnum[]
  }

  /**
   * Collection without action
   */
  export type CollectionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
  }


  /**
   * Model CollectionRessource
   */

  export type AggregateCollectionRessource = {
    _count: CollectionRessourceCountAggregateOutputType | null
    _min: CollectionRessourceMinAggregateOutputType | null
    _max: CollectionRessourceMaxAggregateOutputType | null
  }

  export type CollectionRessourceMinAggregateOutputType = {
    id: string | null
    collectionId: string | null
    ressourceId: string | null
    dateAjout: Date | null
    notes: string | null
  }

  export type CollectionRessourceMaxAggregateOutputType = {
    id: string | null
    collectionId: string | null
    ressourceId: string | null
    dateAjout: Date | null
    notes: string | null
  }

  export type CollectionRessourceCountAggregateOutputType = {
    id: number
    collectionId: number
    ressourceId: number
    dateAjout: number
    notes: number
    _all: number
  }


  export type CollectionRessourceMinAggregateInputType = {
    id?: true
    collectionId?: true
    ressourceId?: true
    dateAjout?: true
    notes?: true
  }

  export type CollectionRessourceMaxAggregateInputType = {
    id?: true
    collectionId?: true
    ressourceId?: true
    dateAjout?: true
    notes?: true
  }

  export type CollectionRessourceCountAggregateInputType = {
    id?: true
    collectionId?: true
    ressourceId?: true
    dateAjout?: true
    notes?: true
    _all?: true
  }

  export type CollectionRessourceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CollectionRessource to aggregate.
     */
    where?: CollectionRessourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CollectionRessources to fetch.
     */
    orderBy?: CollectionRessourceOrderByWithRelationInput | CollectionRessourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CollectionRessourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CollectionRessources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CollectionRessources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CollectionRessources
    **/
    _count?: true | CollectionRessourceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CollectionRessourceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CollectionRessourceMaxAggregateInputType
  }

  export type GetCollectionRessourceAggregateType<T extends CollectionRessourceAggregateArgs> = {
        [P in keyof T & keyof AggregateCollectionRessource]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCollectionRessource[P]>
      : GetScalarType<T[P], AggregateCollectionRessource[P]>
  }




  export type CollectionRessourceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CollectionRessourceWhereInput
    orderBy?: CollectionRessourceOrderByWithAggregationInput | CollectionRessourceOrderByWithAggregationInput[]
    by: CollectionRessourceScalarFieldEnum[] | CollectionRessourceScalarFieldEnum
    having?: CollectionRessourceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CollectionRessourceCountAggregateInputType | true
    _min?: CollectionRessourceMinAggregateInputType
    _max?: CollectionRessourceMaxAggregateInputType
  }

  export type CollectionRessourceGroupByOutputType = {
    id: string
    collectionId: string
    ressourceId: string
    dateAjout: Date
    notes: string | null
    _count: CollectionRessourceCountAggregateOutputType | null
    _min: CollectionRessourceMinAggregateOutputType | null
    _max: CollectionRessourceMaxAggregateOutputType | null
  }

  type GetCollectionRessourceGroupByPayload<T extends CollectionRessourceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CollectionRessourceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CollectionRessourceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CollectionRessourceGroupByOutputType[P]>
            : GetScalarType<T[P], CollectionRessourceGroupByOutputType[P]>
        }
      >
    >


  export type CollectionRessourceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    collectionId?: boolean
    ressourceId?: boolean
    dateAjout?: boolean
    notes?: boolean
    collection?: boolean | CollectionDefaultArgs<ExtArgs>
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["collectionRessource"]>



  export type CollectionRessourceSelectScalar = {
    id?: boolean
    collectionId?: boolean
    ressourceId?: boolean
    dateAjout?: boolean
    notes?: boolean
  }

  export type CollectionRessourceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "collectionId" | "ressourceId" | "dateAjout" | "notes", ExtArgs["result"]["collectionRessource"]>
  export type CollectionRessourceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collection?: boolean | CollectionDefaultArgs<ExtArgs>
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
  }

  export type $CollectionRessourcePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CollectionRessource"
    objects: {
      collection: Prisma.$CollectionPayload<ExtArgs>
      ressource: Prisma.$RessourcePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      collectionId: string
      ressourceId: string
      dateAjout: Date
      notes: string | null
    }, ExtArgs["result"]["collectionRessource"]>
    composites: {}
  }

  type CollectionRessourceGetPayload<S extends boolean | null | undefined | CollectionRessourceDefaultArgs> = $Result.GetResult<Prisma.$CollectionRessourcePayload, S>

  type CollectionRessourceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CollectionRessourceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CollectionRessourceCountAggregateInputType | true
    }

  export interface CollectionRessourceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CollectionRessource'], meta: { name: 'CollectionRessource' } }
    /**
     * Find zero or one CollectionRessource that matches the filter.
     * @param {CollectionRessourceFindUniqueArgs} args - Arguments to find a CollectionRessource
     * @example
     * // Get one CollectionRessource
     * const collectionRessource = await prisma.collectionRessource.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CollectionRessourceFindUniqueArgs>(args: SelectSubset<T, CollectionRessourceFindUniqueArgs<ExtArgs>>): Prisma__CollectionRessourceClient<$Result.GetResult<Prisma.$CollectionRessourcePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CollectionRessource that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CollectionRessourceFindUniqueOrThrowArgs} args - Arguments to find a CollectionRessource
     * @example
     * // Get one CollectionRessource
     * const collectionRessource = await prisma.collectionRessource.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CollectionRessourceFindUniqueOrThrowArgs>(args: SelectSubset<T, CollectionRessourceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CollectionRessourceClient<$Result.GetResult<Prisma.$CollectionRessourcePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CollectionRessource that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionRessourceFindFirstArgs} args - Arguments to find a CollectionRessource
     * @example
     * // Get one CollectionRessource
     * const collectionRessource = await prisma.collectionRessource.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CollectionRessourceFindFirstArgs>(args?: SelectSubset<T, CollectionRessourceFindFirstArgs<ExtArgs>>): Prisma__CollectionRessourceClient<$Result.GetResult<Prisma.$CollectionRessourcePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CollectionRessource that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionRessourceFindFirstOrThrowArgs} args - Arguments to find a CollectionRessource
     * @example
     * // Get one CollectionRessource
     * const collectionRessource = await prisma.collectionRessource.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CollectionRessourceFindFirstOrThrowArgs>(args?: SelectSubset<T, CollectionRessourceFindFirstOrThrowArgs<ExtArgs>>): Prisma__CollectionRessourceClient<$Result.GetResult<Prisma.$CollectionRessourcePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CollectionRessources that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionRessourceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CollectionRessources
     * const collectionRessources = await prisma.collectionRessource.findMany()
     * 
     * // Get first 10 CollectionRessources
     * const collectionRessources = await prisma.collectionRessource.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const collectionRessourceWithIdOnly = await prisma.collectionRessource.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CollectionRessourceFindManyArgs>(args?: SelectSubset<T, CollectionRessourceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CollectionRessourcePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CollectionRessource.
     * @param {CollectionRessourceCreateArgs} args - Arguments to create a CollectionRessource.
     * @example
     * // Create one CollectionRessource
     * const CollectionRessource = await prisma.collectionRessource.create({
     *   data: {
     *     // ... data to create a CollectionRessource
     *   }
     * })
     * 
     */
    create<T extends CollectionRessourceCreateArgs>(args: SelectSubset<T, CollectionRessourceCreateArgs<ExtArgs>>): Prisma__CollectionRessourceClient<$Result.GetResult<Prisma.$CollectionRessourcePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CollectionRessources.
     * @param {CollectionRessourceCreateManyArgs} args - Arguments to create many CollectionRessources.
     * @example
     * // Create many CollectionRessources
     * const collectionRessource = await prisma.collectionRessource.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CollectionRessourceCreateManyArgs>(args?: SelectSubset<T, CollectionRessourceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CollectionRessource.
     * @param {CollectionRessourceDeleteArgs} args - Arguments to delete one CollectionRessource.
     * @example
     * // Delete one CollectionRessource
     * const CollectionRessource = await prisma.collectionRessource.delete({
     *   where: {
     *     // ... filter to delete one CollectionRessource
     *   }
     * })
     * 
     */
    delete<T extends CollectionRessourceDeleteArgs>(args: SelectSubset<T, CollectionRessourceDeleteArgs<ExtArgs>>): Prisma__CollectionRessourceClient<$Result.GetResult<Prisma.$CollectionRessourcePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CollectionRessource.
     * @param {CollectionRessourceUpdateArgs} args - Arguments to update one CollectionRessource.
     * @example
     * // Update one CollectionRessource
     * const collectionRessource = await prisma.collectionRessource.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CollectionRessourceUpdateArgs>(args: SelectSubset<T, CollectionRessourceUpdateArgs<ExtArgs>>): Prisma__CollectionRessourceClient<$Result.GetResult<Prisma.$CollectionRessourcePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CollectionRessources.
     * @param {CollectionRessourceDeleteManyArgs} args - Arguments to filter CollectionRessources to delete.
     * @example
     * // Delete a few CollectionRessources
     * const { count } = await prisma.collectionRessource.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CollectionRessourceDeleteManyArgs>(args?: SelectSubset<T, CollectionRessourceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CollectionRessources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionRessourceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CollectionRessources
     * const collectionRessource = await prisma.collectionRessource.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CollectionRessourceUpdateManyArgs>(args: SelectSubset<T, CollectionRessourceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CollectionRessource.
     * @param {CollectionRessourceUpsertArgs} args - Arguments to update or create a CollectionRessource.
     * @example
     * // Update or create a CollectionRessource
     * const collectionRessource = await prisma.collectionRessource.upsert({
     *   create: {
     *     // ... data to create a CollectionRessource
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CollectionRessource we want to update
     *   }
     * })
     */
    upsert<T extends CollectionRessourceUpsertArgs>(args: SelectSubset<T, CollectionRessourceUpsertArgs<ExtArgs>>): Prisma__CollectionRessourceClient<$Result.GetResult<Prisma.$CollectionRessourcePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CollectionRessources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionRessourceCountArgs} args - Arguments to filter CollectionRessources to count.
     * @example
     * // Count the number of CollectionRessources
     * const count = await prisma.collectionRessource.count({
     *   where: {
     *     // ... the filter for the CollectionRessources we want to count
     *   }
     * })
    **/
    count<T extends CollectionRessourceCountArgs>(
      args?: Subset<T, CollectionRessourceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CollectionRessourceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CollectionRessource.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionRessourceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CollectionRessourceAggregateArgs>(args: Subset<T, CollectionRessourceAggregateArgs>): Prisma.PrismaPromise<GetCollectionRessourceAggregateType<T>>

    /**
     * Group by CollectionRessource.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionRessourceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CollectionRessourceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CollectionRessourceGroupByArgs['orderBy'] }
        : { orderBy?: CollectionRessourceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CollectionRessourceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCollectionRessourceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CollectionRessource model
   */
  readonly fields: CollectionRessourceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CollectionRessource.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CollectionRessourceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    collection<T extends CollectionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CollectionDefaultArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ressource<T extends RessourceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RessourceDefaultArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CollectionRessource model
   */
  interface CollectionRessourceFieldRefs {
    readonly id: FieldRef<"CollectionRessource", 'String'>
    readonly collectionId: FieldRef<"CollectionRessource", 'String'>
    readonly ressourceId: FieldRef<"CollectionRessource", 'String'>
    readonly dateAjout: FieldRef<"CollectionRessource", 'DateTime'>
    readonly notes: FieldRef<"CollectionRessource", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CollectionRessource findUnique
   */
  export type CollectionRessourceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CollectionRessource
     */
    select?: CollectionRessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CollectionRessource
     */
    omit?: CollectionRessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionRessourceInclude<ExtArgs> | null
    /**
     * Filter, which CollectionRessource to fetch.
     */
    where: CollectionRessourceWhereUniqueInput
  }

  /**
   * CollectionRessource findUniqueOrThrow
   */
  export type CollectionRessourceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CollectionRessource
     */
    select?: CollectionRessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CollectionRessource
     */
    omit?: CollectionRessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionRessourceInclude<ExtArgs> | null
    /**
     * Filter, which CollectionRessource to fetch.
     */
    where: CollectionRessourceWhereUniqueInput
  }

  /**
   * CollectionRessource findFirst
   */
  export type CollectionRessourceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CollectionRessource
     */
    select?: CollectionRessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CollectionRessource
     */
    omit?: CollectionRessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionRessourceInclude<ExtArgs> | null
    /**
     * Filter, which CollectionRessource to fetch.
     */
    where?: CollectionRessourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CollectionRessources to fetch.
     */
    orderBy?: CollectionRessourceOrderByWithRelationInput | CollectionRessourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CollectionRessources.
     */
    cursor?: CollectionRessourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CollectionRessources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CollectionRessources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CollectionRessources.
     */
    distinct?: CollectionRessourceScalarFieldEnum | CollectionRessourceScalarFieldEnum[]
  }

  /**
   * CollectionRessource findFirstOrThrow
   */
  export type CollectionRessourceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CollectionRessource
     */
    select?: CollectionRessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CollectionRessource
     */
    omit?: CollectionRessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionRessourceInclude<ExtArgs> | null
    /**
     * Filter, which CollectionRessource to fetch.
     */
    where?: CollectionRessourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CollectionRessources to fetch.
     */
    orderBy?: CollectionRessourceOrderByWithRelationInput | CollectionRessourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CollectionRessources.
     */
    cursor?: CollectionRessourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CollectionRessources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CollectionRessources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CollectionRessources.
     */
    distinct?: CollectionRessourceScalarFieldEnum | CollectionRessourceScalarFieldEnum[]
  }

  /**
   * CollectionRessource findMany
   */
  export type CollectionRessourceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CollectionRessource
     */
    select?: CollectionRessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CollectionRessource
     */
    omit?: CollectionRessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionRessourceInclude<ExtArgs> | null
    /**
     * Filter, which CollectionRessources to fetch.
     */
    where?: CollectionRessourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CollectionRessources to fetch.
     */
    orderBy?: CollectionRessourceOrderByWithRelationInput | CollectionRessourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CollectionRessources.
     */
    cursor?: CollectionRessourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CollectionRessources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CollectionRessources.
     */
    skip?: number
    distinct?: CollectionRessourceScalarFieldEnum | CollectionRessourceScalarFieldEnum[]
  }

  /**
   * CollectionRessource create
   */
  export type CollectionRessourceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CollectionRessource
     */
    select?: CollectionRessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CollectionRessource
     */
    omit?: CollectionRessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionRessourceInclude<ExtArgs> | null
    /**
     * The data needed to create a CollectionRessource.
     */
    data: XOR<CollectionRessourceCreateInput, CollectionRessourceUncheckedCreateInput>
  }

  /**
   * CollectionRessource createMany
   */
  export type CollectionRessourceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CollectionRessources.
     */
    data: CollectionRessourceCreateManyInput | CollectionRessourceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CollectionRessource update
   */
  export type CollectionRessourceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CollectionRessource
     */
    select?: CollectionRessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CollectionRessource
     */
    omit?: CollectionRessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionRessourceInclude<ExtArgs> | null
    /**
     * The data needed to update a CollectionRessource.
     */
    data: XOR<CollectionRessourceUpdateInput, CollectionRessourceUncheckedUpdateInput>
    /**
     * Choose, which CollectionRessource to update.
     */
    where: CollectionRessourceWhereUniqueInput
  }

  /**
   * CollectionRessource updateMany
   */
  export type CollectionRessourceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CollectionRessources.
     */
    data: XOR<CollectionRessourceUpdateManyMutationInput, CollectionRessourceUncheckedUpdateManyInput>
    /**
     * Filter which CollectionRessources to update
     */
    where?: CollectionRessourceWhereInput
    /**
     * Limit how many CollectionRessources to update.
     */
    limit?: number
  }

  /**
   * CollectionRessource upsert
   */
  export type CollectionRessourceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CollectionRessource
     */
    select?: CollectionRessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CollectionRessource
     */
    omit?: CollectionRessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionRessourceInclude<ExtArgs> | null
    /**
     * The filter to search for the CollectionRessource to update in case it exists.
     */
    where: CollectionRessourceWhereUniqueInput
    /**
     * In case the CollectionRessource found by the `where` argument doesn't exist, create a new CollectionRessource with this data.
     */
    create: XOR<CollectionRessourceCreateInput, CollectionRessourceUncheckedCreateInput>
    /**
     * In case the CollectionRessource was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CollectionRessourceUpdateInput, CollectionRessourceUncheckedUpdateInput>
  }

  /**
   * CollectionRessource delete
   */
  export type CollectionRessourceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CollectionRessource
     */
    select?: CollectionRessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CollectionRessource
     */
    omit?: CollectionRessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionRessourceInclude<ExtArgs> | null
    /**
     * Filter which CollectionRessource to delete.
     */
    where: CollectionRessourceWhereUniqueInput
  }

  /**
   * CollectionRessource deleteMany
   */
  export type CollectionRessourceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CollectionRessources to delete
     */
    where?: CollectionRessourceWhereInput
    /**
     * Limit how many CollectionRessources to delete.
     */
    limit?: number
  }

  /**
   * CollectionRessource without action
   */
  export type CollectionRessourceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CollectionRessource
     */
    select?: CollectionRessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CollectionRessource
     */
    omit?: CollectionRessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionRessourceInclude<ExtArgs> | null
  }


  /**
   * Model PartageUniversite
   */

  export type AggregatePartageUniversite = {
    _count: PartageUniversiteCountAggregateOutputType | null
    _min: PartageUniversiteMinAggregateOutputType | null
    _max: PartageUniversiteMaxAggregateOutputType | null
  }

  export type PartageUniversiteMinAggregateOutputType = {
    id: string | null
    ressourceId: string | null
    universiteSource: string | null
    universiteDestination: string | null
    datePartage: Date | null
    estActif: boolean | null
  }

  export type PartageUniversiteMaxAggregateOutputType = {
    id: string | null
    ressourceId: string | null
    universiteSource: string | null
    universiteDestination: string | null
    datePartage: Date | null
    estActif: boolean | null
  }

  export type PartageUniversiteCountAggregateOutputType = {
    id: number
    ressourceId: number
    universiteSource: number
    universiteDestination: number
    datePartage: number
    estActif: number
    _all: number
  }


  export type PartageUniversiteMinAggregateInputType = {
    id?: true
    ressourceId?: true
    universiteSource?: true
    universiteDestination?: true
    datePartage?: true
    estActif?: true
  }

  export type PartageUniversiteMaxAggregateInputType = {
    id?: true
    ressourceId?: true
    universiteSource?: true
    universiteDestination?: true
    datePartage?: true
    estActif?: true
  }

  export type PartageUniversiteCountAggregateInputType = {
    id?: true
    ressourceId?: true
    universiteSource?: true
    universiteDestination?: true
    datePartage?: true
    estActif?: true
    _all?: true
  }

  export type PartageUniversiteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PartageUniversite to aggregate.
     */
    where?: PartageUniversiteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PartageUniversites to fetch.
     */
    orderBy?: PartageUniversiteOrderByWithRelationInput | PartageUniversiteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PartageUniversiteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PartageUniversites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PartageUniversites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PartageUniversites
    **/
    _count?: true | PartageUniversiteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PartageUniversiteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PartageUniversiteMaxAggregateInputType
  }

  export type GetPartageUniversiteAggregateType<T extends PartageUniversiteAggregateArgs> = {
        [P in keyof T & keyof AggregatePartageUniversite]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePartageUniversite[P]>
      : GetScalarType<T[P], AggregatePartageUniversite[P]>
  }




  export type PartageUniversiteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PartageUniversiteWhereInput
    orderBy?: PartageUniversiteOrderByWithAggregationInput | PartageUniversiteOrderByWithAggregationInput[]
    by: PartageUniversiteScalarFieldEnum[] | PartageUniversiteScalarFieldEnum
    having?: PartageUniversiteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PartageUniversiteCountAggregateInputType | true
    _min?: PartageUniversiteMinAggregateInputType
    _max?: PartageUniversiteMaxAggregateInputType
  }

  export type PartageUniversiteGroupByOutputType = {
    id: string
    ressourceId: string
    universiteSource: string
    universiteDestination: string
    datePartage: Date
    estActif: boolean
    _count: PartageUniversiteCountAggregateOutputType | null
    _min: PartageUniversiteMinAggregateOutputType | null
    _max: PartageUniversiteMaxAggregateOutputType | null
  }

  type GetPartageUniversiteGroupByPayload<T extends PartageUniversiteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PartageUniversiteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PartageUniversiteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PartageUniversiteGroupByOutputType[P]>
            : GetScalarType<T[P], PartageUniversiteGroupByOutputType[P]>
        }
      >
    >


  export type PartageUniversiteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ressourceId?: boolean
    universiteSource?: boolean
    universiteDestination?: boolean
    datePartage?: boolean
    estActif?: boolean
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
    universiteSourceRel?: boolean | UniversiteDefaultArgs<ExtArgs>
    universiteDestinationRel?: boolean | UniversiteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["partageUniversite"]>



  export type PartageUniversiteSelectScalar = {
    id?: boolean
    ressourceId?: boolean
    universiteSource?: boolean
    universiteDestination?: boolean
    datePartage?: boolean
    estActif?: boolean
  }

  export type PartageUniversiteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "ressourceId" | "universiteSource" | "universiteDestination" | "datePartage" | "estActif", ExtArgs["result"]["partageUniversite"]>
  export type PartageUniversiteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ressource?: boolean | RessourceDefaultArgs<ExtArgs>
    universiteSourceRel?: boolean | UniversiteDefaultArgs<ExtArgs>
    universiteDestinationRel?: boolean | UniversiteDefaultArgs<ExtArgs>
  }

  export type $PartageUniversitePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PartageUniversite"
    objects: {
      ressource: Prisma.$RessourcePayload<ExtArgs>
      universiteSourceRel: Prisma.$UniversitePayload<ExtArgs>
      universiteDestinationRel: Prisma.$UniversitePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      ressourceId: string
      universiteSource: string
      universiteDestination: string
      datePartage: Date
      estActif: boolean
    }, ExtArgs["result"]["partageUniversite"]>
    composites: {}
  }

  type PartageUniversiteGetPayload<S extends boolean | null | undefined | PartageUniversiteDefaultArgs> = $Result.GetResult<Prisma.$PartageUniversitePayload, S>

  type PartageUniversiteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PartageUniversiteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PartageUniversiteCountAggregateInputType | true
    }

  export interface PartageUniversiteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PartageUniversite'], meta: { name: 'PartageUniversite' } }
    /**
     * Find zero or one PartageUniversite that matches the filter.
     * @param {PartageUniversiteFindUniqueArgs} args - Arguments to find a PartageUniversite
     * @example
     * // Get one PartageUniversite
     * const partageUniversite = await prisma.partageUniversite.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PartageUniversiteFindUniqueArgs>(args: SelectSubset<T, PartageUniversiteFindUniqueArgs<ExtArgs>>): Prisma__PartageUniversiteClient<$Result.GetResult<Prisma.$PartageUniversitePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PartageUniversite that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PartageUniversiteFindUniqueOrThrowArgs} args - Arguments to find a PartageUniversite
     * @example
     * // Get one PartageUniversite
     * const partageUniversite = await prisma.partageUniversite.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PartageUniversiteFindUniqueOrThrowArgs>(args: SelectSubset<T, PartageUniversiteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PartageUniversiteClient<$Result.GetResult<Prisma.$PartageUniversitePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PartageUniversite that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PartageUniversiteFindFirstArgs} args - Arguments to find a PartageUniversite
     * @example
     * // Get one PartageUniversite
     * const partageUniversite = await prisma.partageUniversite.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PartageUniversiteFindFirstArgs>(args?: SelectSubset<T, PartageUniversiteFindFirstArgs<ExtArgs>>): Prisma__PartageUniversiteClient<$Result.GetResult<Prisma.$PartageUniversitePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PartageUniversite that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PartageUniversiteFindFirstOrThrowArgs} args - Arguments to find a PartageUniversite
     * @example
     * // Get one PartageUniversite
     * const partageUniversite = await prisma.partageUniversite.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PartageUniversiteFindFirstOrThrowArgs>(args?: SelectSubset<T, PartageUniversiteFindFirstOrThrowArgs<ExtArgs>>): Prisma__PartageUniversiteClient<$Result.GetResult<Prisma.$PartageUniversitePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PartageUniversites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PartageUniversiteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PartageUniversites
     * const partageUniversites = await prisma.partageUniversite.findMany()
     * 
     * // Get first 10 PartageUniversites
     * const partageUniversites = await prisma.partageUniversite.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const partageUniversiteWithIdOnly = await prisma.partageUniversite.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PartageUniversiteFindManyArgs>(args?: SelectSubset<T, PartageUniversiteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PartageUniversitePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PartageUniversite.
     * @param {PartageUniversiteCreateArgs} args - Arguments to create a PartageUniversite.
     * @example
     * // Create one PartageUniversite
     * const PartageUniversite = await prisma.partageUniversite.create({
     *   data: {
     *     // ... data to create a PartageUniversite
     *   }
     * })
     * 
     */
    create<T extends PartageUniversiteCreateArgs>(args: SelectSubset<T, PartageUniversiteCreateArgs<ExtArgs>>): Prisma__PartageUniversiteClient<$Result.GetResult<Prisma.$PartageUniversitePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PartageUniversites.
     * @param {PartageUniversiteCreateManyArgs} args - Arguments to create many PartageUniversites.
     * @example
     * // Create many PartageUniversites
     * const partageUniversite = await prisma.partageUniversite.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PartageUniversiteCreateManyArgs>(args?: SelectSubset<T, PartageUniversiteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PartageUniversite.
     * @param {PartageUniversiteDeleteArgs} args - Arguments to delete one PartageUniversite.
     * @example
     * // Delete one PartageUniversite
     * const PartageUniversite = await prisma.partageUniversite.delete({
     *   where: {
     *     // ... filter to delete one PartageUniversite
     *   }
     * })
     * 
     */
    delete<T extends PartageUniversiteDeleteArgs>(args: SelectSubset<T, PartageUniversiteDeleteArgs<ExtArgs>>): Prisma__PartageUniversiteClient<$Result.GetResult<Prisma.$PartageUniversitePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PartageUniversite.
     * @param {PartageUniversiteUpdateArgs} args - Arguments to update one PartageUniversite.
     * @example
     * // Update one PartageUniversite
     * const partageUniversite = await prisma.partageUniversite.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PartageUniversiteUpdateArgs>(args: SelectSubset<T, PartageUniversiteUpdateArgs<ExtArgs>>): Prisma__PartageUniversiteClient<$Result.GetResult<Prisma.$PartageUniversitePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PartageUniversites.
     * @param {PartageUniversiteDeleteManyArgs} args - Arguments to filter PartageUniversites to delete.
     * @example
     * // Delete a few PartageUniversites
     * const { count } = await prisma.partageUniversite.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PartageUniversiteDeleteManyArgs>(args?: SelectSubset<T, PartageUniversiteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PartageUniversites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PartageUniversiteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PartageUniversites
     * const partageUniversite = await prisma.partageUniversite.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PartageUniversiteUpdateManyArgs>(args: SelectSubset<T, PartageUniversiteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PartageUniversite.
     * @param {PartageUniversiteUpsertArgs} args - Arguments to update or create a PartageUniversite.
     * @example
     * // Update or create a PartageUniversite
     * const partageUniversite = await prisma.partageUniversite.upsert({
     *   create: {
     *     // ... data to create a PartageUniversite
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PartageUniversite we want to update
     *   }
     * })
     */
    upsert<T extends PartageUniversiteUpsertArgs>(args: SelectSubset<T, PartageUniversiteUpsertArgs<ExtArgs>>): Prisma__PartageUniversiteClient<$Result.GetResult<Prisma.$PartageUniversitePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PartageUniversites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PartageUniversiteCountArgs} args - Arguments to filter PartageUniversites to count.
     * @example
     * // Count the number of PartageUniversites
     * const count = await prisma.partageUniversite.count({
     *   where: {
     *     // ... the filter for the PartageUniversites we want to count
     *   }
     * })
    **/
    count<T extends PartageUniversiteCountArgs>(
      args?: Subset<T, PartageUniversiteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PartageUniversiteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PartageUniversite.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PartageUniversiteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PartageUniversiteAggregateArgs>(args: Subset<T, PartageUniversiteAggregateArgs>): Prisma.PrismaPromise<GetPartageUniversiteAggregateType<T>>

    /**
     * Group by PartageUniversite.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PartageUniversiteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PartageUniversiteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PartageUniversiteGroupByArgs['orderBy'] }
        : { orderBy?: PartageUniversiteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PartageUniversiteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPartageUniversiteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PartageUniversite model
   */
  readonly fields: PartageUniversiteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PartageUniversite.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PartageUniversiteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ressource<T extends RessourceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RessourceDefaultArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    universiteSourceRel<T extends UniversiteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversiteDefaultArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    universiteDestinationRel<T extends UniversiteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversiteDefaultArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PartageUniversite model
   */
  interface PartageUniversiteFieldRefs {
    readonly id: FieldRef<"PartageUniversite", 'String'>
    readonly ressourceId: FieldRef<"PartageUniversite", 'String'>
    readonly universiteSource: FieldRef<"PartageUniversite", 'String'>
    readonly universiteDestination: FieldRef<"PartageUniversite", 'String'>
    readonly datePartage: FieldRef<"PartageUniversite", 'DateTime'>
    readonly estActif: FieldRef<"PartageUniversite", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * PartageUniversite findUnique
   */
  export type PartageUniversiteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PartageUniversite
     */
    select?: PartageUniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PartageUniversite
     */
    omit?: PartageUniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PartageUniversiteInclude<ExtArgs> | null
    /**
     * Filter, which PartageUniversite to fetch.
     */
    where: PartageUniversiteWhereUniqueInput
  }

  /**
   * PartageUniversite findUniqueOrThrow
   */
  export type PartageUniversiteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PartageUniversite
     */
    select?: PartageUniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PartageUniversite
     */
    omit?: PartageUniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PartageUniversiteInclude<ExtArgs> | null
    /**
     * Filter, which PartageUniversite to fetch.
     */
    where: PartageUniversiteWhereUniqueInput
  }

  /**
   * PartageUniversite findFirst
   */
  export type PartageUniversiteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PartageUniversite
     */
    select?: PartageUniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PartageUniversite
     */
    omit?: PartageUniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PartageUniversiteInclude<ExtArgs> | null
    /**
     * Filter, which PartageUniversite to fetch.
     */
    where?: PartageUniversiteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PartageUniversites to fetch.
     */
    orderBy?: PartageUniversiteOrderByWithRelationInput | PartageUniversiteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PartageUniversites.
     */
    cursor?: PartageUniversiteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PartageUniversites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PartageUniversites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PartageUniversites.
     */
    distinct?: PartageUniversiteScalarFieldEnum | PartageUniversiteScalarFieldEnum[]
  }

  /**
   * PartageUniversite findFirstOrThrow
   */
  export type PartageUniversiteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PartageUniversite
     */
    select?: PartageUniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PartageUniversite
     */
    omit?: PartageUniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PartageUniversiteInclude<ExtArgs> | null
    /**
     * Filter, which PartageUniversite to fetch.
     */
    where?: PartageUniversiteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PartageUniversites to fetch.
     */
    orderBy?: PartageUniversiteOrderByWithRelationInput | PartageUniversiteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PartageUniversites.
     */
    cursor?: PartageUniversiteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PartageUniversites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PartageUniversites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PartageUniversites.
     */
    distinct?: PartageUniversiteScalarFieldEnum | PartageUniversiteScalarFieldEnum[]
  }

  /**
   * PartageUniversite findMany
   */
  export type PartageUniversiteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PartageUniversite
     */
    select?: PartageUniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PartageUniversite
     */
    omit?: PartageUniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PartageUniversiteInclude<ExtArgs> | null
    /**
     * Filter, which PartageUniversites to fetch.
     */
    where?: PartageUniversiteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PartageUniversites to fetch.
     */
    orderBy?: PartageUniversiteOrderByWithRelationInput | PartageUniversiteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PartageUniversites.
     */
    cursor?: PartageUniversiteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PartageUniversites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PartageUniversites.
     */
    skip?: number
    distinct?: PartageUniversiteScalarFieldEnum | PartageUniversiteScalarFieldEnum[]
  }

  /**
   * PartageUniversite create
   */
  export type PartageUniversiteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PartageUniversite
     */
    select?: PartageUniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PartageUniversite
     */
    omit?: PartageUniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PartageUniversiteInclude<ExtArgs> | null
    /**
     * The data needed to create a PartageUniversite.
     */
    data: XOR<PartageUniversiteCreateInput, PartageUniversiteUncheckedCreateInput>
  }

  /**
   * PartageUniversite createMany
   */
  export type PartageUniversiteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PartageUniversites.
     */
    data: PartageUniversiteCreateManyInput | PartageUniversiteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PartageUniversite update
   */
  export type PartageUniversiteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PartageUniversite
     */
    select?: PartageUniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PartageUniversite
     */
    omit?: PartageUniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PartageUniversiteInclude<ExtArgs> | null
    /**
     * The data needed to update a PartageUniversite.
     */
    data: XOR<PartageUniversiteUpdateInput, PartageUniversiteUncheckedUpdateInput>
    /**
     * Choose, which PartageUniversite to update.
     */
    where: PartageUniversiteWhereUniqueInput
  }

  /**
   * PartageUniversite updateMany
   */
  export type PartageUniversiteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PartageUniversites.
     */
    data: XOR<PartageUniversiteUpdateManyMutationInput, PartageUniversiteUncheckedUpdateManyInput>
    /**
     * Filter which PartageUniversites to update
     */
    where?: PartageUniversiteWhereInput
    /**
     * Limit how many PartageUniversites to update.
     */
    limit?: number
  }

  /**
   * PartageUniversite upsert
   */
  export type PartageUniversiteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PartageUniversite
     */
    select?: PartageUniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PartageUniversite
     */
    omit?: PartageUniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PartageUniversiteInclude<ExtArgs> | null
    /**
     * The filter to search for the PartageUniversite to update in case it exists.
     */
    where: PartageUniversiteWhereUniqueInput
    /**
     * In case the PartageUniversite found by the `where` argument doesn't exist, create a new PartageUniversite with this data.
     */
    create: XOR<PartageUniversiteCreateInput, PartageUniversiteUncheckedCreateInput>
    /**
     * In case the PartageUniversite was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PartageUniversiteUpdateInput, PartageUniversiteUncheckedUpdateInput>
  }

  /**
   * PartageUniversite delete
   */
  export type PartageUniversiteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PartageUniversite
     */
    select?: PartageUniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PartageUniversite
     */
    omit?: PartageUniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PartageUniversiteInclude<ExtArgs> | null
    /**
     * Filter which PartageUniversite to delete.
     */
    where: PartageUniversiteWhereUniqueInput
  }

  /**
   * PartageUniversite deleteMany
   */
  export type PartageUniversiteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PartageUniversites to delete
     */
    where?: PartageUniversiteWhereInput
    /**
     * Limit how many PartageUniversites to delete.
     */
    limit?: number
  }

  /**
   * PartageUniversite without action
   */
  export type PartageUniversiteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PartageUniversite
     */
    select?: PartageUniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PartageUniversite
     */
    omit?: PartageUniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PartageUniversiteInclude<ExtArgs> | null
  }


  /**
   * Model TransactionBlockchain
   */

  export type AggregateTransactionBlockchain = {
    _count: TransactionBlockchainCountAggregateOutputType | null
    _min: TransactionBlockchainMinAggregateOutputType | null
    _max: TransactionBlockchainMaxAggregateOutputType | null
  }

  export type TransactionBlockchainMinAggregateOutputType = {
    id: string | null
    referenceBlockchain: string | null
    typeTransaction: $Enums.TypeTransaction | null
    ressourceId: string | null
    universiteOrigine: string | null
    universiteDestination: string | null
    dateTransaction: Date | null
    statut: $Enums.StatutTransaction | null
    hashTransaction: string | null
  }

  export type TransactionBlockchainMaxAggregateOutputType = {
    id: string | null
    referenceBlockchain: string | null
    typeTransaction: $Enums.TypeTransaction | null
    ressourceId: string | null
    universiteOrigine: string | null
    universiteDestination: string | null
    dateTransaction: Date | null
    statut: $Enums.StatutTransaction | null
    hashTransaction: string | null
  }

  export type TransactionBlockchainCountAggregateOutputType = {
    id: number
    referenceBlockchain: number
    typeTransaction: number
    ressourceId: number
    universiteOrigine: number
    universiteDestination: number
    dateTransaction: number
    statut: number
    hashTransaction: number
    donneesTechniques: number
    _all: number
  }


  export type TransactionBlockchainMinAggregateInputType = {
    id?: true
    referenceBlockchain?: true
    typeTransaction?: true
    ressourceId?: true
    universiteOrigine?: true
    universiteDestination?: true
    dateTransaction?: true
    statut?: true
    hashTransaction?: true
  }

  export type TransactionBlockchainMaxAggregateInputType = {
    id?: true
    referenceBlockchain?: true
    typeTransaction?: true
    ressourceId?: true
    universiteOrigine?: true
    universiteDestination?: true
    dateTransaction?: true
    statut?: true
    hashTransaction?: true
  }

  export type TransactionBlockchainCountAggregateInputType = {
    id?: true
    referenceBlockchain?: true
    typeTransaction?: true
    ressourceId?: true
    universiteOrigine?: true
    universiteDestination?: true
    dateTransaction?: true
    statut?: true
    hashTransaction?: true
    donneesTechniques?: true
    _all?: true
  }

  export type TransactionBlockchainAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TransactionBlockchain to aggregate.
     */
    where?: TransactionBlockchainWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransactionBlockchains to fetch.
     */
    orderBy?: TransactionBlockchainOrderByWithRelationInput | TransactionBlockchainOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransactionBlockchainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransactionBlockchains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransactionBlockchains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TransactionBlockchains
    **/
    _count?: true | TransactionBlockchainCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransactionBlockchainMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransactionBlockchainMaxAggregateInputType
  }

  export type GetTransactionBlockchainAggregateType<T extends TransactionBlockchainAggregateArgs> = {
        [P in keyof T & keyof AggregateTransactionBlockchain]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransactionBlockchain[P]>
      : GetScalarType<T[P], AggregateTransactionBlockchain[P]>
  }




  export type TransactionBlockchainGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionBlockchainWhereInput
    orderBy?: TransactionBlockchainOrderByWithAggregationInput | TransactionBlockchainOrderByWithAggregationInput[]
    by: TransactionBlockchainScalarFieldEnum[] | TransactionBlockchainScalarFieldEnum
    having?: TransactionBlockchainScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransactionBlockchainCountAggregateInputType | true
    _min?: TransactionBlockchainMinAggregateInputType
    _max?: TransactionBlockchainMaxAggregateInputType
  }

  export type TransactionBlockchainGroupByOutputType = {
    id: string
    referenceBlockchain: string
    typeTransaction: $Enums.TypeTransaction
    ressourceId: string | null
    universiteOrigine: string
    universiteDestination: string | null
    dateTransaction: Date
    statut: $Enums.StatutTransaction
    hashTransaction: string
    donneesTechniques: JsonValue | null
    _count: TransactionBlockchainCountAggregateOutputType | null
    _min: TransactionBlockchainMinAggregateOutputType | null
    _max: TransactionBlockchainMaxAggregateOutputType | null
  }

  type GetTransactionBlockchainGroupByPayload<T extends TransactionBlockchainGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransactionBlockchainGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransactionBlockchainGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransactionBlockchainGroupByOutputType[P]>
            : GetScalarType<T[P], TransactionBlockchainGroupByOutputType[P]>
        }
      >
    >


  export type TransactionBlockchainSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    referenceBlockchain?: boolean
    typeTransaction?: boolean
    ressourceId?: boolean
    universiteOrigine?: boolean
    universiteDestination?: boolean
    dateTransaction?: boolean
    statut?: boolean
    hashTransaction?: boolean
    donneesTechniques?: boolean
    ressource?: boolean | TransactionBlockchain$ressourceArgs<ExtArgs>
    universiteOrigineRel?: boolean | UniversiteDefaultArgs<ExtArgs>
    universiteDestinationRel?: boolean | TransactionBlockchain$universiteDestinationRelArgs<ExtArgs>
  }, ExtArgs["result"]["transactionBlockchain"]>



  export type TransactionBlockchainSelectScalar = {
    id?: boolean
    referenceBlockchain?: boolean
    typeTransaction?: boolean
    ressourceId?: boolean
    universiteOrigine?: boolean
    universiteDestination?: boolean
    dateTransaction?: boolean
    statut?: boolean
    hashTransaction?: boolean
    donneesTechniques?: boolean
  }

  export type TransactionBlockchainOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "referenceBlockchain" | "typeTransaction" | "ressourceId" | "universiteOrigine" | "universiteDestination" | "dateTransaction" | "statut" | "hashTransaction" | "donneesTechniques", ExtArgs["result"]["transactionBlockchain"]>
  export type TransactionBlockchainInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ressource?: boolean | TransactionBlockchain$ressourceArgs<ExtArgs>
    universiteOrigineRel?: boolean | UniversiteDefaultArgs<ExtArgs>
    universiteDestinationRel?: boolean | TransactionBlockchain$universiteDestinationRelArgs<ExtArgs>
  }

  export type $TransactionBlockchainPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TransactionBlockchain"
    objects: {
      ressource: Prisma.$RessourcePayload<ExtArgs> | null
      universiteOrigineRel: Prisma.$UniversitePayload<ExtArgs>
      universiteDestinationRel: Prisma.$UniversitePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      referenceBlockchain: string
      typeTransaction: $Enums.TypeTransaction
      ressourceId: string | null
      universiteOrigine: string
      universiteDestination: string | null
      dateTransaction: Date
      statut: $Enums.StatutTransaction
      hashTransaction: string
      donneesTechniques: Prisma.JsonValue | null
    }, ExtArgs["result"]["transactionBlockchain"]>
    composites: {}
  }

  type TransactionBlockchainGetPayload<S extends boolean | null | undefined | TransactionBlockchainDefaultArgs> = $Result.GetResult<Prisma.$TransactionBlockchainPayload, S>

  type TransactionBlockchainCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TransactionBlockchainFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransactionBlockchainCountAggregateInputType | true
    }

  export interface TransactionBlockchainDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TransactionBlockchain'], meta: { name: 'TransactionBlockchain' } }
    /**
     * Find zero or one TransactionBlockchain that matches the filter.
     * @param {TransactionBlockchainFindUniqueArgs} args - Arguments to find a TransactionBlockchain
     * @example
     * // Get one TransactionBlockchain
     * const transactionBlockchain = await prisma.transactionBlockchain.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransactionBlockchainFindUniqueArgs>(args: SelectSubset<T, TransactionBlockchainFindUniqueArgs<ExtArgs>>): Prisma__TransactionBlockchainClient<$Result.GetResult<Prisma.$TransactionBlockchainPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TransactionBlockchain that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TransactionBlockchainFindUniqueOrThrowArgs} args - Arguments to find a TransactionBlockchain
     * @example
     * // Get one TransactionBlockchain
     * const transactionBlockchain = await prisma.transactionBlockchain.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransactionBlockchainFindUniqueOrThrowArgs>(args: SelectSubset<T, TransactionBlockchainFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransactionBlockchainClient<$Result.GetResult<Prisma.$TransactionBlockchainPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TransactionBlockchain that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionBlockchainFindFirstArgs} args - Arguments to find a TransactionBlockchain
     * @example
     * // Get one TransactionBlockchain
     * const transactionBlockchain = await prisma.transactionBlockchain.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransactionBlockchainFindFirstArgs>(args?: SelectSubset<T, TransactionBlockchainFindFirstArgs<ExtArgs>>): Prisma__TransactionBlockchainClient<$Result.GetResult<Prisma.$TransactionBlockchainPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TransactionBlockchain that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionBlockchainFindFirstOrThrowArgs} args - Arguments to find a TransactionBlockchain
     * @example
     * // Get one TransactionBlockchain
     * const transactionBlockchain = await prisma.transactionBlockchain.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransactionBlockchainFindFirstOrThrowArgs>(args?: SelectSubset<T, TransactionBlockchainFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransactionBlockchainClient<$Result.GetResult<Prisma.$TransactionBlockchainPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TransactionBlockchains that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionBlockchainFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TransactionBlockchains
     * const transactionBlockchains = await prisma.transactionBlockchain.findMany()
     * 
     * // Get first 10 TransactionBlockchains
     * const transactionBlockchains = await prisma.transactionBlockchain.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transactionBlockchainWithIdOnly = await prisma.transactionBlockchain.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransactionBlockchainFindManyArgs>(args?: SelectSubset<T, TransactionBlockchainFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionBlockchainPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TransactionBlockchain.
     * @param {TransactionBlockchainCreateArgs} args - Arguments to create a TransactionBlockchain.
     * @example
     * // Create one TransactionBlockchain
     * const TransactionBlockchain = await prisma.transactionBlockchain.create({
     *   data: {
     *     // ... data to create a TransactionBlockchain
     *   }
     * })
     * 
     */
    create<T extends TransactionBlockchainCreateArgs>(args: SelectSubset<T, TransactionBlockchainCreateArgs<ExtArgs>>): Prisma__TransactionBlockchainClient<$Result.GetResult<Prisma.$TransactionBlockchainPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TransactionBlockchains.
     * @param {TransactionBlockchainCreateManyArgs} args - Arguments to create many TransactionBlockchains.
     * @example
     * // Create many TransactionBlockchains
     * const transactionBlockchain = await prisma.transactionBlockchain.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransactionBlockchainCreateManyArgs>(args?: SelectSubset<T, TransactionBlockchainCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TransactionBlockchain.
     * @param {TransactionBlockchainDeleteArgs} args - Arguments to delete one TransactionBlockchain.
     * @example
     * // Delete one TransactionBlockchain
     * const TransactionBlockchain = await prisma.transactionBlockchain.delete({
     *   where: {
     *     // ... filter to delete one TransactionBlockchain
     *   }
     * })
     * 
     */
    delete<T extends TransactionBlockchainDeleteArgs>(args: SelectSubset<T, TransactionBlockchainDeleteArgs<ExtArgs>>): Prisma__TransactionBlockchainClient<$Result.GetResult<Prisma.$TransactionBlockchainPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TransactionBlockchain.
     * @param {TransactionBlockchainUpdateArgs} args - Arguments to update one TransactionBlockchain.
     * @example
     * // Update one TransactionBlockchain
     * const transactionBlockchain = await prisma.transactionBlockchain.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransactionBlockchainUpdateArgs>(args: SelectSubset<T, TransactionBlockchainUpdateArgs<ExtArgs>>): Prisma__TransactionBlockchainClient<$Result.GetResult<Prisma.$TransactionBlockchainPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TransactionBlockchains.
     * @param {TransactionBlockchainDeleteManyArgs} args - Arguments to filter TransactionBlockchains to delete.
     * @example
     * // Delete a few TransactionBlockchains
     * const { count } = await prisma.transactionBlockchain.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransactionBlockchainDeleteManyArgs>(args?: SelectSubset<T, TransactionBlockchainDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TransactionBlockchains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionBlockchainUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TransactionBlockchains
     * const transactionBlockchain = await prisma.transactionBlockchain.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransactionBlockchainUpdateManyArgs>(args: SelectSubset<T, TransactionBlockchainUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TransactionBlockchain.
     * @param {TransactionBlockchainUpsertArgs} args - Arguments to update or create a TransactionBlockchain.
     * @example
     * // Update or create a TransactionBlockchain
     * const transactionBlockchain = await prisma.transactionBlockchain.upsert({
     *   create: {
     *     // ... data to create a TransactionBlockchain
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TransactionBlockchain we want to update
     *   }
     * })
     */
    upsert<T extends TransactionBlockchainUpsertArgs>(args: SelectSubset<T, TransactionBlockchainUpsertArgs<ExtArgs>>): Prisma__TransactionBlockchainClient<$Result.GetResult<Prisma.$TransactionBlockchainPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TransactionBlockchains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionBlockchainCountArgs} args - Arguments to filter TransactionBlockchains to count.
     * @example
     * // Count the number of TransactionBlockchains
     * const count = await prisma.transactionBlockchain.count({
     *   where: {
     *     // ... the filter for the TransactionBlockchains we want to count
     *   }
     * })
    **/
    count<T extends TransactionBlockchainCountArgs>(
      args?: Subset<T, TransactionBlockchainCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransactionBlockchainCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TransactionBlockchain.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionBlockchainAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransactionBlockchainAggregateArgs>(args: Subset<T, TransactionBlockchainAggregateArgs>): Prisma.PrismaPromise<GetTransactionBlockchainAggregateType<T>>

    /**
     * Group by TransactionBlockchain.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionBlockchainGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransactionBlockchainGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransactionBlockchainGroupByArgs['orderBy'] }
        : { orderBy?: TransactionBlockchainGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransactionBlockchainGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransactionBlockchainGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TransactionBlockchain model
   */
  readonly fields: TransactionBlockchainFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TransactionBlockchain.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransactionBlockchainClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ressource<T extends TransactionBlockchain$ressourceArgs<ExtArgs> = {}>(args?: Subset<T, TransactionBlockchain$ressourceArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    universiteOrigineRel<T extends UniversiteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversiteDefaultArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    universiteDestinationRel<T extends TransactionBlockchain$universiteDestinationRelArgs<ExtArgs> = {}>(args?: Subset<T, TransactionBlockchain$universiteDestinationRelArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TransactionBlockchain model
   */
  interface TransactionBlockchainFieldRefs {
    readonly id: FieldRef<"TransactionBlockchain", 'String'>
    readonly referenceBlockchain: FieldRef<"TransactionBlockchain", 'String'>
    readonly typeTransaction: FieldRef<"TransactionBlockchain", 'TypeTransaction'>
    readonly ressourceId: FieldRef<"TransactionBlockchain", 'String'>
    readonly universiteOrigine: FieldRef<"TransactionBlockchain", 'String'>
    readonly universiteDestination: FieldRef<"TransactionBlockchain", 'String'>
    readonly dateTransaction: FieldRef<"TransactionBlockchain", 'DateTime'>
    readonly statut: FieldRef<"TransactionBlockchain", 'StatutTransaction'>
    readonly hashTransaction: FieldRef<"TransactionBlockchain", 'String'>
    readonly donneesTechniques: FieldRef<"TransactionBlockchain", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * TransactionBlockchain findUnique
   */
  export type TransactionBlockchainFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionBlockchain
     */
    select?: TransactionBlockchainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionBlockchain
     */
    omit?: TransactionBlockchainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionBlockchainInclude<ExtArgs> | null
    /**
     * Filter, which TransactionBlockchain to fetch.
     */
    where: TransactionBlockchainWhereUniqueInput
  }

  /**
   * TransactionBlockchain findUniqueOrThrow
   */
  export type TransactionBlockchainFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionBlockchain
     */
    select?: TransactionBlockchainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionBlockchain
     */
    omit?: TransactionBlockchainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionBlockchainInclude<ExtArgs> | null
    /**
     * Filter, which TransactionBlockchain to fetch.
     */
    where: TransactionBlockchainWhereUniqueInput
  }

  /**
   * TransactionBlockchain findFirst
   */
  export type TransactionBlockchainFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionBlockchain
     */
    select?: TransactionBlockchainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionBlockchain
     */
    omit?: TransactionBlockchainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionBlockchainInclude<ExtArgs> | null
    /**
     * Filter, which TransactionBlockchain to fetch.
     */
    where?: TransactionBlockchainWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransactionBlockchains to fetch.
     */
    orderBy?: TransactionBlockchainOrderByWithRelationInput | TransactionBlockchainOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TransactionBlockchains.
     */
    cursor?: TransactionBlockchainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransactionBlockchains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransactionBlockchains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TransactionBlockchains.
     */
    distinct?: TransactionBlockchainScalarFieldEnum | TransactionBlockchainScalarFieldEnum[]
  }

  /**
   * TransactionBlockchain findFirstOrThrow
   */
  export type TransactionBlockchainFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionBlockchain
     */
    select?: TransactionBlockchainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionBlockchain
     */
    omit?: TransactionBlockchainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionBlockchainInclude<ExtArgs> | null
    /**
     * Filter, which TransactionBlockchain to fetch.
     */
    where?: TransactionBlockchainWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransactionBlockchains to fetch.
     */
    orderBy?: TransactionBlockchainOrderByWithRelationInput | TransactionBlockchainOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TransactionBlockchains.
     */
    cursor?: TransactionBlockchainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransactionBlockchains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransactionBlockchains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TransactionBlockchains.
     */
    distinct?: TransactionBlockchainScalarFieldEnum | TransactionBlockchainScalarFieldEnum[]
  }

  /**
   * TransactionBlockchain findMany
   */
  export type TransactionBlockchainFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionBlockchain
     */
    select?: TransactionBlockchainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionBlockchain
     */
    omit?: TransactionBlockchainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionBlockchainInclude<ExtArgs> | null
    /**
     * Filter, which TransactionBlockchains to fetch.
     */
    where?: TransactionBlockchainWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransactionBlockchains to fetch.
     */
    orderBy?: TransactionBlockchainOrderByWithRelationInput | TransactionBlockchainOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TransactionBlockchains.
     */
    cursor?: TransactionBlockchainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransactionBlockchains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransactionBlockchains.
     */
    skip?: number
    distinct?: TransactionBlockchainScalarFieldEnum | TransactionBlockchainScalarFieldEnum[]
  }

  /**
   * TransactionBlockchain create
   */
  export type TransactionBlockchainCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionBlockchain
     */
    select?: TransactionBlockchainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionBlockchain
     */
    omit?: TransactionBlockchainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionBlockchainInclude<ExtArgs> | null
    /**
     * The data needed to create a TransactionBlockchain.
     */
    data: XOR<TransactionBlockchainCreateInput, TransactionBlockchainUncheckedCreateInput>
  }

  /**
   * TransactionBlockchain createMany
   */
  export type TransactionBlockchainCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TransactionBlockchains.
     */
    data: TransactionBlockchainCreateManyInput | TransactionBlockchainCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TransactionBlockchain update
   */
  export type TransactionBlockchainUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionBlockchain
     */
    select?: TransactionBlockchainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionBlockchain
     */
    omit?: TransactionBlockchainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionBlockchainInclude<ExtArgs> | null
    /**
     * The data needed to update a TransactionBlockchain.
     */
    data: XOR<TransactionBlockchainUpdateInput, TransactionBlockchainUncheckedUpdateInput>
    /**
     * Choose, which TransactionBlockchain to update.
     */
    where: TransactionBlockchainWhereUniqueInput
  }

  /**
   * TransactionBlockchain updateMany
   */
  export type TransactionBlockchainUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TransactionBlockchains.
     */
    data: XOR<TransactionBlockchainUpdateManyMutationInput, TransactionBlockchainUncheckedUpdateManyInput>
    /**
     * Filter which TransactionBlockchains to update
     */
    where?: TransactionBlockchainWhereInput
    /**
     * Limit how many TransactionBlockchains to update.
     */
    limit?: number
  }

  /**
   * TransactionBlockchain upsert
   */
  export type TransactionBlockchainUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionBlockchain
     */
    select?: TransactionBlockchainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionBlockchain
     */
    omit?: TransactionBlockchainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionBlockchainInclude<ExtArgs> | null
    /**
     * The filter to search for the TransactionBlockchain to update in case it exists.
     */
    where: TransactionBlockchainWhereUniqueInput
    /**
     * In case the TransactionBlockchain found by the `where` argument doesn't exist, create a new TransactionBlockchain with this data.
     */
    create: XOR<TransactionBlockchainCreateInput, TransactionBlockchainUncheckedCreateInput>
    /**
     * In case the TransactionBlockchain was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransactionBlockchainUpdateInput, TransactionBlockchainUncheckedUpdateInput>
  }

  /**
   * TransactionBlockchain delete
   */
  export type TransactionBlockchainDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionBlockchain
     */
    select?: TransactionBlockchainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionBlockchain
     */
    omit?: TransactionBlockchainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionBlockchainInclude<ExtArgs> | null
    /**
     * Filter which TransactionBlockchain to delete.
     */
    where: TransactionBlockchainWhereUniqueInput
  }

  /**
   * TransactionBlockchain deleteMany
   */
  export type TransactionBlockchainDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TransactionBlockchains to delete
     */
    where?: TransactionBlockchainWhereInput
    /**
     * Limit how many TransactionBlockchains to delete.
     */
    limit?: number
  }

  /**
   * TransactionBlockchain.ressource
   */
  export type TransactionBlockchain$ressourceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ressource
     */
    select?: RessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ressource
     */
    omit?: RessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RessourceInclude<ExtArgs> | null
    where?: RessourceWhereInput
  }

  /**
   * TransactionBlockchain.universiteDestinationRel
   */
  export type TransactionBlockchain$universiteDestinationRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Universite
     */
    select?: UniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Universite
     */
    omit?: UniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversiteInclude<ExtArgs> | null
    where?: UniversiteWhereInput
  }

  /**
   * TransactionBlockchain without action
   */
  export type TransactionBlockchainDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionBlockchain
     */
    select?: TransactionBlockchainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionBlockchain
     */
    omit?: TransactionBlockchainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionBlockchainInclude<ExtArgs> | null
  }


  /**
   * Model Ressource
   */

  export type AggregateRessource = {
    _count: RessourceCountAggregateOutputType | null
    _avg: RessourceAvgAggregateOutputType | null
    _sum: RessourceSumAggregateOutputType | null
    _min: RessourceMinAggregateOutputType | null
    _max: RessourceMaxAggregateOutputType | null
  }

  export type RessourceAvgAggregateOutputType = {
    anneePublication: number | null
    nbPages: number | null
    nbExemplaires: number | null
    nbDisponibles: number | null
    dureeMaxEmpruntExterne: number | null
    nbMaxExemplairesExterne: number | null
  }

  export type RessourceSumAggregateOutputType = {
    anneePublication: number | null
    nbPages: number | null
    nbExemplaires: number | null
    nbDisponibles: number | null
    dureeMaxEmpruntExterne: number | null
    nbMaxExemplairesExterne: number | null
  }

  export type RessourceMinAggregateOutputType = {
    id: string | null
    titre: string | null
    description: string | null
    type: $Enums.TypeRessource | null
    langue: string | null
    urlFichier: string | null
    urlFichierLocal: string | null
    format: string | null
    dateCreation: Date | null
    dateModification: Date | null
    estPublique: boolean | null
    motsCles: string | null
    auteurId: string | null
    universiteId: string | null
    image: string | null
    niveauAcces: $Enums.NiveauAcces | null
    datePublication: Date | null
    estValide: boolean | null
    estArchive: boolean | null
    nomAuteurExterne: string | null
    prenomAuteurExterne: string | null
    affiliationAuteurExterne: string | null
    isbn: string | null
    doi: string | null
    edition: string | null
    anneePublication: number | null
    editeur: string | null
    nbPages: number | null
    categorieBiblio: $Enums.CategorieBiblio | null
    estEmpruntable: boolean | null
    nbExemplaires: number | null
    nbDisponibles: number | null
    coteClassification: string | null
    estEmpruntableExterne: boolean | null
    dureeMaxEmpruntExterne: number | null
    nbMaxExemplairesExterne: number | null
    necessiteAutorisation: boolean | null
  }

  export type RessourceMaxAggregateOutputType = {
    id: string | null
    titre: string | null
    description: string | null
    type: $Enums.TypeRessource | null
    langue: string | null
    urlFichier: string | null
    urlFichierLocal: string | null
    format: string | null
    dateCreation: Date | null
    dateModification: Date | null
    estPublique: boolean | null
    motsCles: string | null
    auteurId: string | null
    universiteId: string | null
    image: string | null
    niveauAcces: $Enums.NiveauAcces | null
    datePublication: Date | null
    estValide: boolean | null
    estArchive: boolean | null
    nomAuteurExterne: string | null
    prenomAuteurExterne: string | null
    affiliationAuteurExterne: string | null
    isbn: string | null
    doi: string | null
    edition: string | null
    anneePublication: number | null
    editeur: string | null
    nbPages: number | null
    categorieBiblio: $Enums.CategorieBiblio | null
    estEmpruntable: boolean | null
    nbExemplaires: number | null
    nbDisponibles: number | null
    coteClassification: string | null
    estEmpruntableExterne: boolean | null
    dureeMaxEmpruntExterne: number | null
    nbMaxExemplairesExterne: number | null
    necessiteAutorisation: boolean | null
  }

  export type RessourceCountAggregateOutputType = {
    id: number
    titre: number
    description: number
    type: number
    langue: number
    urlFichier: number
    urlFichierLocal: number
    format: number
    dateCreation: number
    dateModification: number
    estPublique: number
    motsCles: number
    auteurId: number
    universiteId: number
    image: number
    niveauAcces: number
    datePublication: number
    estValide: number
    estArchive: number
    nomAuteurExterne: number
    prenomAuteurExterne: number
    affiliationAuteurExterne: number
    isbn: number
    doi: number
    edition: number
    anneePublication: number
    editeur: number
    nbPages: number
    categorieBiblio: number
    estEmpruntable: number
    nbExemplaires: number
    nbDisponibles: number
    coteClassification: number
    estEmpruntableExterne: number
    dureeMaxEmpruntExterne: number
    nbMaxExemplairesExterne: number
    necessiteAutorisation: number
    _all: number
  }


  export type RessourceAvgAggregateInputType = {
    anneePublication?: true
    nbPages?: true
    nbExemplaires?: true
    nbDisponibles?: true
    dureeMaxEmpruntExterne?: true
    nbMaxExemplairesExterne?: true
  }

  export type RessourceSumAggregateInputType = {
    anneePublication?: true
    nbPages?: true
    nbExemplaires?: true
    nbDisponibles?: true
    dureeMaxEmpruntExterne?: true
    nbMaxExemplairesExterne?: true
  }

  export type RessourceMinAggregateInputType = {
    id?: true
    titre?: true
    description?: true
    type?: true
    langue?: true
    urlFichier?: true
    urlFichierLocal?: true
    format?: true
    dateCreation?: true
    dateModification?: true
    estPublique?: true
    motsCles?: true
    auteurId?: true
    universiteId?: true
    image?: true
    niveauAcces?: true
    datePublication?: true
    estValide?: true
    estArchive?: true
    nomAuteurExterne?: true
    prenomAuteurExterne?: true
    affiliationAuteurExterne?: true
    isbn?: true
    doi?: true
    edition?: true
    anneePublication?: true
    editeur?: true
    nbPages?: true
    categorieBiblio?: true
    estEmpruntable?: true
    nbExemplaires?: true
    nbDisponibles?: true
    coteClassification?: true
    estEmpruntableExterne?: true
    dureeMaxEmpruntExterne?: true
    nbMaxExemplairesExterne?: true
    necessiteAutorisation?: true
  }

  export type RessourceMaxAggregateInputType = {
    id?: true
    titre?: true
    description?: true
    type?: true
    langue?: true
    urlFichier?: true
    urlFichierLocal?: true
    format?: true
    dateCreation?: true
    dateModification?: true
    estPublique?: true
    motsCles?: true
    auteurId?: true
    universiteId?: true
    image?: true
    niveauAcces?: true
    datePublication?: true
    estValide?: true
    estArchive?: true
    nomAuteurExterne?: true
    prenomAuteurExterne?: true
    affiliationAuteurExterne?: true
    isbn?: true
    doi?: true
    edition?: true
    anneePublication?: true
    editeur?: true
    nbPages?: true
    categorieBiblio?: true
    estEmpruntable?: true
    nbExemplaires?: true
    nbDisponibles?: true
    coteClassification?: true
    estEmpruntableExterne?: true
    dureeMaxEmpruntExterne?: true
    nbMaxExemplairesExterne?: true
    necessiteAutorisation?: true
  }

  export type RessourceCountAggregateInputType = {
    id?: true
    titre?: true
    description?: true
    type?: true
    langue?: true
    urlFichier?: true
    urlFichierLocal?: true
    format?: true
    dateCreation?: true
    dateModification?: true
    estPublique?: true
    motsCles?: true
    auteurId?: true
    universiteId?: true
    image?: true
    niveauAcces?: true
    datePublication?: true
    estValide?: true
    estArchive?: true
    nomAuteurExterne?: true
    prenomAuteurExterne?: true
    affiliationAuteurExterne?: true
    isbn?: true
    doi?: true
    edition?: true
    anneePublication?: true
    editeur?: true
    nbPages?: true
    categorieBiblio?: true
    estEmpruntable?: true
    nbExemplaires?: true
    nbDisponibles?: true
    coteClassification?: true
    estEmpruntableExterne?: true
    dureeMaxEmpruntExterne?: true
    nbMaxExemplairesExterne?: true
    necessiteAutorisation?: true
    _all?: true
  }

  export type RessourceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ressource to aggregate.
     */
    where?: RessourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ressources to fetch.
     */
    orderBy?: RessourceOrderByWithRelationInput | RessourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RessourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ressources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ressources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ressources
    **/
    _count?: true | RessourceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RessourceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RessourceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RessourceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RessourceMaxAggregateInputType
  }

  export type GetRessourceAggregateType<T extends RessourceAggregateArgs> = {
        [P in keyof T & keyof AggregateRessource]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRessource[P]>
      : GetScalarType<T[P], AggregateRessource[P]>
  }




  export type RessourceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RessourceWhereInput
    orderBy?: RessourceOrderByWithAggregationInput | RessourceOrderByWithAggregationInput[]
    by: RessourceScalarFieldEnum[] | RessourceScalarFieldEnum
    having?: RessourceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RessourceCountAggregateInputType | true
    _avg?: RessourceAvgAggregateInputType
    _sum?: RessourceSumAggregateInputType
    _min?: RessourceMinAggregateInputType
    _max?: RessourceMaxAggregateInputType
  }

  export type RessourceGroupByOutputType = {
    id: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue: string
    urlFichier: string
    urlFichierLocal: string | null
    format: string
    dateCreation: Date
    dateModification: Date
    estPublique: boolean
    motsCles: string
    auteurId: string | null
    universiteId: string
    image: string | null
    niveauAcces: $Enums.NiveauAcces
    datePublication: Date | null
    estValide: boolean
    estArchive: boolean
    nomAuteurExterne: string | null
    prenomAuteurExterne: string | null
    affiliationAuteurExterne: string | null
    isbn: string | null
    doi: string | null
    edition: string | null
    anneePublication: number | null
    editeur: string | null
    nbPages: number | null
    categorieBiblio: $Enums.CategorieBiblio | null
    estEmpruntable: boolean
    nbExemplaires: number
    nbDisponibles: number
    coteClassification: string | null
    estEmpruntableExterne: boolean
    dureeMaxEmpruntExterne: number
    nbMaxExemplairesExterne: number
    necessiteAutorisation: boolean
    _count: RessourceCountAggregateOutputType | null
    _avg: RessourceAvgAggregateOutputType | null
    _sum: RessourceSumAggregateOutputType | null
    _min: RessourceMinAggregateOutputType | null
    _max: RessourceMaxAggregateOutputType | null
  }

  type GetRessourceGroupByPayload<T extends RessourceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RessourceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RessourceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RessourceGroupByOutputType[P]>
            : GetScalarType<T[P], RessourceGroupByOutputType[P]>
        }
      >
    >


  export type RessourceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titre?: boolean
    description?: boolean
    type?: boolean
    langue?: boolean
    urlFichier?: boolean
    urlFichierLocal?: boolean
    format?: boolean
    dateCreation?: boolean
    dateModification?: boolean
    estPublique?: boolean
    motsCles?: boolean
    auteurId?: boolean
    universiteId?: boolean
    image?: boolean
    niveauAcces?: boolean
    datePublication?: boolean
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: boolean
    prenomAuteurExterne?: boolean
    affiliationAuteurExterne?: boolean
    isbn?: boolean
    doi?: boolean
    edition?: boolean
    anneePublication?: boolean
    editeur?: boolean
    nbPages?: boolean
    categorieBiblio?: boolean
    estEmpruntable?: boolean
    nbExemplaires?: boolean
    nbDisponibles?: boolean
    coteClassification?: boolean
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: boolean
    nbMaxExemplairesExterne?: boolean
    necessiteAutorisation?: boolean
    auteur?: boolean | Ressource$auteurArgs<ExtArgs>
    universite?: boolean | UniversiteDefaultArgs<ExtArgs>
    favoris?: boolean | Ressource$favorisArgs<ExtArgs>
    commentaires?: boolean | Ressource$commentairesArgs<ExtArgs>
    notations?: boolean | Ressource$notationsArgs<ExtArgs>
    historiques?: boolean | Ressource$historiquesArgs<ExtArgs>
    collections?: boolean | Ressource$collectionsArgs<ExtArgs>
    partages?: boolean | Ressource$partagesArgs<ExtArgs>
    exemplaires?: boolean | Ressource$exemplairesArgs<ExtArgs>
    reservations?: boolean | Ressource$reservationsArgs<ExtArgs>
    recommandations?: boolean | Ressource$recommandationsArgs<ExtArgs>
    donneesRecommandation?: boolean | Ressource$donneesRecommandationArgs<ExtArgs>
    transactions?: boolean | Ressource$transactionsArgs<ExtArgs>
    Notification?: boolean | Ressource$NotificationArgs<ExtArgs>
    _count?: boolean | RessourceCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ressource"]>



  export type RessourceSelectScalar = {
    id?: boolean
    titre?: boolean
    description?: boolean
    type?: boolean
    langue?: boolean
    urlFichier?: boolean
    urlFichierLocal?: boolean
    format?: boolean
    dateCreation?: boolean
    dateModification?: boolean
    estPublique?: boolean
    motsCles?: boolean
    auteurId?: boolean
    universiteId?: boolean
    image?: boolean
    niveauAcces?: boolean
    datePublication?: boolean
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: boolean
    prenomAuteurExterne?: boolean
    affiliationAuteurExterne?: boolean
    isbn?: boolean
    doi?: boolean
    edition?: boolean
    anneePublication?: boolean
    editeur?: boolean
    nbPages?: boolean
    categorieBiblio?: boolean
    estEmpruntable?: boolean
    nbExemplaires?: boolean
    nbDisponibles?: boolean
    coteClassification?: boolean
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: boolean
    nbMaxExemplairesExterne?: boolean
    necessiteAutorisation?: boolean
  }

  export type RessourceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "titre" | "description" | "type" | "langue" | "urlFichier" | "urlFichierLocal" | "format" | "dateCreation" | "dateModification" | "estPublique" | "motsCles" | "auteurId" | "universiteId" | "image" | "niveauAcces" | "datePublication" | "estValide" | "estArchive" | "nomAuteurExterne" | "prenomAuteurExterne" | "affiliationAuteurExterne" | "isbn" | "doi" | "edition" | "anneePublication" | "editeur" | "nbPages" | "categorieBiblio" | "estEmpruntable" | "nbExemplaires" | "nbDisponibles" | "coteClassification" | "estEmpruntableExterne" | "dureeMaxEmpruntExterne" | "nbMaxExemplairesExterne" | "necessiteAutorisation", ExtArgs["result"]["ressource"]>
  export type RessourceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auteur?: boolean | Ressource$auteurArgs<ExtArgs>
    universite?: boolean | UniversiteDefaultArgs<ExtArgs>
    favoris?: boolean | Ressource$favorisArgs<ExtArgs>
    commentaires?: boolean | Ressource$commentairesArgs<ExtArgs>
    notations?: boolean | Ressource$notationsArgs<ExtArgs>
    historiques?: boolean | Ressource$historiquesArgs<ExtArgs>
    collections?: boolean | Ressource$collectionsArgs<ExtArgs>
    partages?: boolean | Ressource$partagesArgs<ExtArgs>
    exemplaires?: boolean | Ressource$exemplairesArgs<ExtArgs>
    reservations?: boolean | Ressource$reservationsArgs<ExtArgs>
    recommandations?: boolean | Ressource$recommandationsArgs<ExtArgs>
    donneesRecommandation?: boolean | Ressource$donneesRecommandationArgs<ExtArgs>
    transactions?: boolean | Ressource$transactionsArgs<ExtArgs>
    Notification?: boolean | Ressource$NotificationArgs<ExtArgs>
    _count?: boolean | RessourceCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $RessourcePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Ressource"
    objects: {
      auteur: Prisma.$UserPayload<ExtArgs> | null
      universite: Prisma.$UniversitePayload<ExtArgs>
      favoris: Prisma.$FavoriPayload<ExtArgs>[]
      commentaires: Prisma.$CommentairePayload<ExtArgs>[]
      notations: Prisma.$NotationPayload<ExtArgs>[]
      historiques: Prisma.$HistoriqueAccesPayload<ExtArgs>[]
      collections: Prisma.$CollectionRessourcePayload<ExtArgs>[]
      partages: Prisma.$PartageUniversitePayload<ExtArgs>[]
      exemplaires: Prisma.$ExemplairePhysiquePayload<ExtArgs>[]
      reservations: Prisma.$ReservationPayload<ExtArgs>[]
      recommandations: Prisma.$RecommandationPayload<ExtArgs>[]
      donneesRecommandation: Prisma.$DonneesRecommandationPayload<ExtArgs>[]
      transactions: Prisma.$TransactionBlockchainPayload<ExtArgs>[]
      Notification: Prisma.$NotificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      titre: string
      description: string
      type: $Enums.TypeRessource
      langue: string
      urlFichier: string
      urlFichierLocal: string | null
      format: string
      dateCreation: Date
      dateModification: Date
      estPublique: boolean
      motsCles: string
      auteurId: string | null
      universiteId: string
      image: string | null
      niveauAcces: $Enums.NiveauAcces
      datePublication: Date | null
      estValide: boolean
      estArchive: boolean
      nomAuteurExterne: string | null
      prenomAuteurExterne: string | null
      affiliationAuteurExterne: string | null
      isbn: string | null
      doi: string | null
      edition: string | null
      anneePublication: number | null
      editeur: string | null
      nbPages: number | null
      categorieBiblio: $Enums.CategorieBiblio | null
      estEmpruntable: boolean
      nbExemplaires: number
      nbDisponibles: number
      coteClassification: string | null
      estEmpruntableExterne: boolean
      dureeMaxEmpruntExterne: number
      nbMaxExemplairesExterne: number
      necessiteAutorisation: boolean
    }, ExtArgs["result"]["ressource"]>
    composites: {}
  }

  type RessourceGetPayload<S extends boolean | null | undefined | RessourceDefaultArgs> = $Result.GetResult<Prisma.$RessourcePayload, S>

  type RessourceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RessourceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RessourceCountAggregateInputType | true
    }

  export interface RessourceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Ressource'], meta: { name: 'Ressource' } }
    /**
     * Find zero or one Ressource that matches the filter.
     * @param {RessourceFindUniqueArgs} args - Arguments to find a Ressource
     * @example
     * // Get one Ressource
     * const ressource = await prisma.ressource.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RessourceFindUniqueArgs>(args: SelectSubset<T, RessourceFindUniqueArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ressource that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RessourceFindUniqueOrThrowArgs} args - Arguments to find a Ressource
     * @example
     * // Get one Ressource
     * const ressource = await prisma.ressource.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RessourceFindUniqueOrThrowArgs>(args: SelectSubset<T, RessourceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ressource that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RessourceFindFirstArgs} args - Arguments to find a Ressource
     * @example
     * // Get one Ressource
     * const ressource = await prisma.ressource.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RessourceFindFirstArgs>(args?: SelectSubset<T, RessourceFindFirstArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ressource that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RessourceFindFirstOrThrowArgs} args - Arguments to find a Ressource
     * @example
     * // Get one Ressource
     * const ressource = await prisma.ressource.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RessourceFindFirstOrThrowArgs>(args?: SelectSubset<T, RessourceFindFirstOrThrowArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ressources that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RessourceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ressources
     * const ressources = await prisma.ressource.findMany()
     * 
     * // Get first 10 Ressources
     * const ressources = await prisma.ressource.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ressourceWithIdOnly = await prisma.ressource.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RessourceFindManyArgs>(args?: SelectSubset<T, RessourceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ressource.
     * @param {RessourceCreateArgs} args - Arguments to create a Ressource.
     * @example
     * // Create one Ressource
     * const Ressource = await prisma.ressource.create({
     *   data: {
     *     // ... data to create a Ressource
     *   }
     * })
     * 
     */
    create<T extends RessourceCreateArgs>(args: SelectSubset<T, RessourceCreateArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ressources.
     * @param {RessourceCreateManyArgs} args - Arguments to create many Ressources.
     * @example
     * // Create many Ressources
     * const ressource = await prisma.ressource.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RessourceCreateManyArgs>(args?: SelectSubset<T, RessourceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Ressource.
     * @param {RessourceDeleteArgs} args - Arguments to delete one Ressource.
     * @example
     * // Delete one Ressource
     * const Ressource = await prisma.ressource.delete({
     *   where: {
     *     // ... filter to delete one Ressource
     *   }
     * })
     * 
     */
    delete<T extends RessourceDeleteArgs>(args: SelectSubset<T, RessourceDeleteArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ressource.
     * @param {RessourceUpdateArgs} args - Arguments to update one Ressource.
     * @example
     * // Update one Ressource
     * const ressource = await prisma.ressource.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RessourceUpdateArgs>(args: SelectSubset<T, RessourceUpdateArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ressources.
     * @param {RessourceDeleteManyArgs} args - Arguments to filter Ressources to delete.
     * @example
     * // Delete a few Ressources
     * const { count } = await prisma.ressource.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RessourceDeleteManyArgs>(args?: SelectSubset<T, RessourceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ressources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RessourceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ressources
     * const ressource = await prisma.ressource.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RessourceUpdateManyArgs>(args: SelectSubset<T, RessourceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Ressource.
     * @param {RessourceUpsertArgs} args - Arguments to update or create a Ressource.
     * @example
     * // Update or create a Ressource
     * const ressource = await prisma.ressource.upsert({
     *   create: {
     *     // ... data to create a Ressource
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ressource we want to update
     *   }
     * })
     */
    upsert<T extends RessourceUpsertArgs>(args: SelectSubset<T, RessourceUpsertArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ressources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RessourceCountArgs} args - Arguments to filter Ressources to count.
     * @example
     * // Count the number of Ressources
     * const count = await prisma.ressource.count({
     *   where: {
     *     // ... the filter for the Ressources we want to count
     *   }
     * })
    **/
    count<T extends RessourceCountArgs>(
      args?: Subset<T, RessourceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RessourceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ressource.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RessourceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RessourceAggregateArgs>(args: Subset<T, RessourceAggregateArgs>): Prisma.PrismaPromise<GetRessourceAggregateType<T>>

    /**
     * Group by Ressource.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RessourceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RessourceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RessourceGroupByArgs['orderBy'] }
        : { orderBy?: RessourceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RessourceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRessourceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Ressource model
   */
  readonly fields: RessourceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Ressource.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RessourceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    auteur<T extends Ressource$auteurArgs<ExtArgs> = {}>(args?: Subset<T, Ressource$auteurArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    universite<T extends UniversiteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversiteDefaultArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    favoris<T extends Ressource$favorisArgs<ExtArgs> = {}>(args?: Subset<T, Ressource$favorisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoriPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    commentaires<T extends Ressource$commentairesArgs<ExtArgs> = {}>(args?: Subset<T, Ressource$commentairesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentairePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notations<T extends Ressource$notationsArgs<ExtArgs> = {}>(args?: Subset<T, Ressource$notationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    historiques<T extends Ressource$historiquesArgs<ExtArgs> = {}>(args?: Subset<T, Ressource$historiquesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistoriqueAccesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    collections<T extends Ressource$collectionsArgs<ExtArgs> = {}>(args?: Subset<T, Ressource$collectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CollectionRessourcePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    partages<T extends Ressource$partagesArgs<ExtArgs> = {}>(args?: Subset<T, Ressource$partagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PartageUniversitePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    exemplaires<T extends Ressource$exemplairesArgs<ExtArgs> = {}>(args?: Subset<T, Ressource$exemplairesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExemplairePhysiquePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservations<T extends Ressource$reservationsArgs<ExtArgs> = {}>(args?: Subset<T, Ressource$reservationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    recommandations<T extends Ressource$recommandationsArgs<ExtArgs> = {}>(args?: Subset<T, Ressource$recommandationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RecommandationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    donneesRecommandation<T extends Ressource$donneesRecommandationArgs<ExtArgs> = {}>(args?: Subset<T, Ressource$donneesRecommandationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonneesRecommandationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transactions<T extends Ressource$transactionsArgs<ExtArgs> = {}>(args?: Subset<T, Ressource$transactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionBlockchainPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Notification<T extends Ressource$NotificationArgs<ExtArgs> = {}>(args?: Subset<T, Ressource$NotificationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Ressource model
   */
  interface RessourceFieldRefs {
    readonly id: FieldRef<"Ressource", 'String'>
    readonly titre: FieldRef<"Ressource", 'String'>
    readonly description: FieldRef<"Ressource", 'String'>
    readonly type: FieldRef<"Ressource", 'TypeRessource'>
    readonly langue: FieldRef<"Ressource", 'String'>
    readonly urlFichier: FieldRef<"Ressource", 'String'>
    readonly urlFichierLocal: FieldRef<"Ressource", 'String'>
    readonly format: FieldRef<"Ressource", 'String'>
    readonly dateCreation: FieldRef<"Ressource", 'DateTime'>
    readonly dateModification: FieldRef<"Ressource", 'DateTime'>
    readonly estPublique: FieldRef<"Ressource", 'Boolean'>
    readonly motsCles: FieldRef<"Ressource", 'String'>
    readonly auteurId: FieldRef<"Ressource", 'String'>
    readonly universiteId: FieldRef<"Ressource", 'String'>
    readonly image: FieldRef<"Ressource", 'String'>
    readonly niveauAcces: FieldRef<"Ressource", 'NiveauAcces'>
    readonly datePublication: FieldRef<"Ressource", 'DateTime'>
    readonly estValide: FieldRef<"Ressource", 'Boolean'>
    readonly estArchive: FieldRef<"Ressource", 'Boolean'>
    readonly nomAuteurExterne: FieldRef<"Ressource", 'String'>
    readonly prenomAuteurExterne: FieldRef<"Ressource", 'String'>
    readonly affiliationAuteurExterne: FieldRef<"Ressource", 'String'>
    readonly isbn: FieldRef<"Ressource", 'String'>
    readonly doi: FieldRef<"Ressource", 'String'>
    readonly edition: FieldRef<"Ressource", 'String'>
    readonly anneePublication: FieldRef<"Ressource", 'Int'>
    readonly editeur: FieldRef<"Ressource", 'String'>
    readonly nbPages: FieldRef<"Ressource", 'Int'>
    readonly categorieBiblio: FieldRef<"Ressource", 'CategorieBiblio'>
    readonly estEmpruntable: FieldRef<"Ressource", 'Boolean'>
    readonly nbExemplaires: FieldRef<"Ressource", 'Int'>
    readonly nbDisponibles: FieldRef<"Ressource", 'Int'>
    readonly coteClassification: FieldRef<"Ressource", 'String'>
    readonly estEmpruntableExterne: FieldRef<"Ressource", 'Boolean'>
    readonly dureeMaxEmpruntExterne: FieldRef<"Ressource", 'Int'>
    readonly nbMaxExemplairesExterne: FieldRef<"Ressource", 'Int'>
    readonly necessiteAutorisation: FieldRef<"Ressource", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Ressource findUnique
   */
  export type RessourceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ressource
     */
    select?: RessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ressource
     */
    omit?: RessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RessourceInclude<ExtArgs> | null
    /**
     * Filter, which Ressource to fetch.
     */
    where: RessourceWhereUniqueInput
  }

  /**
   * Ressource findUniqueOrThrow
   */
  export type RessourceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ressource
     */
    select?: RessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ressource
     */
    omit?: RessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RessourceInclude<ExtArgs> | null
    /**
     * Filter, which Ressource to fetch.
     */
    where: RessourceWhereUniqueInput
  }

  /**
   * Ressource findFirst
   */
  export type RessourceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ressource
     */
    select?: RessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ressource
     */
    omit?: RessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RessourceInclude<ExtArgs> | null
    /**
     * Filter, which Ressource to fetch.
     */
    where?: RessourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ressources to fetch.
     */
    orderBy?: RessourceOrderByWithRelationInput | RessourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ressources.
     */
    cursor?: RessourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ressources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ressources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ressources.
     */
    distinct?: RessourceScalarFieldEnum | RessourceScalarFieldEnum[]
  }

  /**
   * Ressource findFirstOrThrow
   */
  export type RessourceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ressource
     */
    select?: RessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ressource
     */
    omit?: RessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RessourceInclude<ExtArgs> | null
    /**
     * Filter, which Ressource to fetch.
     */
    where?: RessourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ressources to fetch.
     */
    orderBy?: RessourceOrderByWithRelationInput | RessourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ressources.
     */
    cursor?: RessourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ressources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ressources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ressources.
     */
    distinct?: RessourceScalarFieldEnum | RessourceScalarFieldEnum[]
  }

  /**
   * Ressource findMany
   */
  export type RessourceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ressource
     */
    select?: RessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ressource
     */
    omit?: RessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RessourceInclude<ExtArgs> | null
    /**
     * Filter, which Ressources to fetch.
     */
    where?: RessourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ressources to fetch.
     */
    orderBy?: RessourceOrderByWithRelationInput | RessourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ressources.
     */
    cursor?: RessourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ressources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ressources.
     */
    skip?: number
    distinct?: RessourceScalarFieldEnum | RessourceScalarFieldEnum[]
  }

  /**
   * Ressource create
   */
  export type RessourceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ressource
     */
    select?: RessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ressource
     */
    omit?: RessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RessourceInclude<ExtArgs> | null
    /**
     * The data needed to create a Ressource.
     */
    data: XOR<RessourceCreateInput, RessourceUncheckedCreateInput>
  }

  /**
   * Ressource createMany
   */
  export type RessourceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ressources.
     */
    data: RessourceCreateManyInput | RessourceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Ressource update
   */
  export type RessourceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ressource
     */
    select?: RessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ressource
     */
    omit?: RessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RessourceInclude<ExtArgs> | null
    /**
     * The data needed to update a Ressource.
     */
    data: XOR<RessourceUpdateInput, RessourceUncheckedUpdateInput>
    /**
     * Choose, which Ressource to update.
     */
    where: RessourceWhereUniqueInput
  }

  /**
   * Ressource updateMany
   */
  export type RessourceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ressources.
     */
    data: XOR<RessourceUpdateManyMutationInput, RessourceUncheckedUpdateManyInput>
    /**
     * Filter which Ressources to update
     */
    where?: RessourceWhereInput
    /**
     * Limit how many Ressources to update.
     */
    limit?: number
  }

  /**
   * Ressource upsert
   */
  export type RessourceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ressource
     */
    select?: RessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ressource
     */
    omit?: RessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RessourceInclude<ExtArgs> | null
    /**
     * The filter to search for the Ressource to update in case it exists.
     */
    where: RessourceWhereUniqueInput
    /**
     * In case the Ressource found by the `where` argument doesn't exist, create a new Ressource with this data.
     */
    create: XOR<RessourceCreateInput, RessourceUncheckedCreateInput>
    /**
     * In case the Ressource was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RessourceUpdateInput, RessourceUncheckedUpdateInput>
  }

  /**
   * Ressource delete
   */
  export type RessourceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ressource
     */
    select?: RessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ressource
     */
    omit?: RessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RessourceInclude<ExtArgs> | null
    /**
     * Filter which Ressource to delete.
     */
    where: RessourceWhereUniqueInput
  }

  /**
   * Ressource deleteMany
   */
  export type RessourceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ressources to delete
     */
    where?: RessourceWhereInput
    /**
     * Limit how many Ressources to delete.
     */
    limit?: number
  }

  /**
   * Ressource.auteur
   */
  export type Ressource$auteurArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Ressource.favoris
   */
  export type Ressource$favorisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favori
     */
    select?: FavoriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favori
     */
    omit?: FavoriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriInclude<ExtArgs> | null
    where?: FavoriWhereInput
    orderBy?: FavoriOrderByWithRelationInput | FavoriOrderByWithRelationInput[]
    cursor?: FavoriWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriScalarFieldEnum | FavoriScalarFieldEnum[]
  }

  /**
   * Ressource.commentaires
   */
  export type Ressource$commentairesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commentaire
     */
    select?: CommentaireSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commentaire
     */
    omit?: CommentaireOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentaireInclude<ExtArgs> | null
    where?: CommentaireWhereInput
    orderBy?: CommentaireOrderByWithRelationInput | CommentaireOrderByWithRelationInput[]
    cursor?: CommentaireWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentaireScalarFieldEnum | CommentaireScalarFieldEnum[]
  }

  /**
   * Ressource.notations
   */
  export type Ressource$notationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notation
     */
    select?: NotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notation
     */
    omit?: NotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotationInclude<ExtArgs> | null
    where?: NotationWhereInput
    orderBy?: NotationOrderByWithRelationInput | NotationOrderByWithRelationInput[]
    cursor?: NotationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotationScalarFieldEnum | NotationScalarFieldEnum[]
  }

  /**
   * Ressource.historiques
   */
  export type Ressource$historiquesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoriqueAcces
     */
    select?: HistoriqueAccesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoriqueAcces
     */
    omit?: HistoriqueAccesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoriqueAccesInclude<ExtArgs> | null
    where?: HistoriqueAccesWhereInput
    orderBy?: HistoriqueAccesOrderByWithRelationInput | HistoriqueAccesOrderByWithRelationInput[]
    cursor?: HistoriqueAccesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistoriqueAccesScalarFieldEnum | HistoriqueAccesScalarFieldEnum[]
  }

  /**
   * Ressource.collections
   */
  export type Ressource$collectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CollectionRessource
     */
    select?: CollectionRessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CollectionRessource
     */
    omit?: CollectionRessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionRessourceInclude<ExtArgs> | null
    where?: CollectionRessourceWhereInput
    orderBy?: CollectionRessourceOrderByWithRelationInput | CollectionRessourceOrderByWithRelationInput[]
    cursor?: CollectionRessourceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CollectionRessourceScalarFieldEnum | CollectionRessourceScalarFieldEnum[]
  }

  /**
   * Ressource.partages
   */
  export type Ressource$partagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PartageUniversite
     */
    select?: PartageUniversiteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PartageUniversite
     */
    omit?: PartageUniversiteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PartageUniversiteInclude<ExtArgs> | null
    where?: PartageUniversiteWhereInput
    orderBy?: PartageUniversiteOrderByWithRelationInput | PartageUniversiteOrderByWithRelationInput[]
    cursor?: PartageUniversiteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PartageUniversiteScalarFieldEnum | PartageUniversiteScalarFieldEnum[]
  }

  /**
   * Ressource.exemplaires
   */
  export type Ressource$exemplairesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExemplairePhysique
     */
    select?: ExemplairePhysiqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExemplairePhysique
     */
    omit?: ExemplairePhysiqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExemplairePhysiqueInclude<ExtArgs> | null
    where?: ExemplairePhysiqueWhereInput
    orderBy?: ExemplairePhysiqueOrderByWithRelationInput | ExemplairePhysiqueOrderByWithRelationInput[]
    cursor?: ExemplairePhysiqueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExemplairePhysiqueScalarFieldEnum | ExemplairePhysiqueScalarFieldEnum[]
  }

  /**
   * Ressource.reservations
   */
  export type Ressource$reservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    where?: ReservationWhereInput
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    cursor?: ReservationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Ressource.recommandations
   */
  export type Ressource$recommandationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recommandation
     */
    select?: RecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recommandation
     */
    omit?: RecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecommandationInclude<ExtArgs> | null
    where?: RecommandationWhereInput
    orderBy?: RecommandationOrderByWithRelationInput | RecommandationOrderByWithRelationInput[]
    cursor?: RecommandationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RecommandationScalarFieldEnum | RecommandationScalarFieldEnum[]
  }

  /**
   * Ressource.donneesRecommandation
   */
  export type Ressource$donneesRecommandationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonneesRecommandation
     */
    select?: DonneesRecommandationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonneesRecommandation
     */
    omit?: DonneesRecommandationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonneesRecommandationInclude<ExtArgs> | null
    where?: DonneesRecommandationWhereInput
    orderBy?: DonneesRecommandationOrderByWithRelationInput | DonneesRecommandationOrderByWithRelationInput[]
    cursor?: DonneesRecommandationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DonneesRecommandationScalarFieldEnum | DonneesRecommandationScalarFieldEnum[]
  }

  /**
   * Ressource.transactions
   */
  export type Ressource$transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionBlockchain
     */
    select?: TransactionBlockchainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionBlockchain
     */
    omit?: TransactionBlockchainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionBlockchainInclude<ExtArgs> | null
    where?: TransactionBlockchainWhereInput
    orderBy?: TransactionBlockchainOrderByWithRelationInput | TransactionBlockchainOrderByWithRelationInput[]
    cursor?: TransactionBlockchainWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionBlockchainScalarFieldEnum | TransactionBlockchainScalarFieldEnum[]
  }

  /**
   * Ressource.Notification
   */
  export type Ressource$NotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Ressource without action
   */
  export type RessourceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ressource
     */
    select?: RessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ressource
     */
    omit?: RessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RessourceInclude<ExtArgs> | null
  }


  /**
   * Model StatistiqueBibliotheque
   */

  export type AggregateStatistiqueBibliotheque = {
    _count: StatistiqueBibliothequeCountAggregateOutputType | null
    _avg: StatistiqueBibliothequeAvgAggregateOutputType | null
    _sum: StatistiqueBibliothequeSumAggregateOutputType | null
    _min: StatistiqueBibliothequeMinAggregateOutputType | null
    _max: StatistiqueBibliothequeMaxAggregateOutputType | null
  }

  export type StatistiqueBibliothequeAvgAggregateOutputType = {
    mois: number | null
    annee: number | null
    nbEmprunts: number | null
    nbEmpruntsExternes: number | null
    nbReservations: number | null
    nbReservationsExternes: number | null
    nbRetardsRendu: number | null
    tauxRotation: number | null
  }

  export type StatistiqueBibliothequeSumAggregateOutputType = {
    mois: number | null
    annee: number | null
    nbEmprunts: number | null
    nbEmpruntsExternes: number | null
    nbReservations: number | null
    nbReservationsExternes: number | null
    nbRetardsRendu: number | null
    tauxRotation: number | null
  }

  export type StatistiqueBibliothequeMinAggregateOutputType = {
    id: string | null
    universiteId: string | null
    mois: number | null
    annee: number | null
    nbEmprunts: number | null
    nbEmpruntsExternes: number | null
    nbReservations: number | null
    nbReservationsExternes: number | null
    nbRetardsRendu: number | null
    tauxRotation: number | null
    categoriesPlusEmpruntees: string | null
    universitesPlusFrequentes: string | null
  }

  export type StatistiqueBibliothequeMaxAggregateOutputType = {
    id: string | null
    universiteId: string | null
    mois: number | null
    annee: number | null
    nbEmprunts: number | null
    nbEmpruntsExternes: number | null
    nbReservations: number | null
    nbReservationsExternes: number | null
    nbRetardsRendu: number | null
    tauxRotation: number | null
    categoriesPlusEmpruntees: string | null
    universitesPlusFrequentes: string | null
  }

  export type StatistiqueBibliothequeCountAggregateOutputType = {
    id: number
    universiteId: number
    mois: number
    annee: number
    nbEmprunts: number
    nbEmpruntsExternes: number
    nbReservations: number
    nbReservationsExternes: number
    nbRetardsRendu: number
    tauxRotation: number
    categoriesPlusEmpruntees: number
    universitesPlusFrequentes: number
    _all: number
  }


  export type StatistiqueBibliothequeAvgAggregateInputType = {
    mois?: true
    annee?: true
    nbEmprunts?: true
    nbEmpruntsExternes?: true
    nbReservations?: true
    nbReservationsExternes?: true
    nbRetardsRendu?: true
    tauxRotation?: true
  }

  export type StatistiqueBibliothequeSumAggregateInputType = {
    mois?: true
    annee?: true
    nbEmprunts?: true
    nbEmpruntsExternes?: true
    nbReservations?: true
    nbReservationsExternes?: true
    nbRetardsRendu?: true
    tauxRotation?: true
  }

  export type StatistiqueBibliothequeMinAggregateInputType = {
    id?: true
    universiteId?: true
    mois?: true
    annee?: true
    nbEmprunts?: true
    nbEmpruntsExternes?: true
    nbReservations?: true
    nbReservationsExternes?: true
    nbRetardsRendu?: true
    tauxRotation?: true
    categoriesPlusEmpruntees?: true
    universitesPlusFrequentes?: true
  }

  export type StatistiqueBibliothequeMaxAggregateInputType = {
    id?: true
    universiteId?: true
    mois?: true
    annee?: true
    nbEmprunts?: true
    nbEmpruntsExternes?: true
    nbReservations?: true
    nbReservationsExternes?: true
    nbRetardsRendu?: true
    tauxRotation?: true
    categoriesPlusEmpruntees?: true
    universitesPlusFrequentes?: true
  }

  export type StatistiqueBibliothequeCountAggregateInputType = {
    id?: true
    universiteId?: true
    mois?: true
    annee?: true
    nbEmprunts?: true
    nbEmpruntsExternes?: true
    nbReservations?: true
    nbReservationsExternes?: true
    nbRetardsRendu?: true
    tauxRotation?: true
    categoriesPlusEmpruntees?: true
    universitesPlusFrequentes?: true
    _all?: true
  }

  export type StatistiqueBibliothequeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StatistiqueBibliotheque to aggregate.
     */
    where?: StatistiqueBibliothequeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StatistiqueBibliotheques to fetch.
     */
    orderBy?: StatistiqueBibliothequeOrderByWithRelationInput | StatistiqueBibliothequeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StatistiqueBibliothequeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StatistiqueBibliotheques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StatistiqueBibliotheques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StatistiqueBibliotheques
    **/
    _count?: true | StatistiqueBibliothequeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StatistiqueBibliothequeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StatistiqueBibliothequeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StatistiqueBibliothequeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StatistiqueBibliothequeMaxAggregateInputType
  }

  export type GetStatistiqueBibliothequeAggregateType<T extends StatistiqueBibliothequeAggregateArgs> = {
        [P in keyof T & keyof AggregateStatistiqueBibliotheque]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStatistiqueBibliotheque[P]>
      : GetScalarType<T[P], AggregateStatistiqueBibliotheque[P]>
  }




  export type StatistiqueBibliothequeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StatistiqueBibliothequeWhereInput
    orderBy?: StatistiqueBibliothequeOrderByWithAggregationInput | StatistiqueBibliothequeOrderByWithAggregationInput[]
    by: StatistiqueBibliothequeScalarFieldEnum[] | StatistiqueBibliothequeScalarFieldEnum
    having?: StatistiqueBibliothequeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StatistiqueBibliothequeCountAggregateInputType | true
    _avg?: StatistiqueBibliothequeAvgAggregateInputType
    _sum?: StatistiqueBibliothequeSumAggregateInputType
    _min?: StatistiqueBibliothequeMinAggregateInputType
    _max?: StatistiqueBibliothequeMaxAggregateInputType
  }

  export type StatistiqueBibliothequeGroupByOutputType = {
    id: string
    universiteId: string
    mois: number
    annee: number
    nbEmprunts: number
    nbEmpruntsExternes: number
    nbReservations: number
    nbReservationsExternes: number
    nbRetardsRendu: number
    tauxRotation: number | null
    categoriesPlusEmpruntees: string | null
    universitesPlusFrequentes: string | null
    _count: StatistiqueBibliothequeCountAggregateOutputType | null
    _avg: StatistiqueBibliothequeAvgAggregateOutputType | null
    _sum: StatistiqueBibliothequeSumAggregateOutputType | null
    _min: StatistiqueBibliothequeMinAggregateOutputType | null
    _max: StatistiqueBibliothequeMaxAggregateOutputType | null
  }

  type GetStatistiqueBibliothequeGroupByPayload<T extends StatistiqueBibliothequeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StatistiqueBibliothequeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StatistiqueBibliothequeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StatistiqueBibliothequeGroupByOutputType[P]>
            : GetScalarType<T[P], StatistiqueBibliothequeGroupByOutputType[P]>
        }
      >
    >


  export type StatistiqueBibliothequeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universiteId?: boolean
    mois?: boolean
    annee?: boolean
    nbEmprunts?: boolean
    nbEmpruntsExternes?: boolean
    nbReservations?: boolean
    nbReservationsExternes?: boolean
    nbRetardsRendu?: boolean
    tauxRotation?: boolean
    categoriesPlusEmpruntees?: boolean
    universitesPlusFrequentes?: boolean
    universite?: boolean | UniversiteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["statistiqueBibliotheque"]>



  export type StatistiqueBibliothequeSelectScalar = {
    id?: boolean
    universiteId?: boolean
    mois?: boolean
    annee?: boolean
    nbEmprunts?: boolean
    nbEmpruntsExternes?: boolean
    nbReservations?: boolean
    nbReservationsExternes?: boolean
    nbRetardsRendu?: boolean
    tauxRotation?: boolean
    categoriesPlusEmpruntees?: boolean
    universitesPlusFrequentes?: boolean
  }

  export type StatistiqueBibliothequeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "universiteId" | "mois" | "annee" | "nbEmprunts" | "nbEmpruntsExternes" | "nbReservations" | "nbReservationsExternes" | "nbRetardsRendu" | "tauxRotation" | "categoriesPlusEmpruntees" | "universitesPlusFrequentes", ExtArgs["result"]["statistiqueBibliotheque"]>
  export type StatistiqueBibliothequeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    universite?: boolean | UniversiteDefaultArgs<ExtArgs>
  }

  export type $StatistiqueBibliothequePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StatistiqueBibliotheque"
    objects: {
      universite: Prisma.$UniversitePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      universiteId: string
      mois: number
      annee: number
      nbEmprunts: number
      nbEmpruntsExternes: number
      nbReservations: number
      nbReservationsExternes: number
      nbRetardsRendu: number
      tauxRotation: number | null
      categoriesPlusEmpruntees: string | null
      universitesPlusFrequentes: string | null
    }, ExtArgs["result"]["statistiqueBibliotheque"]>
    composites: {}
  }

  type StatistiqueBibliothequeGetPayload<S extends boolean | null | undefined | StatistiqueBibliothequeDefaultArgs> = $Result.GetResult<Prisma.$StatistiqueBibliothequePayload, S>

  type StatistiqueBibliothequeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StatistiqueBibliothequeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StatistiqueBibliothequeCountAggregateInputType | true
    }

  export interface StatistiqueBibliothequeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StatistiqueBibliotheque'], meta: { name: 'StatistiqueBibliotheque' } }
    /**
     * Find zero or one StatistiqueBibliotheque that matches the filter.
     * @param {StatistiqueBibliothequeFindUniqueArgs} args - Arguments to find a StatistiqueBibliotheque
     * @example
     * // Get one StatistiqueBibliotheque
     * const statistiqueBibliotheque = await prisma.statistiqueBibliotheque.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StatistiqueBibliothequeFindUniqueArgs>(args: SelectSubset<T, StatistiqueBibliothequeFindUniqueArgs<ExtArgs>>): Prisma__StatistiqueBibliothequeClient<$Result.GetResult<Prisma.$StatistiqueBibliothequePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one StatistiqueBibliotheque that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StatistiqueBibliothequeFindUniqueOrThrowArgs} args - Arguments to find a StatistiqueBibliotheque
     * @example
     * // Get one StatistiqueBibliotheque
     * const statistiqueBibliotheque = await prisma.statistiqueBibliotheque.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StatistiqueBibliothequeFindUniqueOrThrowArgs>(args: SelectSubset<T, StatistiqueBibliothequeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StatistiqueBibliothequeClient<$Result.GetResult<Prisma.$StatistiqueBibliothequePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StatistiqueBibliotheque that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatistiqueBibliothequeFindFirstArgs} args - Arguments to find a StatistiqueBibliotheque
     * @example
     * // Get one StatistiqueBibliotheque
     * const statistiqueBibliotheque = await prisma.statistiqueBibliotheque.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StatistiqueBibliothequeFindFirstArgs>(args?: SelectSubset<T, StatistiqueBibliothequeFindFirstArgs<ExtArgs>>): Prisma__StatistiqueBibliothequeClient<$Result.GetResult<Prisma.$StatistiqueBibliothequePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StatistiqueBibliotheque that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatistiqueBibliothequeFindFirstOrThrowArgs} args - Arguments to find a StatistiqueBibliotheque
     * @example
     * // Get one StatistiqueBibliotheque
     * const statistiqueBibliotheque = await prisma.statistiqueBibliotheque.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StatistiqueBibliothequeFindFirstOrThrowArgs>(args?: SelectSubset<T, StatistiqueBibliothequeFindFirstOrThrowArgs<ExtArgs>>): Prisma__StatistiqueBibliothequeClient<$Result.GetResult<Prisma.$StatistiqueBibliothequePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more StatistiqueBibliotheques that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatistiqueBibliothequeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StatistiqueBibliotheques
     * const statistiqueBibliotheques = await prisma.statistiqueBibliotheque.findMany()
     * 
     * // Get first 10 StatistiqueBibliotheques
     * const statistiqueBibliotheques = await prisma.statistiqueBibliotheque.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const statistiqueBibliothequeWithIdOnly = await prisma.statistiqueBibliotheque.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StatistiqueBibliothequeFindManyArgs>(args?: SelectSubset<T, StatistiqueBibliothequeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StatistiqueBibliothequePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a StatistiqueBibliotheque.
     * @param {StatistiqueBibliothequeCreateArgs} args - Arguments to create a StatistiqueBibliotheque.
     * @example
     * // Create one StatistiqueBibliotheque
     * const StatistiqueBibliotheque = await prisma.statistiqueBibliotheque.create({
     *   data: {
     *     // ... data to create a StatistiqueBibliotheque
     *   }
     * })
     * 
     */
    create<T extends StatistiqueBibliothequeCreateArgs>(args: SelectSubset<T, StatistiqueBibliothequeCreateArgs<ExtArgs>>): Prisma__StatistiqueBibliothequeClient<$Result.GetResult<Prisma.$StatistiqueBibliothequePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many StatistiqueBibliotheques.
     * @param {StatistiqueBibliothequeCreateManyArgs} args - Arguments to create many StatistiqueBibliotheques.
     * @example
     * // Create many StatistiqueBibliotheques
     * const statistiqueBibliotheque = await prisma.statistiqueBibliotheque.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StatistiqueBibliothequeCreateManyArgs>(args?: SelectSubset<T, StatistiqueBibliothequeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a StatistiqueBibliotheque.
     * @param {StatistiqueBibliothequeDeleteArgs} args - Arguments to delete one StatistiqueBibliotheque.
     * @example
     * // Delete one StatistiqueBibliotheque
     * const StatistiqueBibliotheque = await prisma.statistiqueBibliotheque.delete({
     *   where: {
     *     // ... filter to delete one StatistiqueBibliotheque
     *   }
     * })
     * 
     */
    delete<T extends StatistiqueBibliothequeDeleteArgs>(args: SelectSubset<T, StatistiqueBibliothequeDeleteArgs<ExtArgs>>): Prisma__StatistiqueBibliothequeClient<$Result.GetResult<Prisma.$StatistiqueBibliothequePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one StatistiqueBibliotheque.
     * @param {StatistiqueBibliothequeUpdateArgs} args - Arguments to update one StatistiqueBibliotheque.
     * @example
     * // Update one StatistiqueBibliotheque
     * const statistiqueBibliotheque = await prisma.statistiqueBibliotheque.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StatistiqueBibliothequeUpdateArgs>(args: SelectSubset<T, StatistiqueBibliothequeUpdateArgs<ExtArgs>>): Prisma__StatistiqueBibliothequeClient<$Result.GetResult<Prisma.$StatistiqueBibliothequePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more StatistiqueBibliotheques.
     * @param {StatistiqueBibliothequeDeleteManyArgs} args - Arguments to filter StatistiqueBibliotheques to delete.
     * @example
     * // Delete a few StatistiqueBibliotheques
     * const { count } = await prisma.statistiqueBibliotheque.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StatistiqueBibliothequeDeleteManyArgs>(args?: SelectSubset<T, StatistiqueBibliothequeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StatistiqueBibliotheques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatistiqueBibliothequeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StatistiqueBibliotheques
     * const statistiqueBibliotheque = await prisma.statistiqueBibliotheque.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StatistiqueBibliothequeUpdateManyArgs>(args: SelectSubset<T, StatistiqueBibliothequeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one StatistiqueBibliotheque.
     * @param {StatistiqueBibliothequeUpsertArgs} args - Arguments to update or create a StatistiqueBibliotheque.
     * @example
     * // Update or create a StatistiqueBibliotheque
     * const statistiqueBibliotheque = await prisma.statistiqueBibliotheque.upsert({
     *   create: {
     *     // ... data to create a StatistiqueBibliotheque
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StatistiqueBibliotheque we want to update
     *   }
     * })
     */
    upsert<T extends StatistiqueBibliothequeUpsertArgs>(args: SelectSubset<T, StatistiqueBibliothequeUpsertArgs<ExtArgs>>): Prisma__StatistiqueBibliothequeClient<$Result.GetResult<Prisma.$StatistiqueBibliothequePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of StatistiqueBibliotheques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatistiqueBibliothequeCountArgs} args - Arguments to filter StatistiqueBibliotheques to count.
     * @example
     * // Count the number of StatistiqueBibliotheques
     * const count = await prisma.statistiqueBibliotheque.count({
     *   where: {
     *     // ... the filter for the StatistiqueBibliotheques we want to count
     *   }
     * })
    **/
    count<T extends StatistiqueBibliothequeCountArgs>(
      args?: Subset<T, StatistiqueBibliothequeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StatistiqueBibliothequeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StatistiqueBibliotheque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatistiqueBibliothequeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StatistiqueBibliothequeAggregateArgs>(args: Subset<T, StatistiqueBibliothequeAggregateArgs>): Prisma.PrismaPromise<GetStatistiqueBibliothequeAggregateType<T>>

    /**
     * Group by StatistiqueBibliotheque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatistiqueBibliothequeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StatistiqueBibliothequeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StatistiqueBibliothequeGroupByArgs['orderBy'] }
        : { orderBy?: StatistiqueBibliothequeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StatistiqueBibliothequeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStatistiqueBibliothequeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StatistiqueBibliotheque model
   */
  readonly fields: StatistiqueBibliothequeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StatistiqueBibliotheque.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StatistiqueBibliothequeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    universite<T extends UniversiteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversiteDefaultArgs<ExtArgs>>): Prisma__UniversiteClient<$Result.GetResult<Prisma.$UniversitePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StatistiqueBibliotheque model
   */
  interface StatistiqueBibliothequeFieldRefs {
    readonly id: FieldRef<"StatistiqueBibliotheque", 'String'>
    readonly universiteId: FieldRef<"StatistiqueBibliotheque", 'String'>
    readonly mois: FieldRef<"StatistiqueBibliotheque", 'Int'>
    readonly annee: FieldRef<"StatistiqueBibliotheque", 'Int'>
    readonly nbEmprunts: FieldRef<"StatistiqueBibliotheque", 'Int'>
    readonly nbEmpruntsExternes: FieldRef<"StatistiqueBibliotheque", 'Int'>
    readonly nbReservations: FieldRef<"StatistiqueBibliotheque", 'Int'>
    readonly nbReservationsExternes: FieldRef<"StatistiqueBibliotheque", 'Int'>
    readonly nbRetardsRendu: FieldRef<"StatistiqueBibliotheque", 'Int'>
    readonly tauxRotation: FieldRef<"StatistiqueBibliotheque", 'Float'>
    readonly categoriesPlusEmpruntees: FieldRef<"StatistiqueBibliotheque", 'String'>
    readonly universitesPlusFrequentes: FieldRef<"StatistiqueBibliotheque", 'String'>
  }
    

  // Custom InputTypes
  /**
   * StatistiqueBibliotheque findUnique
   */
  export type StatistiqueBibliothequeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueBibliotheque
     */
    select?: StatistiqueBibliothequeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueBibliotheque
     */
    omit?: StatistiqueBibliothequeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueBibliothequeInclude<ExtArgs> | null
    /**
     * Filter, which StatistiqueBibliotheque to fetch.
     */
    where: StatistiqueBibliothequeWhereUniqueInput
  }

  /**
   * StatistiqueBibliotheque findUniqueOrThrow
   */
  export type StatistiqueBibliothequeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueBibliotheque
     */
    select?: StatistiqueBibliothequeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueBibliotheque
     */
    omit?: StatistiqueBibliothequeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueBibliothequeInclude<ExtArgs> | null
    /**
     * Filter, which StatistiqueBibliotheque to fetch.
     */
    where: StatistiqueBibliothequeWhereUniqueInput
  }

  /**
   * StatistiqueBibliotheque findFirst
   */
  export type StatistiqueBibliothequeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueBibliotheque
     */
    select?: StatistiqueBibliothequeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueBibliotheque
     */
    omit?: StatistiqueBibliothequeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueBibliothequeInclude<ExtArgs> | null
    /**
     * Filter, which StatistiqueBibliotheque to fetch.
     */
    where?: StatistiqueBibliothequeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StatistiqueBibliotheques to fetch.
     */
    orderBy?: StatistiqueBibliothequeOrderByWithRelationInput | StatistiqueBibliothequeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StatistiqueBibliotheques.
     */
    cursor?: StatistiqueBibliothequeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StatistiqueBibliotheques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StatistiqueBibliotheques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StatistiqueBibliotheques.
     */
    distinct?: StatistiqueBibliothequeScalarFieldEnum | StatistiqueBibliothequeScalarFieldEnum[]
  }

  /**
   * StatistiqueBibliotheque findFirstOrThrow
   */
  export type StatistiqueBibliothequeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueBibliotheque
     */
    select?: StatistiqueBibliothequeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueBibliotheque
     */
    omit?: StatistiqueBibliothequeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueBibliothequeInclude<ExtArgs> | null
    /**
     * Filter, which StatistiqueBibliotheque to fetch.
     */
    where?: StatistiqueBibliothequeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StatistiqueBibliotheques to fetch.
     */
    orderBy?: StatistiqueBibliothequeOrderByWithRelationInput | StatistiqueBibliothequeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StatistiqueBibliotheques.
     */
    cursor?: StatistiqueBibliothequeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StatistiqueBibliotheques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StatistiqueBibliotheques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StatistiqueBibliotheques.
     */
    distinct?: StatistiqueBibliothequeScalarFieldEnum | StatistiqueBibliothequeScalarFieldEnum[]
  }

  /**
   * StatistiqueBibliotheque findMany
   */
  export type StatistiqueBibliothequeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueBibliotheque
     */
    select?: StatistiqueBibliothequeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueBibliotheque
     */
    omit?: StatistiqueBibliothequeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueBibliothequeInclude<ExtArgs> | null
    /**
     * Filter, which StatistiqueBibliotheques to fetch.
     */
    where?: StatistiqueBibliothequeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StatistiqueBibliotheques to fetch.
     */
    orderBy?: StatistiqueBibliothequeOrderByWithRelationInput | StatistiqueBibliothequeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StatistiqueBibliotheques.
     */
    cursor?: StatistiqueBibliothequeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StatistiqueBibliotheques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StatistiqueBibliotheques.
     */
    skip?: number
    distinct?: StatistiqueBibliothequeScalarFieldEnum | StatistiqueBibliothequeScalarFieldEnum[]
  }

  /**
   * StatistiqueBibliotheque create
   */
  export type StatistiqueBibliothequeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueBibliotheque
     */
    select?: StatistiqueBibliothequeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueBibliotheque
     */
    omit?: StatistiqueBibliothequeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueBibliothequeInclude<ExtArgs> | null
    /**
     * The data needed to create a StatistiqueBibliotheque.
     */
    data: XOR<StatistiqueBibliothequeCreateInput, StatistiqueBibliothequeUncheckedCreateInput>
  }

  /**
   * StatistiqueBibliotheque createMany
   */
  export type StatistiqueBibliothequeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StatistiqueBibliotheques.
     */
    data: StatistiqueBibliothequeCreateManyInput | StatistiqueBibliothequeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StatistiqueBibliotheque update
   */
  export type StatistiqueBibliothequeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueBibliotheque
     */
    select?: StatistiqueBibliothequeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueBibliotheque
     */
    omit?: StatistiqueBibliothequeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueBibliothequeInclude<ExtArgs> | null
    /**
     * The data needed to update a StatistiqueBibliotheque.
     */
    data: XOR<StatistiqueBibliothequeUpdateInput, StatistiqueBibliothequeUncheckedUpdateInput>
    /**
     * Choose, which StatistiqueBibliotheque to update.
     */
    where: StatistiqueBibliothequeWhereUniqueInput
  }

  /**
   * StatistiqueBibliotheque updateMany
   */
  export type StatistiqueBibliothequeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StatistiqueBibliotheques.
     */
    data: XOR<StatistiqueBibliothequeUpdateManyMutationInput, StatistiqueBibliothequeUncheckedUpdateManyInput>
    /**
     * Filter which StatistiqueBibliotheques to update
     */
    where?: StatistiqueBibliothequeWhereInput
    /**
     * Limit how many StatistiqueBibliotheques to update.
     */
    limit?: number
  }

  /**
   * StatistiqueBibliotheque upsert
   */
  export type StatistiqueBibliothequeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueBibliotheque
     */
    select?: StatistiqueBibliothequeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueBibliotheque
     */
    omit?: StatistiqueBibliothequeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueBibliothequeInclude<ExtArgs> | null
    /**
     * The filter to search for the StatistiqueBibliotheque to update in case it exists.
     */
    where: StatistiqueBibliothequeWhereUniqueInput
    /**
     * In case the StatistiqueBibliotheque found by the `where` argument doesn't exist, create a new StatistiqueBibliotheque with this data.
     */
    create: XOR<StatistiqueBibliothequeCreateInput, StatistiqueBibliothequeUncheckedCreateInput>
    /**
     * In case the StatistiqueBibliotheque was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StatistiqueBibliothequeUpdateInput, StatistiqueBibliothequeUncheckedUpdateInput>
  }

  /**
   * StatistiqueBibliotheque delete
   */
  export type StatistiqueBibliothequeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueBibliotheque
     */
    select?: StatistiqueBibliothequeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueBibliotheque
     */
    omit?: StatistiqueBibliothequeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueBibliothequeInclude<ExtArgs> | null
    /**
     * Filter which StatistiqueBibliotheque to delete.
     */
    where: StatistiqueBibliothequeWhereUniqueInput
  }

  /**
   * StatistiqueBibliotheque deleteMany
   */
  export type StatistiqueBibliothequeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StatistiqueBibliotheques to delete
     */
    where?: StatistiqueBibliothequeWhereInput
    /**
     * Limit how many StatistiqueBibliotheques to delete.
     */
    limit?: number
  }

  /**
   * StatistiqueBibliotheque without action
   */
  export type StatistiqueBibliothequeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatistiqueBibliotheque
     */
    select?: StatistiqueBibliothequeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatistiqueBibliotheque
     */
    omit?: StatistiqueBibliothequeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatistiqueBibliothequeInclude<ExtArgs> | null
  }


  /**
   * Model Notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationMinAggregateOutputType = {
    id: string | null
    userId: string | null
    titre: string | null
    message: string | null
    dateCreation: Date | null
    estLue: boolean | null
    typeNotification: $Enums.TypeNotification | null
    ressourceId: string | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    titre: string | null
    message: string | null
    dateCreation: Date | null
    estLue: boolean | null
    typeNotification: $Enums.TypeNotification | null
    ressourceId: string | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    userId: number
    titre: number
    message: number
    dateCreation: number
    estLue: number
    typeNotification: number
    ressourceId: number
    _all: number
  }


  export type NotificationMinAggregateInputType = {
    id?: true
    userId?: true
    titre?: true
    message?: true
    dateCreation?: true
    estLue?: true
    typeNotification?: true
    ressourceId?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    userId?: true
    titre?: true
    message?: true
    dateCreation?: true
    estLue?: true
    typeNotification?: true
    ressourceId?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    userId?: true
    titre?: true
    message?: true
    dateCreation?: true
    estLue?: true
    typeNotification?: true
    ressourceId?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notification to aggregate.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type NotificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithAggregationInput | NotificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: NotificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    id: string
    userId: string
    titre: string
    message: string
    dateCreation: Date
    estLue: boolean
    typeNotification: $Enums.TypeNotification
    ressourceId: string | null
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends NotificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type NotificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    titre?: boolean
    message?: boolean
    dateCreation?: boolean
    estLue?: boolean
    typeNotification?: boolean
    ressourceId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    ressource?: boolean | Notification$ressourceArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>



  export type NotificationSelectScalar = {
    id?: boolean
    userId?: boolean
    titre?: boolean
    message?: boolean
    dateCreation?: boolean
    estLue?: boolean
    typeNotification?: boolean
    ressourceId?: boolean
  }

  export type NotificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "titre" | "message" | "dateCreation" | "estLue" | "typeNotification" | "ressourceId", ExtArgs["result"]["notification"]>
  export type NotificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    ressource?: boolean | Notification$ressourceArgs<ExtArgs>
  }

  export type $NotificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notification"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      ressource: Prisma.$RessourcePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      titre: string
      message: string
      dateCreation: Date
      estLue: boolean
      typeNotification: $Enums.TypeNotification
      ressourceId: string | null
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type NotificationGetPayload<S extends boolean | null | undefined | NotificationDefaultArgs> = $Result.GetResult<Prisma.$NotificationPayload, S>

  type NotificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NotificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface NotificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notification'], meta: { name: 'Notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {NotificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificationFindUniqueArgs>(args: SelectSubset<T, NotificationFindUniqueArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NotificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificationFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificationFindFirstArgs>(args?: SelectSubset<T, NotificationFindFirstArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificationFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificationFindManyArgs>(args?: SelectSubset<T, NotificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notification.
     * @param {NotificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends NotificationCreateArgs>(args: SelectSubset<T, NotificationCreateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notifications.
     * @param {NotificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificationCreateManyArgs>(args?: SelectSubset<T, NotificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Notification.
     * @param {NotificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends NotificationDeleteArgs>(args: SelectSubset<T, NotificationDeleteArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notification.
     * @param {NotificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificationUpdateArgs>(args: SelectSubset<T, NotificationUpdateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notifications.
     * @param {NotificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificationDeleteManyArgs>(args?: SelectSubset<T, NotificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificationUpdateManyArgs>(args: SelectSubset<T, NotificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Notification.
     * @param {NotificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends NotificationUpsertArgs>(args: SelectSubset<T, NotificationUpsertArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends NotificationCountArgs>(
      args?: Subset<T, NotificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificationGroupByArgs['orderBy'] }
        : { orderBy?: NotificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notification model
   */
  readonly fields: NotificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ressource<T extends Notification$ressourceArgs<ExtArgs> = {}>(args?: Subset<T, Notification$ressourceArgs<ExtArgs>>): Prisma__RessourceClient<$Result.GetResult<Prisma.$RessourcePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notification model
   */
  interface NotificationFieldRefs {
    readonly id: FieldRef<"Notification", 'String'>
    readonly userId: FieldRef<"Notification", 'String'>
    readonly titre: FieldRef<"Notification", 'String'>
    readonly message: FieldRef<"Notification", 'String'>
    readonly dateCreation: FieldRef<"Notification", 'DateTime'>
    readonly estLue: FieldRef<"Notification", 'Boolean'>
    readonly typeNotification: FieldRef<"Notification", 'TypeNotification'>
    readonly ressourceId: FieldRef<"Notification", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Notification findUnique
   */
  export type NotificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findUniqueOrThrow
   */
  export type NotificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findFirst
   */
  export type NotificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findFirstOrThrow
   */
  export type NotificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findMany
   */
  export type NotificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notifications to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification create
   */
  export type NotificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to create a Notification.
     */
    data: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
  }

  /**
   * Notification createMany
   */
  export type NotificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notification update
   */
  export type NotificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to update a Notification.
     */
    data: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
    /**
     * Choose, which Notification to update.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification updateMany
   */
  export type NotificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to update.
     */
    limit?: number
  }

  /**
   * Notification upsert
   */
  export type NotificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The filter to search for the Notification to update in case it exists.
     */
    where: NotificationWhereUniqueInput
    /**
     * In case the Notification found by the `where` argument doesn't exist, create a new Notification with this data.
     */
    create: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
    /**
     * In case the Notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
  }

  /**
   * Notification delete
   */
  export type NotificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter which Notification to delete.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification deleteMany
   */
  export type NotificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notifications to delete
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to delete.
     */
    limit?: number
  }

  /**
   * Notification.ressource
   */
  export type Notification$ressourceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ressource
     */
    select?: RessourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ressource
     */
    omit?: RessourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RessourceInclude<ExtArgs> | null
    where?: RessourceWhereInput
  }

  /**
   * Notification without action
   */
  export type NotificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
  }


  /**
   * Model JournalAudit
   */

  export type AggregateJournalAudit = {
    _count: JournalAuditCountAggregateOutputType | null
    _min: JournalAuditMinAggregateOutputType | null
    _max: JournalAuditMaxAggregateOutputType | null
  }

  export type JournalAuditMinAggregateOutputType = {
    id: string | null
    userId: string | null
    action: string | null
    entite: string | null
    entiteId: string | null
    dateAction: Date | null
    ipAdresse: string | null
  }

  export type JournalAuditMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    action: string | null
    entite: string | null
    entiteId: string | null
    dateAction: Date | null
    ipAdresse: string | null
  }

  export type JournalAuditCountAggregateOutputType = {
    id: number
    userId: number
    action: number
    entite: number
    entiteId: number
    dateAction: number
    detailsAction: number
    ipAdresse: number
    _all: number
  }


  export type JournalAuditMinAggregateInputType = {
    id?: true
    userId?: true
    action?: true
    entite?: true
    entiteId?: true
    dateAction?: true
    ipAdresse?: true
  }

  export type JournalAuditMaxAggregateInputType = {
    id?: true
    userId?: true
    action?: true
    entite?: true
    entiteId?: true
    dateAction?: true
    ipAdresse?: true
  }

  export type JournalAuditCountAggregateInputType = {
    id?: true
    userId?: true
    action?: true
    entite?: true
    entiteId?: true
    dateAction?: true
    detailsAction?: true
    ipAdresse?: true
    _all?: true
  }

  export type JournalAuditAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JournalAudit to aggregate.
     */
    where?: JournalAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JournalAudits to fetch.
     */
    orderBy?: JournalAuditOrderByWithRelationInput | JournalAuditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: JournalAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JournalAudits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JournalAudits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned JournalAudits
    **/
    _count?: true | JournalAuditCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JournalAuditMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JournalAuditMaxAggregateInputType
  }

  export type GetJournalAuditAggregateType<T extends JournalAuditAggregateArgs> = {
        [P in keyof T & keyof AggregateJournalAudit]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJournalAudit[P]>
      : GetScalarType<T[P], AggregateJournalAudit[P]>
  }




  export type JournalAuditGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JournalAuditWhereInput
    orderBy?: JournalAuditOrderByWithAggregationInput | JournalAuditOrderByWithAggregationInput[]
    by: JournalAuditScalarFieldEnum[] | JournalAuditScalarFieldEnum
    having?: JournalAuditScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JournalAuditCountAggregateInputType | true
    _min?: JournalAuditMinAggregateInputType
    _max?: JournalAuditMaxAggregateInputType
  }

  export type JournalAuditGroupByOutputType = {
    id: string
    userId: string | null
    action: string
    entite: string
    entiteId: string
    dateAction: Date
    detailsAction: JsonValue
    ipAdresse: string
    _count: JournalAuditCountAggregateOutputType | null
    _min: JournalAuditMinAggregateOutputType | null
    _max: JournalAuditMaxAggregateOutputType | null
  }

  type GetJournalAuditGroupByPayload<T extends JournalAuditGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JournalAuditGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JournalAuditGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JournalAuditGroupByOutputType[P]>
            : GetScalarType<T[P], JournalAuditGroupByOutputType[P]>
        }
      >
    >


  export type JournalAuditSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    action?: boolean
    entite?: boolean
    entiteId?: boolean
    dateAction?: boolean
    detailsAction?: boolean
    ipAdresse?: boolean
    user?: boolean | JournalAudit$userArgs<ExtArgs>
  }, ExtArgs["result"]["journalAudit"]>



  export type JournalAuditSelectScalar = {
    id?: boolean
    userId?: boolean
    action?: boolean
    entite?: boolean
    entiteId?: boolean
    dateAction?: boolean
    detailsAction?: boolean
    ipAdresse?: boolean
  }

  export type JournalAuditOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "action" | "entite" | "entiteId" | "dateAction" | "detailsAction" | "ipAdresse", ExtArgs["result"]["journalAudit"]>
  export type JournalAuditInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | JournalAudit$userArgs<ExtArgs>
  }

  export type $JournalAuditPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "JournalAudit"
    objects: {
      user: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string | null
      action: string
      entite: string
      entiteId: string
      dateAction: Date
      detailsAction: Prisma.JsonValue
      ipAdresse: string
    }, ExtArgs["result"]["journalAudit"]>
    composites: {}
  }

  type JournalAuditGetPayload<S extends boolean | null | undefined | JournalAuditDefaultArgs> = $Result.GetResult<Prisma.$JournalAuditPayload, S>

  type JournalAuditCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<JournalAuditFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: JournalAuditCountAggregateInputType | true
    }

  export interface JournalAuditDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['JournalAudit'], meta: { name: 'JournalAudit' } }
    /**
     * Find zero or one JournalAudit that matches the filter.
     * @param {JournalAuditFindUniqueArgs} args - Arguments to find a JournalAudit
     * @example
     * // Get one JournalAudit
     * const journalAudit = await prisma.journalAudit.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends JournalAuditFindUniqueArgs>(args: SelectSubset<T, JournalAuditFindUniqueArgs<ExtArgs>>): Prisma__JournalAuditClient<$Result.GetResult<Prisma.$JournalAuditPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one JournalAudit that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {JournalAuditFindUniqueOrThrowArgs} args - Arguments to find a JournalAudit
     * @example
     * // Get one JournalAudit
     * const journalAudit = await prisma.journalAudit.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends JournalAuditFindUniqueOrThrowArgs>(args: SelectSubset<T, JournalAuditFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JournalAuditClient<$Result.GetResult<Prisma.$JournalAuditPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first JournalAudit that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JournalAuditFindFirstArgs} args - Arguments to find a JournalAudit
     * @example
     * // Get one JournalAudit
     * const journalAudit = await prisma.journalAudit.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends JournalAuditFindFirstArgs>(args?: SelectSubset<T, JournalAuditFindFirstArgs<ExtArgs>>): Prisma__JournalAuditClient<$Result.GetResult<Prisma.$JournalAuditPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first JournalAudit that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JournalAuditFindFirstOrThrowArgs} args - Arguments to find a JournalAudit
     * @example
     * // Get one JournalAudit
     * const journalAudit = await prisma.journalAudit.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends JournalAuditFindFirstOrThrowArgs>(args?: SelectSubset<T, JournalAuditFindFirstOrThrowArgs<ExtArgs>>): Prisma__JournalAuditClient<$Result.GetResult<Prisma.$JournalAuditPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more JournalAudits that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JournalAuditFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all JournalAudits
     * const journalAudits = await prisma.journalAudit.findMany()
     * 
     * // Get first 10 JournalAudits
     * const journalAudits = await prisma.journalAudit.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const journalAuditWithIdOnly = await prisma.journalAudit.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends JournalAuditFindManyArgs>(args?: SelectSubset<T, JournalAuditFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JournalAuditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a JournalAudit.
     * @param {JournalAuditCreateArgs} args - Arguments to create a JournalAudit.
     * @example
     * // Create one JournalAudit
     * const JournalAudit = await prisma.journalAudit.create({
     *   data: {
     *     // ... data to create a JournalAudit
     *   }
     * })
     * 
     */
    create<T extends JournalAuditCreateArgs>(args: SelectSubset<T, JournalAuditCreateArgs<ExtArgs>>): Prisma__JournalAuditClient<$Result.GetResult<Prisma.$JournalAuditPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many JournalAudits.
     * @param {JournalAuditCreateManyArgs} args - Arguments to create many JournalAudits.
     * @example
     * // Create many JournalAudits
     * const journalAudit = await prisma.journalAudit.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends JournalAuditCreateManyArgs>(args?: SelectSubset<T, JournalAuditCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a JournalAudit.
     * @param {JournalAuditDeleteArgs} args - Arguments to delete one JournalAudit.
     * @example
     * // Delete one JournalAudit
     * const JournalAudit = await prisma.journalAudit.delete({
     *   where: {
     *     // ... filter to delete one JournalAudit
     *   }
     * })
     * 
     */
    delete<T extends JournalAuditDeleteArgs>(args: SelectSubset<T, JournalAuditDeleteArgs<ExtArgs>>): Prisma__JournalAuditClient<$Result.GetResult<Prisma.$JournalAuditPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one JournalAudit.
     * @param {JournalAuditUpdateArgs} args - Arguments to update one JournalAudit.
     * @example
     * // Update one JournalAudit
     * const journalAudit = await prisma.journalAudit.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends JournalAuditUpdateArgs>(args: SelectSubset<T, JournalAuditUpdateArgs<ExtArgs>>): Prisma__JournalAuditClient<$Result.GetResult<Prisma.$JournalAuditPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more JournalAudits.
     * @param {JournalAuditDeleteManyArgs} args - Arguments to filter JournalAudits to delete.
     * @example
     * // Delete a few JournalAudits
     * const { count } = await prisma.journalAudit.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends JournalAuditDeleteManyArgs>(args?: SelectSubset<T, JournalAuditDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JournalAudits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JournalAuditUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many JournalAudits
     * const journalAudit = await prisma.journalAudit.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends JournalAuditUpdateManyArgs>(args: SelectSubset<T, JournalAuditUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one JournalAudit.
     * @param {JournalAuditUpsertArgs} args - Arguments to update or create a JournalAudit.
     * @example
     * // Update or create a JournalAudit
     * const journalAudit = await prisma.journalAudit.upsert({
     *   create: {
     *     // ... data to create a JournalAudit
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the JournalAudit we want to update
     *   }
     * })
     */
    upsert<T extends JournalAuditUpsertArgs>(args: SelectSubset<T, JournalAuditUpsertArgs<ExtArgs>>): Prisma__JournalAuditClient<$Result.GetResult<Prisma.$JournalAuditPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of JournalAudits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JournalAuditCountArgs} args - Arguments to filter JournalAudits to count.
     * @example
     * // Count the number of JournalAudits
     * const count = await prisma.journalAudit.count({
     *   where: {
     *     // ... the filter for the JournalAudits we want to count
     *   }
     * })
    **/
    count<T extends JournalAuditCountArgs>(
      args?: Subset<T, JournalAuditCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JournalAuditCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a JournalAudit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JournalAuditAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JournalAuditAggregateArgs>(args: Subset<T, JournalAuditAggregateArgs>): Prisma.PrismaPromise<GetJournalAuditAggregateType<T>>

    /**
     * Group by JournalAudit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JournalAuditGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends JournalAuditGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: JournalAuditGroupByArgs['orderBy'] }
        : { orderBy?: JournalAuditGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, JournalAuditGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJournalAuditGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the JournalAudit model
   */
  readonly fields: JournalAuditFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for JournalAudit.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__JournalAuditClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends JournalAudit$userArgs<ExtArgs> = {}>(args?: Subset<T, JournalAudit$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the JournalAudit model
   */
  interface JournalAuditFieldRefs {
    readonly id: FieldRef<"JournalAudit", 'String'>
    readonly userId: FieldRef<"JournalAudit", 'String'>
    readonly action: FieldRef<"JournalAudit", 'String'>
    readonly entite: FieldRef<"JournalAudit", 'String'>
    readonly entiteId: FieldRef<"JournalAudit", 'String'>
    readonly dateAction: FieldRef<"JournalAudit", 'DateTime'>
    readonly detailsAction: FieldRef<"JournalAudit", 'Json'>
    readonly ipAdresse: FieldRef<"JournalAudit", 'String'>
  }
    

  // Custom InputTypes
  /**
   * JournalAudit findUnique
   */
  export type JournalAuditFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JournalAudit
     */
    select?: JournalAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JournalAudit
     */
    omit?: JournalAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JournalAuditInclude<ExtArgs> | null
    /**
     * Filter, which JournalAudit to fetch.
     */
    where: JournalAuditWhereUniqueInput
  }

  /**
   * JournalAudit findUniqueOrThrow
   */
  export type JournalAuditFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JournalAudit
     */
    select?: JournalAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JournalAudit
     */
    omit?: JournalAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JournalAuditInclude<ExtArgs> | null
    /**
     * Filter, which JournalAudit to fetch.
     */
    where: JournalAuditWhereUniqueInput
  }

  /**
   * JournalAudit findFirst
   */
  export type JournalAuditFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JournalAudit
     */
    select?: JournalAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JournalAudit
     */
    omit?: JournalAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JournalAuditInclude<ExtArgs> | null
    /**
     * Filter, which JournalAudit to fetch.
     */
    where?: JournalAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JournalAudits to fetch.
     */
    orderBy?: JournalAuditOrderByWithRelationInput | JournalAuditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JournalAudits.
     */
    cursor?: JournalAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JournalAudits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JournalAudits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JournalAudits.
     */
    distinct?: JournalAuditScalarFieldEnum | JournalAuditScalarFieldEnum[]
  }

  /**
   * JournalAudit findFirstOrThrow
   */
  export type JournalAuditFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JournalAudit
     */
    select?: JournalAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JournalAudit
     */
    omit?: JournalAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JournalAuditInclude<ExtArgs> | null
    /**
     * Filter, which JournalAudit to fetch.
     */
    where?: JournalAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JournalAudits to fetch.
     */
    orderBy?: JournalAuditOrderByWithRelationInput | JournalAuditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JournalAudits.
     */
    cursor?: JournalAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JournalAudits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JournalAudits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JournalAudits.
     */
    distinct?: JournalAuditScalarFieldEnum | JournalAuditScalarFieldEnum[]
  }

  /**
   * JournalAudit findMany
   */
  export type JournalAuditFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JournalAudit
     */
    select?: JournalAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JournalAudit
     */
    omit?: JournalAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JournalAuditInclude<ExtArgs> | null
    /**
     * Filter, which JournalAudits to fetch.
     */
    where?: JournalAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JournalAudits to fetch.
     */
    orderBy?: JournalAuditOrderByWithRelationInput | JournalAuditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing JournalAudits.
     */
    cursor?: JournalAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JournalAudits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JournalAudits.
     */
    skip?: number
    distinct?: JournalAuditScalarFieldEnum | JournalAuditScalarFieldEnum[]
  }

  /**
   * JournalAudit create
   */
  export type JournalAuditCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JournalAudit
     */
    select?: JournalAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JournalAudit
     */
    omit?: JournalAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JournalAuditInclude<ExtArgs> | null
    /**
     * The data needed to create a JournalAudit.
     */
    data: XOR<JournalAuditCreateInput, JournalAuditUncheckedCreateInput>
  }

  /**
   * JournalAudit createMany
   */
  export type JournalAuditCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many JournalAudits.
     */
    data: JournalAuditCreateManyInput | JournalAuditCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * JournalAudit update
   */
  export type JournalAuditUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JournalAudit
     */
    select?: JournalAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JournalAudit
     */
    omit?: JournalAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JournalAuditInclude<ExtArgs> | null
    /**
     * The data needed to update a JournalAudit.
     */
    data: XOR<JournalAuditUpdateInput, JournalAuditUncheckedUpdateInput>
    /**
     * Choose, which JournalAudit to update.
     */
    where: JournalAuditWhereUniqueInput
  }

  /**
   * JournalAudit updateMany
   */
  export type JournalAuditUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update JournalAudits.
     */
    data: XOR<JournalAuditUpdateManyMutationInput, JournalAuditUncheckedUpdateManyInput>
    /**
     * Filter which JournalAudits to update
     */
    where?: JournalAuditWhereInput
    /**
     * Limit how many JournalAudits to update.
     */
    limit?: number
  }

  /**
   * JournalAudit upsert
   */
  export type JournalAuditUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JournalAudit
     */
    select?: JournalAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JournalAudit
     */
    omit?: JournalAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JournalAuditInclude<ExtArgs> | null
    /**
     * The filter to search for the JournalAudit to update in case it exists.
     */
    where: JournalAuditWhereUniqueInput
    /**
     * In case the JournalAudit found by the `where` argument doesn't exist, create a new JournalAudit with this data.
     */
    create: XOR<JournalAuditCreateInput, JournalAuditUncheckedCreateInput>
    /**
     * In case the JournalAudit was found with the provided `where` argument, update it with this data.
     */
    update: XOR<JournalAuditUpdateInput, JournalAuditUncheckedUpdateInput>
  }

  /**
   * JournalAudit delete
   */
  export type JournalAuditDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JournalAudit
     */
    select?: JournalAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JournalAudit
     */
    omit?: JournalAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JournalAuditInclude<ExtArgs> | null
    /**
     * Filter which JournalAudit to delete.
     */
    where: JournalAuditWhereUniqueInput
  }

  /**
   * JournalAudit deleteMany
   */
  export type JournalAuditDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JournalAudits to delete
     */
    where?: JournalAuditWhereInput
    /**
     * Limit how many JournalAudits to delete.
     */
    limit?: number
  }

  /**
   * JournalAudit.user
   */
  export type JournalAudit$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * JournalAudit without action
   */
  export type JournalAuditDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JournalAudit
     */
    select?: JournalAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JournalAudit
     */
    omit?: JournalAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JournalAuditInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ConventionInteruniversitaireScalarFieldEnum: {
    id: 'id',
    universiteId1: 'universiteId1',
    universiteId2: 'universiteId2',
    dateDebut: 'dateDebut',
    dateFin: 'dateFin',
    estActive: 'estActive',
    typeConvention: 'typeConvention',
    detailsConvention: 'detailsConvention',
    documentsUrl: 'documentsUrl',
    contactUniversite1: 'contactUniversite1',
    contactUniversite2: 'contactUniversite2'
  };

  export type ConventionInteruniversitaireScalarFieldEnum = (typeof ConventionInteruniversitaireScalarFieldEnum)[keyof typeof ConventionInteruniversitaireScalarFieldEnum]


  export const StatistiqueInteruniversitaireScalarFieldEnum: {
    id: 'id',
    universiteSource: 'universiteSource',
    universiteDestination: 'universiteDestination',
    mois: 'mois',
    annee: 'annee',
    nbEmprunts: 'nbEmprunts',
    nbReservations: 'nbReservations',
    ressourcesPlusConsultees: 'ressourcesPlusConsultees',
    domainesPlusConsultes: 'domainesPlusConsultes'
  };

  export type StatistiqueInteruniversitaireScalarFieldEnum = (typeof StatistiqueInteruniversitaireScalarFieldEnum)[keyof typeof StatistiqueInteruniversitaireScalarFieldEnum]


  export const ReservationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    ressourceId: 'ressourceId',
    dateReservation: 'dateReservation',
    dateDebut: 'dateDebut',
    dateFin: 'dateFin',
    statut: 'statut',
    commentaire: 'commentaire',
    universiteEmprunteur: 'universiteEmprunteur',
    motifReservation: 'motifReservation',
    validePar: 'validePar'
  };

  export type ReservationScalarFieldEnum = (typeof ReservationScalarFieldEnum)[keyof typeof ReservationScalarFieldEnum]


  export const ExemplairePhysiqueScalarFieldEnum: {
    id: 'id',
    ressourceId: 'ressourceId',
    cote: 'cote',
    etat: 'etat',
    disponible: 'disponible',
    localisation: 'localisation',
    dateAcquisition: 'dateAcquisition',
    estReservableExterne: 'estReservableExterne',
    estEmpruntableExterne: 'estEmpruntableExterne'
  };

  export type ExemplairePhysiqueScalarFieldEnum = (typeof ExemplairePhysiqueScalarFieldEnum)[keyof typeof ExemplairePhysiqueScalarFieldEnum]


  export const EmpruntScalarFieldEnum: {
    id: 'id',
    exemplaireId: 'exemplaireId',
    userId: 'userId',
    dateEmprunt: 'dateEmprunt',
    dateRetourPrevue: 'dateRetourPrevue',
    dateRetourEffective: 'dateRetourEffective',
    statut: 'statut',
    commentaire: 'commentaire',
    universiteEmprunteur: 'universiteEmprunteur',
    estEmpruntExterne: 'estEmpruntExterne',
    motifEmprunt: 'motifEmprunt',
    validePar: 'validePar'
  };

  export type EmpruntScalarFieldEnum = (typeof EmpruntScalarFieldEnum)[keyof typeof EmpruntScalarFieldEnum]


  export const RecommandationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    ressourceId: 'ressourceId',
    dateRecommandation: 'dateRecommandation',
    score: 'score',
    motif: 'motif',
    estVue: 'estVue',
    estInteruniversitaire: 'estInteruniversitaire',
    universiteSource: 'universiteSource'
  };

  export type RecommandationScalarFieldEnum = (typeof RecommandationScalarFieldEnum)[keyof typeof RecommandationScalarFieldEnum]


  export const UniversiteScalarFieldEnum: {
    id: 'id',
    nom: 'nom',
    adresse: 'adresse',
    ville: 'ville',
    pays: 'pays',
    siteWeb: 'siteWeb',
    dateCreation: 'dateCreation',
    adresseBlockchain: 'adresseBlockchain',
    estActive: 'estActive'
  };

  export type UniversiteScalarFieldEnum = (typeof UniversiteScalarFieldEnum)[keyof typeof UniversiteScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    motDePasse: 'motDePasse',
    nom: 'nom',
    prenom: 'prenom',
    image: 'image',
    role: 'role',
    departement: 'departement',
    faculte: 'faculte',
    specialite: 'specialite',
    niveauEtudes: 'niveauEtudes',
    dateInscription: 'dateInscription',
    derniereConnexion: 'derniereConnexion',
    estActif: 'estActif',
    universiteId: 'universiteId',
    preferencesRecommandation: 'preferencesRecommandation',
    frequenceRecommandation: 'frequenceRecommandation',
    droitEmpruntExterieur: 'droitEmpruntExterieur',
    droitReservationExterieure: 'droitReservationExterieure',
    universiteAutorisees: 'universiteAutorisees',
    nbMaxEmpruntsExternes: 'nbMaxEmpruntsExternes',
    statutValidation: 'statutValidation',
    dateValidation: 'dateValidation'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const FavoriScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    ressourceId: 'ressourceId',
    dateAjout: 'dateAjout',
    note: 'note'
  };

  export type FavoriScalarFieldEnum = (typeof FavoriScalarFieldEnum)[keyof typeof FavoriScalarFieldEnum]


  export const CommentaireScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    ressourceId: 'ressourceId',
    contenu: 'contenu',
    dateCreation: 'dateCreation',
    estModere: 'estModere'
  };

  export type CommentaireScalarFieldEnum = (typeof CommentaireScalarFieldEnum)[keyof typeof CommentaireScalarFieldEnum]


  export const NotationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    ressourceId: 'ressourceId',
    note: 'note',
    dateNotation: 'dateNotation'
  };

  export type NotationScalarFieldEnum = (typeof NotationScalarFieldEnum)[keyof typeof NotationScalarFieldEnum]


  export const HistoriqueAccesScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    ressourceId: 'ressourceId',
    dateAcces: 'dateAcces',
    typeAcces: 'typeAcces',
    ipAcces: 'ipAcces',
    universiteSrc: 'universiteSrc'
  };

  export type HistoriqueAccesScalarFieldEnum = (typeof HistoriqueAccesScalarFieldEnum)[keyof typeof HistoriqueAccesScalarFieldEnum]


  export const DonneesRecommandationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    ressourceId: 'ressourceId',
    score: 'score',
    typeInteraction: 'typeInteraction',
    dateDonnee: 'dateDonnee'
  };

  export type DonneesRecommandationScalarFieldEnum = (typeof DonneesRecommandationScalarFieldEnum)[keyof typeof DonneesRecommandationScalarFieldEnum]


  export const CollectionScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    nom: 'nom',
    description: 'description',
    estPublique: 'estPublique',
    dateCreation: 'dateCreation'
  };

  export type CollectionScalarFieldEnum = (typeof CollectionScalarFieldEnum)[keyof typeof CollectionScalarFieldEnum]


  export const CollectionRessourceScalarFieldEnum: {
    id: 'id',
    collectionId: 'collectionId',
    ressourceId: 'ressourceId',
    dateAjout: 'dateAjout',
    notes: 'notes'
  };

  export type CollectionRessourceScalarFieldEnum = (typeof CollectionRessourceScalarFieldEnum)[keyof typeof CollectionRessourceScalarFieldEnum]


  export const PartageUniversiteScalarFieldEnum: {
    id: 'id',
    ressourceId: 'ressourceId',
    universiteSource: 'universiteSource',
    universiteDestination: 'universiteDestination',
    datePartage: 'datePartage',
    estActif: 'estActif'
  };

  export type PartageUniversiteScalarFieldEnum = (typeof PartageUniversiteScalarFieldEnum)[keyof typeof PartageUniversiteScalarFieldEnum]


  export const TransactionBlockchainScalarFieldEnum: {
    id: 'id',
    referenceBlockchain: 'referenceBlockchain',
    typeTransaction: 'typeTransaction',
    ressourceId: 'ressourceId',
    universiteOrigine: 'universiteOrigine',
    universiteDestination: 'universiteDestination',
    dateTransaction: 'dateTransaction',
    statut: 'statut',
    hashTransaction: 'hashTransaction',
    donneesTechniques: 'donneesTechniques'
  };

  export type TransactionBlockchainScalarFieldEnum = (typeof TransactionBlockchainScalarFieldEnum)[keyof typeof TransactionBlockchainScalarFieldEnum]


  export const RessourceScalarFieldEnum: {
    id: 'id',
    titre: 'titre',
    description: 'description',
    type: 'type',
    langue: 'langue',
    urlFichier: 'urlFichier',
    urlFichierLocal: 'urlFichierLocal',
    format: 'format',
    dateCreation: 'dateCreation',
    dateModification: 'dateModification',
    estPublique: 'estPublique',
    motsCles: 'motsCles',
    auteurId: 'auteurId',
    universiteId: 'universiteId',
    image: 'image',
    niveauAcces: 'niveauAcces',
    datePublication: 'datePublication',
    estValide: 'estValide',
    estArchive: 'estArchive',
    nomAuteurExterne: 'nomAuteurExterne',
    prenomAuteurExterne: 'prenomAuteurExterne',
    affiliationAuteurExterne: 'affiliationAuteurExterne',
    isbn: 'isbn',
    doi: 'doi',
    edition: 'edition',
    anneePublication: 'anneePublication',
    editeur: 'editeur',
    nbPages: 'nbPages',
    categorieBiblio: 'categorieBiblio',
    estEmpruntable: 'estEmpruntable',
    nbExemplaires: 'nbExemplaires',
    nbDisponibles: 'nbDisponibles',
    coteClassification: 'coteClassification',
    estEmpruntableExterne: 'estEmpruntableExterne',
    dureeMaxEmpruntExterne: 'dureeMaxEmpruntExterne',
    nbMaxExemplairesExterne: 'nbMaxExemplairesExterne',
    necessiteAutorisation: 'necessiteAutorisation'
  };

  export type RessourceScalarFieldEnum = (typeof RessourceScalarFieldEnum)[keyof typeof RessourceScalarFieldEnum]


  export const StatistiqueBibliothequeScalarFieldEnum: {
    id: 'id',
    universiteId: 'universiteId',
    mois: 'mois',
    annee: 'annee',
    nbEmprunts: 'nbEmprunts',
    nbEmpruntsExternes: 'nbEmpruntsExternes',
    nbReservations: 'nbReservations',
    nbReservationsExternes: 'nbReservationsExternes',
    nbRetardsRendu: 'nbRetardsRendu',
    tauxRotation: 'tauxRotation',
    categoriesPlusEmpruntees: 'categoriesPlusEmpruntees',
    universitesPlusFrequentes: 'universitesPlusFrequentes'
  };

  export type StatistiqueBibliothequeScalarFieldEnum = (typeof StatistiqueBibliothequeScalarFieldEnum)[keyof typeof StatistiqueBibliothequeScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    titre: 'titre',
    message: 'message',
    dateCreation: 'dateCreation',
    estLue: 'estLue',
    typeNotification: 'typeNotification',
    ressourceId: 'ressourceId'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const JournalAuditScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    action: 'action',
    entite: 'entite',
    entiteId: 'entiteId',
    dateAction: 'dateAction',
    detailsAction: 'detailsAction',
    ipAdresse: 'ipAdresse'
  };

  export type JournalAuditScalarFieldEnum = (typeof JournalAuditScalarFieldEnum)[keyof typeof JournalAuditScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const ConventionInteruniversitaireOrderByRelevanceFieldEnum: {
    id: 'id',
    universiteId1: 'universiteId1',
    universiteId2: 'universiteId2',
    detailsConvention: 'detailsConvention',
    documentsUrl: 'documentsUrl',
    contactUniversite1: 'contactUniversite1',
    contactUniversite2: 'contactUniversite2'
  };

  export type ConventionInteruniversitaireOrderByRelevanceFieldEnum = (typeof ConventionInteruniversitaireOrderByRelevanceFieldEnum)[keyof typeof ConventionInteruniversitaireOrderByRelevanceFieldEnum]


  export const StatistiqueInteruniversitaireOrderByRelevanceFieldEnum: {
    id: 'id',
    universiteSource: 'universiteSource',
    universiteDestination: 'universiteDestination',
    ressourcesPlusConsultees: 'ressourcesPlusConsultees',
    domainesPlusConsultes: 'domainesPlusConsultes'
  };

  export type StatistiqueInteruniversitaireOrderByRelevanceFieldEnum = (typeof StatistiqueInteruniversitaireOrderByRelevanceFieldEnum)[keyof typeof StatistiqueInteruniversitaireOrderByRelevanceFieldEnum]


  export const ReservationOrderByRelevanceFieldEnum: {
    id: 'id',
    userId: 'userId',
    ressourceId: 'ressourceId',
    commentaire: 'commentaire',
    universiteEmprunteur: 'universiteEmprunteur',
    motifReservation: 'motifReservation',
    validePar: 'validePar'
  };

  export type ReservationOrderByRelevanceFieldEnum = (typeof ReservationOrderByRelevanceFieldEnum)[keyof typeof ReservationOrderByRelevanceFieldEnum]


  export const ExemplairePhysiqueOrderByRelevanceFieldEnum: {
    id: 'id',
    ressourceId: 'ressourceId',
    cote: 'cote',
    localisation: 'localisation'
  };

  export type ExemplairePhysiqueOrderByRelevanceFieldEnum = (typeof ExemplairePhysiqueOrderByRelevanceFieldEnum)[keyof typeof ExemplairePhysiqueOrderByRelevanceFieldEnum]


  export const EmpruntOrderByRelevanceFieldEnum: {
    id: 'id',
    exemplaireId: 'exemplaireId',
    userId: 'userId',
    commentaire: 'commentaire',
    universiteEmprunteur: 'universiteEmprunteur',
    motifEmprunt: 'motifEmprunt',
    validePar: 'validePar'
  };

  export type EmpruntOrderByRelevanceFieldEnum = (typeof EmpruntOrderByRelevanceFieldEnum)[keyof typeof EmpruntOrderByRelevanceFieldEnum]


  export const RecommandationOrderByRelevanceFieldEnum: {
    id: 'id',
    userId: 'userId',
    ressourceId: 'ressourceId',
    universiteSource: 'universiteSource'
  };

  export type RecommandationOrderByRelevanceFieldEnum = (typeof RecommandationOrderByRelevanceFieldEnum)[keyof typeof RecommandationOrderByRelevanceFieldEnum]


  export const UniversiteOrderByRelevanceFieldEnum: {
    id: 'id',
    nom: 'nom',
    adresse: 'adresse',
    ville: 'ville',
    pays: 'pays',
    siteWeb: 'siteWeb',
    adresseBlockchain: 'adresseBlockchain'
  };

  export type UniversiteOrderByRelevanceFieldEnum = (typeof UniversiteOrderByRelevanceFieldEnum)[keyof typeof UniversiteOrderByRelevanceFieldEnum]


  export const UserOrderByRelevanceFieldEnum: {
    id: 'id',
    email: 'email',
    motDePasse: 'motDePasse',
    nom: 'nom',
    prenom: 'prenom',
    image: 'image',
    departement: 'departement',
    faculte: 'faculte',
    specialite: 'specialite',
    niveauEtudes: 'niveauEtudes',
    universiteId: 'universiteId',
    preferencesRecommandation: 'preferencesRecommandation',
    universiteAutorisees: 'universiteAutorisees',
    statutValidation: 'statutValidation'
  };

  export type UserOrderByRelevanceFieldEnum = (typeof UserOrderByRelevanceFieldEnum)[keyof typeof UserOrderByRelevanceFieldEnum]


  export const FavoriOrderByRelevanceFieldEnum: {
    id: 'id',
    userId: 'userId',
    ressourceId: 'ressourceId',
    note: 'note'
  };

  export type FavoriOrderByRelevanceFieldEnum = (typeof FavoriOrderByRelevanceFieldEnum)[keyof typeof FavoriOrderByRelevanceFieldEnum]


  export const CommentaireOrderByRelevanceFieldEnum: {
    id: 'id',
    userId: 'userId',
    ressourceId: 'ressourceId',
    contenu: 'contenu'
  };

  export type CommentaireOrderByRelevanceFieldEnum = (typeof CommentaireOrderByRelevanceFieldEnum)[keyof typeof CommentaireOrderByRelevanceFieldEnum]


  export const NotationOrderByRelevanceFieldEnum: {
    id: 'id',
    userId: 'userId',
    ressourceId: 'ressourceId'
  };

  export type NotationOrderByRelevanceFieldEnum = (typeof NotationOrderByRelevanceFieldEnum)[keyof typeof NotationOrderByRelevanceFieldEnum]


  export const HistoriqueAccesOrderByRelevanceFieldEnum: {
    id: 'id',
    userId: 'userId',
    ressourceId: 'ressourceId',
    ipAcces: 'ipAcces',
    universiteSrc: 'universiteSrc'
  };

  export type HistoriqueAccesOrderByRelevanceFieldEnum = (typeof HistoriqueAccesOrderByRelevanceFieldEnum)[keyof typeof HistoriqueAccesOrderByRelevanceFieldEnum]


  export const DonneesRecommandationOrderByRelevanceFieldEnum: {
    id: 'id',
    userId: 'userId',
    ressourceId: 'ressourceId'
  };

  export type DonneesRecommandationOrderByRelevanceFieldEnum = (typeof DonneesRecommandationOrderByRelevanceFieldEnum)[keyof typeof DonneesRecommandationOrderByRelevanceFieldEnum]


  export const CollectionOrderByRelevanceFieldEnum: {
    id: 'id',
    userId: 'userId',
    nom: 'nom',
    description: 'description'
  };

  export type CollectionOrderByRelevanceFieldEnum = (typeof CollectionOrderByRelevanceFieldEnum)[keyof typeof CollectionOrderByRelevanceFieldEnum]


  export const CollectionRessourceOrderByRelevanceFieldEnum: {
    id: 'id',
    collectionId: 'collectionId',
    ressourceId: 'ressourceId',
    notes: 'notes'
  };

  export type CollectionRessourceOrderByRelevanceFieldEnum = (typeof CollectionRessourceOrderByRelevanceFieldEnum)[keyof typeof CollectionRessourceOrderByRelevanceFieldEnum]


  export const PartageUniversiteOrderByRelevanceFieldEnum: {
    id: 'id',
    ressourceId: 'ressourceId',
    universiteSource: 'universiteSource',
    universiteDestination: 'universiteDestination'
  };

  export type PartageUniversiteOrderByRelevanceFieldEnum = (typeof PartageUniversiteOrderByRelevanceFieldEnum)[keyof typeof PartageUniversiteOrderByRelevanceFieldEnum]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const TransactionBlockchainOrderByRelevanceFieldEnum: {
    id: 'id',
    referenceBlockchain: 'referenceBlockchain',
    ressourceId: 'ressourceId',
    universiteOrigine: 'universiteOrigine',
    universiteDestination: 'universiteDestination',
    hashTransaction: 'hashTransaction'
  };

  export type TransactionBlockchainOrderByRelevanceFieldEnum = (typeof TransactionBlockchainOrderByRelevanceFieldEnum)[keyof typeof TransactionBlockchainOrderByRelevanceFieldEnum]


  export const RessourceOrderByRelevanceFieldEnum: {
    id: 'id',
    titre: 'titre',
    description: 'description',
    langue: 'langue',
    urlFichier: 'urlFichier',
    urlFichierLocal: 'urlFichierLocal',
    format: 'format',
    motsCles: 'motsCles',
    auteurId: 'auteurId',
    universiteId: 'universiteId',
    image: 'image',
    nomAuteurExterne: 'nomAuteurExterne',
    prenomAuteurExterne: 'prenomAuteurExterne',
    affiliationAuteurExterne: 'affiliationAuteurExterne',
    isbn: 'isbn',
    doi: 'doi',
    edition: 'edition',
    editeur: 'editeur',
    coteClassification: 'coteClassification'
  };

  export type RessourceOrderByRelevanceFieldEnum = (typeof RessourceOrderByRelevanceFieldEnum)[keyof typeof RessourceOrderByRelevanceFieldEnum]


  export const StatistiqueBibliothequeOrderByRelevanceFieldEnum: {
    id: 'id',
    universiteId: 'universiteId',
    categoriesPlusEmpruntees: 'categoriesPlusEmpruntees',
    universitesPlusFrequentes: 'universitesPlusFrequentes'
  };

  export type StatistiqueBibliothequeOrderByRelevanceFieldEnum = (typeof StatistiqueBibliothequeOrderByRelevanceFieldEnum)[keyof typeof StatistiqueBibliothequeOrderByRelevanceFieldEnum]


  export const NotificationOrderByRelevanceFieldEnum: {
    id: 'id',
    userId: 'userId',
    titre: 'titre',
    message: 'message',
    ressourceId: 'ressourceId'
  };

  export type NotificationOrderByRelevanceFieldEnum = (typeof NotificationOrderByRelevanceFieldEnum)[keyof typeof NotificationOrderByRelevanceFieldEnum]


  export const JournalAuditOrderByRelevanceFieldEnum: {
    id: 'id',
    userId: 'userId',
    action: 'action',
    entite: 'entite',
    entiteId: 'entiteId',
    ipAdresse: 'ipAdresse'
  };

  export type JournalAuditOrderByRelevanceFieldEnum = (typeof JournalAuditOrderByRelevanceFieldEnum)[keyof typeof JournalAuditOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'TypeConvention'
   */
  export type EnumTypeConventionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TypeConvention'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'StatutReservation'
   */
  export type EnumStatutReservationFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatutReservation'>
    


  /**
   * Reference to a field of type 'EtatExemplaire'
   */
  export type EnumEtatExemplaireFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EtatExemplaire'>
    


  /**
   * Reference to a field of type 'StatutEmprunt'
   */
  export type EnumStatutEmpruntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatutEmprunt'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'MotifRecommandation'
   */
  export type EnumMotifRecommandationFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MotifRecommandation'>
    


  /**
   * Reference to a field of type 'RoleUser'
   */
  export type EnumRoleUserFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RoleUser'>
    


  /**
   * Reference to a field of type 'FrequenceRecommandation'
   */
  export type EnumFrequenceRecommandationFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FrequenceRecommandation'>
    


  /**
   * Reference to a field of type 'TypeAcces'
   */
  export type EnumTypeAccesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TypeAcces'>
    


  /**
   * Reference to a field of type 'TypeInteraction'
   */
  export type EnumTypeInteractionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TypeInteraction'>
    


  /**
   * Reference to a field of type 'TypeTransaction'
   */
  export type EnumTypeTransactionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TypeTransaction'>
    


  /**
   * Reference to a field of type 'StatutTransaction'
   */
  export type EnumStatutTransactionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatutTransaction'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'TypeRessource'
   */
  export type EnumTypeRessourceFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TypeRessource'>
    


  /**
   * Reference to a field of type 'NiveauAcces'
   */
  export type EnumNiveauAccesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NiveauAcces'>
    


  /**
   * Reference to a field of type 'CategorieBiblio'
   */
  export type EnumCategorieBiblioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CategorieBiblio'>
    


  /**
   * Reference to a field of type 'TypeNotification'
   */
  export type EnumTypeNotificationFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TypeNotification'>
    
  /**
   * Deep Input Types
   */


  export type ConventionInteruniversitaireWhereInput = {
    AND?: ConventionInteruniversitaireWhereInput | ConventionInteruniversitaireWhereInput[]
    OR?: ConventionInteruniversitaireWhereInput[]
    NOT?: ConventionInteruniversitaireWhereInput | ConventionInteruniversitaireWhereInput[]
    id?: StringFilter<"ConventionInteruniversitaire"> | string
    universiteId1?: StringFilter<"ConventionInteruniversitaire"> | string
    universiteId2?: StringFilter<"ConventionInteruniversitaire"> | string
    dateDebut?: DateTimeFilter<"ConventionInteruniversitaire"> | Date | string
    dateFin?: DateTimeNullableFilter<"ConventionInteruniversitaire"> | Date | string | null
    estActive?: BoolFilter<"ConventionInteruniversitaire"> | boolean
    typeConvention?: EnumTypeConventionFilter<"ConventionInteruniversitaire"> | $Enums.TypeConvention
    detailsConvention?: StringNullableFilter<"ConventionInteruniversitaire"> | string | null
    documentsUrl?: StringNullableFilter<"ConventionInteruniversitaire"> | string | null
    contactUniversite1?: StringNullableFilter<"ConventionInteruniversitaire"> | string | null
    contactUniversite2?: StringNullableFilter<"ConventionInteruniversitaire"> | string | null
    universite1?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
    universite2?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
  }

  export type ConventionInteruniversitaireOrderByWithRelationInput = {
    id?: SortOrder
    universiteId1?: SortOrder
    universiteId2?: SortOrder
    dateDebut?: SortOrder
    dateFin?: SortOrderInput | SortOrder
    estActive?: SortOrder
    typeConvention?: SortOrder
    detailsConvention?: SortOrderInput | SortOrder
    documentsUrl?: SortOrderInput | SortOrder
    contactUniversite1?: SortOrderInput | SortOrder
    contactUniversite2?: SortOrderInput | SortOrder
    universite1?: UniversiteOrderByWithRelationInput
    universite2?: UniversiteOrderByWithRelationInput
    _relevance?: ConventionInteruniversitaireOrderByRelevanceInput
  }

  export type ConventionInteruniversitaireWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    universiteId1_universiteId2?: ConventionInteruniversitaireUniversiteId1UniversiteId2CompoundUniqueInput
    AND?: ConventionInteruniversitaireWhereInput | ConventionInteruniversitaireWhereInput[]
    OR?: ConventionInteruniversitaireWhereInput[]
    NOT?: ConventionInteruniversitaireWhereInput | ConventionInteruniversitaireWhereInput[]
    universiteId1?: StringFilter<"ConventionInteruniversitaire"> | string
    universiteId2?: StringFilter<"ConventionInteruniversitaire"> | string
    dateDebut?: DateTimeFilter<"ConventionInteruniversitaire"> | Date | string
    dateFin?: DateTimeNullableFilter<"ConventionInteruniversitaire"> | Date | string | null
    estActive?: BoolFilter<"ConventionInteruniversitaire"> | boolean
    typeConvention?: EnumTypeConventionFilter<"ConventionInteruniversitaire"> | $Enums.TypeConvention
    detailsConvention?: StringNullableFilter<"ConventionInteruniversitaire"> | string | null
    documentsUrl?: StringNullableFilter<"ConventionInteruniversitaire"> | string | null
    contactUniversite1?: StringNullableFilter<"ConventionInteruniversitaire"> | string | null
    contactUniversite2?: StringNullableFilter<"ConventionInteruniversitaire"> | string | null
    universite1?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
    universite2?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
  }, "id" | "universiteId1_universiteId2">

  export type ConventionInteruniversitaireOrderByWithAggregationInput = {
    id?: SortOrder
    universiteId1?: SortOrder
    universiteId2?: SortOrder
    dateDebut?: SortOrder
    dateFin?: SortOrderInput | SortOrder
    estActive?: SortOrder
    typeConvention?: SortOrder
    detailsConvention?: SortOrderInput | SortOrder
    documentsUrl?: SortOrderInput | SortOrder
    contactUniversite1?: SortOrderInput | SortOrder
    contactUniversite2?: SortOrderInput | SortOrder
    _count?: ConventionInteruniversitaireCountOrderByAggregateInput
    _max?: ConventionInteruniversitaireMaxOrderByAggregateInput
    _min?: ConventionInteruniversitaireMinOrderByAggregateInput
  }

  export type ConventionInteruniversitaireScalarWhereWithAggregatesInput = {
    AND?: ConventionInteruniversitaireScalarWhereWithAggregatesInput | ConventionInteruniversitaireScalarWhereWithAggregatesInput[]
    OR?: ConventionInteruniversitaireScalarWhereWithAggregatesInput[]
    NOT?: ConventionInteruniversitaireScalarWhereWithAggregatesInput | ConventionInteruniversitaireScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ConventionInteruniversitaire"> | string
    universiteId1?: StringWithAggregatesFilter<"ConventionInteruniversitaire"> | string
    universiteId2?: StringWithAggregatesFilter<"ConventionInteruniversitaire"> | string
    dateDebut?: DateTimeWithAggregatesFilter<"ConventionInteruniversitaire"> | Date | string
    dateFin?: DateTimeNullableWithAggregatesFilter<"ConventionInteruniversitaire"> | Date | string | null
    estActive?: BoolWithAggregatesFilter<"ConventionInteruniversitaire"> | boolean
    typeConvention?: EnumTypeConventionWithAggregatesFilter<"ConventionInteruniversitaire"> | $Enums.TypeConvention
    detailsConvention?: StringNullableWithAggregatesFilter<"ConventionInteruniversitaire"> | string | null
    documentsUrl?: StringNullableWithAggregatesFilter<"ConventionInteruniversitaire"> | string | null
    contactUniversite1?: StringNullableWithAggregatesFilter<"ConventionInteruniversitaire"> | string | null
    contactUniversite2?: StringNullableWithAggregatesFilter<"ConventionInteruniversitaire"> | string | null
  }

  export type StatistiqueInteruniversitaireWhereInput = {
    AND?: StatistiqueInteruniversitaireWhereInput | StatistiqueInteruniversitaireWhereInput[]
    OR?: StatistiqueInteruniversitaireWhereInput[]
    NOT?: StatistiqueInteruniversitaireWhereInput | StatistiqueInteruniversitaireWhereInput[]
    id?: StringFilter<"StatistiqueInteruniversitaire"> | string
    universiteSource?: StringFilter<"StatistiqueInteruniversitaire"> | string
    universiteDestination?: StringFilter<"StatistiqueInteruniversitaire"> | string
    mois?: IntFilter<"StatistiqueInteruniversitaire"> | number
    annee?: IntFilter<"StatistiqueInteruniversitaire"> | number
    nbEmprunts?: IntFilter<"StatistiqueInteruniversitaire"> | number
    nbReservations?: IntFilter<"StatistiqueInteruniversitaire"> | number
    ressourcesPlusConsultees?: StringNullableFilter<"StatistiqueInteruniversitaire"> | string | null
    domainesPlusConsultes?: StringNullableFilter<"StatistiqueInteruniversitaire"> | string | null
    universiteSourceRel?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
    universiteDestinationRel?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
  }

  export type StatistiqueInteruniversitaireOrderByWithRelationInput = {
    id?: SortOrder
    universiteSource?: SortOrder
    universiteDestination?: SortOrder
    mois?: SortOrder
    annee?: SortOrder
    nbEmprunts?: SortOrder
    nbReservations?: SortOrder
    ressourcesPlusConsultees?: SortOrderInput | SortOrder
    domainesPlusConsultes?: SortOrderInput | SortOrder
    universiteSourceRel?: UniversiteOrderByWithRelationInput
    universiteDestinationRel?: UniversiteOrderByWithRelationInput
    _relevance?: StatistiqueInteruniversitaireOrderByRelevanceInput
  }

  export type StatistiqueInteruniversitaireWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    universiteSource_universiteDestination_mois_annee?: StatistiqueInteruniversitaireUniversiteSourceUniversiteDestinationMoisAnneeCompoundUniqueInput
    AND?: StatistiqueInteruniversitaireWhereInput | StatistiqueInteruniversitaireWhereInput[]
    OR?: StatistiqueInteruniversitaireWhereInput[]
    NOT?: StatistiqueInteruniversitaireWhereInput | StatistiqueInteruniversitaireWhereInput[]
    universiteSource?: StringFilter<"StatistiqueInteruniversitaire"> | string
    universiteDestination?: StringFilter<"StatistiqueInteruniversitaire"> | string
    mois?: IntFilter<"StatistiqueInteruniversitaire"> | number
    annee?: IntFilter<"StatistiqueInteruniversitaire"> | number
    nbEmprunts?: IntFilter<"StatistiqueInteruniversitaire"> | number
    nbReservations?: IntFilter<"StatistiqueInteruniversitaire"> | number
    ressourcesPlusConsultees?: StringNullableFilter<"StatistiqueInteruniversitaire"> | string | null
    domainesPlusConsultes?: StringNullableFilter<"StatistiqueInteruniversitaire"> | string | null
    universiteSourceRel?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
    universiteDestinationRel?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
  }, "id" | "universiteSource_universiteDestination_mois_annee">

  export type StatistiqueInteruniversitaireOrderByWithAggregationInput = {
    id?: SortOrder
    universiteSource?: SortOrder
    universiteDestination?: SortOrder
    mois?: SortOrder
    annee?: SortOrder
    nbEmprunts?: SortOrder
    nbReservations?: SortOrder
    ressourcesPlusConsultees?: SortOrderInput | SortOrder
    domainesPlusConsultes?: SortOrderInput | SortOrder
    _count?: StatistiqueInteruniversitaireCountOrderByAggregateInput
    _avg?: StatistiqueInteruniversitaireAvgOrderByAggregateInput
    _max?: StatistiqueInteruniversitaireMaxOrderByAggregateInput
    _min?: StatistiqueInteruniversitaireMinOrderByAggregateInput
    _sum?: StatistiqueInteruniversitaireSumOrderByAggregateInput
  }

  export type StatistiqueInteruniversitaireScalarWhereWithAggregatesInput = {
    AND?: StatistiqueInteruniversitaireScalarWhereWithAggregatesInput | StatistiqueInteruniversitaireScalarWhereWithAggregatesInput[]
    OR?: StatistiqueInteruniversitaireScalarWhereWithAggregatesInput[]
    NOT?: StatistiqueInteruniversitaireScalarWhereWithAggregatesInput | StatistiqueInteruniversitaireScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"StatistiqueInteruniversitaire"> | string
    universiteSource?: StringWithAggregatesFilter<"StatistiqueInteruniversitaire"> | string
    universiteDestination?: StringWithAggregatesFilter<"StatistiqueInteruniversitaire"> | string
    mois?: IntWithAggregatesFilter<"StatistiqueInteruniversitaire"> | number
    annee?: IntWithAggregatesFilter<"StatistiqueInteruniversitaire"> | number
    nbEmprunts?: IntWithAggregatesFilter<"StatistiqueInteruniversitaire"> | number
    nbReservations?: IntWithAggregatesFilter<"StatistiqueInteruniversitaire"> | number
    ressourcesPlusConsultees?: StringNullableWithAggregatesFilter<"StatistiqueInteruniversitaire"> | string | null
    domainesPlusConsultes?: StringNullableWithAggregatesFilter<"StatistiqueInteruniversitaire"> | string | null
  }

  export type ReservationWhereInput = {
    AND?: ReservationWhereInput | ReservationWhereInput[]
    OR?: ReservationWhereInput[]
    NOT?: ReservationWhereInput | ReservationWhereInput[]
    id?: StringFilter<"Reservation"> | string
    userId?: StringNullableFilter<"Reservation"> | string | null
    ressourceId?: StringFilter<"Reservation"> | string
    dateReservation?: DateTimeFilter<"Reservation"> | Date | string
    dateDebut?: DateTimeFilter<"Reservation"> | Date | string
    dateFin?: DateTimeFilter<"Reservation"> | Date | string
    statut?: EnumStatutReservationFilter<"Reservation"> | $Enums.StatutReservation
    commentaire?: StringNullableFilter<"Reservation"> | string | null
    universiteEmprunteur?: StringFilter<"Reservation"> | string
    motifReservation?: StringNullableFilter<"Reservation"> | string | null
    validePar?: StringNullableFilter<"Reservation"> | string | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
    universiteEmprunteurRel?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
  }

  export type ReservationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    ressourceId?: SortOrder
    dateReservation?: SortOrder
    dateDebut?: SortOrder
    dateFin?: SortOrder
    statut?: SortOrder
    commentaire?: SortOrderInput | SortOrder
    universiteEmprunteur?: SortOrder
    motifReservation?: SortOrderInput | SortOrder
    validePar?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    ressource?: RessourceOrderByWithRelationInput
    universiteEmprunteurRel?: UniversiteOrderByWithRelationInput
    _relevance?: ReservationOrderByRelevanceInput
  }

  export type ReservationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ReservationWhereInput | ReservationWhereInput[]
    OR?: ReservationWhereInput[]
    NOT?: ReservationWhereInput | ReservationWhereInput[]
    userId?: StringNullableFilter<"Reservation"> | string | null
    ressourceId?: StringFilter<"Reservation"> | string
    dateReservation?: DateTimeFilter<"Reservation"> | Date | string
    dateDebut?: DateTimeFilter<"Reservation"> | Date | string
    dateFin?: DateTimeFilter<"Reservation"> | Date | string
    statut?: EnumStatutReservationFilter<"Reservation"> | $Enums.StatutReservation
    commentaire?: StringNullableFilter<"Reservation"> | string | null
    universiteEmprunteur?: StringFilter<"Reservation"> | string
    motifReservation?: StringNullableFilter<"Reservation"> | string | null
    validePar?: StringNullableFilter<"Reservation"> | string | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
    universiteEmprunteurRel?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
  }, "id">

  export type ReservationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    ressourceId?: SortOrder
    dateReservation?: SortOrder
    dateDebut?: SortOrder
    dateFin?: SortOrder
    statut?: SortOrder
    commentaire?: SortOrderInput | SortOrder
    universiteEmprunteur?: SortOrder
    motifReservation?: SortOrderInput | SortOrder
    validePar?: SortOrderInput | SortOrder
    _count?: ReservationCountOrderByAggregateInput
    _max?: ReservationMaxOrderByAggregateInput
    _min?: ReservationMinOrderByAggregateInput
  }

  export type ReservationScalarWhereWithAggregatesInput = {
    AND?: ReservationScalarWhereWithAggregatesInput | ReservationScalarWhereWithAggregatesInput[]
    OR?: ReservationScalarWhereWithAggregatesInput[]
    NOT?: ReservationScalarWhereWithAggregatesInput | ReservationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Reservation"> | string
    userId?: StringNullableWithAggregatesFilter<"Reservation"> | string | null
    ressourceId?: StringWithAggregatesFilter<"Reservation"> | string
    dateReservation?: DateTimeWithAggregatesFilter<"Reservation"> | Date | string
    dateDebut?: DateTimeWithAggregatesFilter<"Reservation"> | Date | string
    dateFin?: DateTimeWithAggregatesFilter<"Reservation"> | Date | string
    statut?: EnumStatutReservationWithAggregatesFilter<"Reservation"> | $Enums.StatutReservation
    commentaire?: StringNullableWithAggregatesFilter<"Reservation"> | string | null
    universiteEmprunteur?: StringWithAggregatesFilter<"Reservation"> | string
    motifReservation?: StringNullableWithAggregatesFilter<"Reservation"> | string | null
    validePar?: StringNullableWithAggregatesFilter<"Reservation"> | string | null
  }

  export type ExemplairePhysiqueWhereInput = {
    AND?: ExemplairePhysiqueWhereInput | ExemplairePhysiqueWhereInput[]
    OR?: ExemplairePhysiqueWhereInput[]
    NOT?: ExemplairePhysiqueWhereInput | ExemplairePhysiqueWhereInput[]
    id?: StringFilter<"ExemplairePhysique"> | string
    ressourceId?: StringFilter<"ExemplairePhysique"> | string
    cote?: StringFilter<"ExemplairePhysique"> | string
    etat?: EnumEtatExemplaireFilter<"ExemplairePhysique"> | $Enums.EtatExemplaire
    disponible?: BoolFilter<"ExemplairePhysique"> | boolean
    localisation?: StringFilter<"ExemplairePhysique"> | string
    dateAcquisition?: DateTimeNullableFilter<"ExemplairePhysique"> | Date | string | null
    estReservableExterne?: BoolNullableFilter<"ExemplairePhysique"> | boolean | null
    estEmpruntableExterne?: BoolNullableFilter<"ExemplairePhysique"> | boolean | null
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
    emprunts?: EmpruntListRelationFilter
  }

  export type ExemplairePhysiqueOrderByWithRelationInput = {
    id?: SortOrder
    ressourceId?: SortOrder
    cote?: SortOrder
    etat?: SortOrder
    disponible?: SortOrder
    localisation?: SortOrder
    dateAcquisition?: SortOrderInput | SortOrder
    estReservableExterne?: SortOrderInput | SortOrder
    estEmpruntableExterne?: SortOrderInput | SortOrder
    ressource?: RessourceOrderByWithRelationInput
    emprunts?: EmpruntOrderByRelationAggregateInput
    _relevance?: ExemplairePhysiqueOrderByRelevanceInput
  }

  export type ExemplairePhysiqueWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ExemplairePhysiqueWhereInput | ExemplairePhysiqueWhereInput[]
    OR?: ExemplairePhysiqueWhereInput[]
    NOT?: ExemplairePhysiqueWhereInput | ExemplairePhysiqueWhereInput[]
    ressourceId?: StringFilter<"ExemplairePhysique"> | string
    cote?: StringFilter<"ExemplairePhysique"> | string
    etat?: EnumEtatExemplaireFilter<"ExemplairePhysique"> | $Enums.EtatExemplaire
    disponible?: BoolFilter<"ExemplairePhysique"> | boolean
    localisation?: StringFilter<"ExemplairePhysique"> | string
    dateAcquisition?: DateTimeNullableFilter<"ExemplairePhysique"> | Date | string | null
    estReservableExterne?: BoolNullableFilter<"ExemplairePhysique"> | boolean | null
    estEmpruntableExterne?: BoolNullableFilter<"ExemplairePhysique"> | boolean | null
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
    emprunts?: EmpruntListRelationFilter
  }, "id">

  export type ExemplairePhysiqueOrderByWithAggregationInput = {
    id?: SortOrder
    ressourceId?: SortOrder
    cote?: SortOrder
    etat?: SortOrder
    disponible?: SortOrder
    localisation?: SortOrder
    dateAcquisition?: SortOrderInput | SortOrder
    estReservableExterne?: SortOrderInput | SortOrder
    estEmpruntableExterne?: SortOrderInput | SortOrder
    _count?: ExemplairePhysiqueCountOrderByAggregateInput
    _max?: ExemplairePhysiqueMaxOrderByAggregateInput
    _min?: ExemplairePhysiqueMinOrderByAggregateInput
  }

  export type ExemplairePhysiqueScalarWhereWithAggregatesInput = {
    AND?: ExemplairePhysiqueScalarWhereWithAggregatesInput | ExemplairePhysiqueScalarWhereWithAggregatesInput[]
    OR?: ExemplairePhysiqueScalarWhereWithAggregatesInput[]
    NOT?: ExemplairePhysiqueScalarWhereWithAggregatesInput | ExemplairePhysiqueScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ExemplairePhysique"> | string
    ressourceId?: StringWithAggregatesFilter<"ExemplairePhysique"> | string
    cote?: StringWithAggregatesFilter<"ExemplairePhysique"> | string
    etat?: EnumEtatExemplaireWithAggregatesFilter<"ExemplairePhysique"> | $Enums.EtatExemplaire
    disponible?: BoolWithAggregatesFilter<"ExemplairePhysique"> | boolean
    localisation?: StringWithAggregatesFilter<"ExemplairePhysique"> | string
    dateAcquisition?: DateTimeNullableWithAggregatesFilter<"ExemplairePhysique"> | Date | string | null
    estReservableExterne?: BoolNullableWithAggregatesFilter<"ExemplairePhysique"> | boolean | null
    estEmpruntableExterne?: BoolNullableWithAggregatesFilter<"ExemplairePhysique"> | boolean | null
  }

  export type EmpruntWhereInput = {
    AND?: EmpruntWhereInput | EmpruntWhereInput[]
    OR?: EmpruntWhereInput[]
    NOT?: EmpruntWhereInput | EmpruntWhereInput[]
    id?: StringFilter<"Emprunt"> | string
    exemplaireId?: StringFilter<"Emprunt"> | string
    userId?: StringFilter<"Emprunt"> | string
    dateEmprunt?: DateTimeFilter<"Emprunt"> | Date | string
    dateRetourPrevue?: DateTimeFilter<"Emprunt"> | Date | string
    dateRetourEffective?: DateTimeNullableFilter<"Emprunt"> | Date | string | null
    statut?: EnumStatutEmpruntFilter<"Emprunt"> | $Enums.StatutEmprunt
    commentaire?: StringNullableFilter<"Emprunt"> | string | null
    universiteEmprunteur?: StringFilter<"Emprunt"> | string
    estEmpruntExterne?: BoolFilter<"Emprunt"> | boolean
    motifEmprunt?: StringNullableFilter<"Emprunt"> | string | null
    validePar?: StringNullableFilter<"Emprunt"> | string | null
    exemplaire?: XOR<ExemplairePhysiqueScalarRelationFilter, ExemplairePhysiqueWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    universiteEmprunteurRel?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
  }

  export type EmpruntOrderByWithRelationInput = {
    id?: SortOrder
    exemplaireId?: SortOrder
    userId?: SortOrder
    dateEmprunt?: SortOrder
    dateRetourPrevue?: SortOrder
    dateRetourEffective?: SortOrderInput | SortOrder
    statut?: SortOrder
    commentaire?: SortOrderInput | SortOrder
    universiteEmprunteur?: SortOrder
    estEmpruntExterne?: SortOrder
    motifEmprunt?: SortOrderInput | SortOrder
    validePar?: SortOrderInput | SortOrder
    exemplaire?: ExemplairePhysiqueOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    universiteEmprunteurRel?: UniversiteOrderByWithRelationInput
    _relevance?: EmpruntOrderByRelevanceInput
  }

  export type EmpruntWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EmpruntWhereInput | EmpruntWhereInput[]
    OR?: EmpruntWhereInput[]
    NOT?: EmpruntWhereInput | EmpruntWhereInput[]
    exemplaireId?: StringFilter<"Emprunt"> | string
    userId?: StringFilter<"Emprunt"> | string
    dateEmprunt?: DateTimeFilter<"Emprunt"> | Date | string
    dateRetourPrevue?: DateTimeFilter<"Emprunt"> | Date | string
    dateRetourEffective?: DateTimeNullableFilter<"Emprunt"> | Date | string | null
    statut?: EnumStatutEmpruntFilter<"Emprunt"> | $Enums.StatutEmprunt
    commentaire?: StringNullableFilter<"Emprunt"> | string | null
    universiteEmprunteur?: StringFilter<"Emprunt"> | string
    estEmpruntExterne?: BoolFilter<"Emprunt"> | boolean
    motifEmprunt?: StringNullableFilter<"Emprunt"> | string | null
    validePar?: StringNullableFilter<"Emprunt"> | string | null
    exemplaire?: XOR<ExemplairePhysiqueScalarRelationFilter, ExemplairePhysiqueWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    universiteEmprunteurRel?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
  }, "id">

  export type EmpruntOrderByWithAggregationInput = {
    id?: SortOrder
    exemplaireId?: SortOrder
    userId?: SortOrder
    dateEmprunt?: SortOrder
    dateRetourPrevue?: SortOrder
    dateRetourEffective?: SortOrderInput | SortOrder
    statut?: SortOrder
    commentaire?: SortOrderInput | SortOrder
    universiteEmprunteur?: SortOrder
    estEmpruntExterne?: SortOrder
    motifEmprunt?: SortOrderInput | SortOrder
    validePar?: SortOrderInput | SortOrder
    _count?: EmpruntCountOrderByAggregateInput
    _max?: EmpruntMaxOrderByAggregateInput
    _min?: EmpruntMinOrderByAggregateInput
  }

  export type EmpruntScalarWhereWithAggregatesInput = {
    AND?: EmpruntScalarWhereWithAggregatesInput | EmpruntScalarWhereWithAggregatesInput[]
    OR?: EmpruntScalarWhereWithAggregatesInput[]
    NOT?: EmpruntScalarWhereWithAggregatesInput | EmpruntScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Emprunt"> | string
    exemplaireId?: StringWithAggregatesFilter<"Emprunt"> | string
    userId?: StringWithAggregatesFilter<"Emprunt"> | string
    dateEmprunt?: DateTimeWithAggregatesFilter<"Emprunt"> | Date | string
    dateRetourPrevue?: DateTimeWithAggregatesFilter<"Emprunt"> | Date | string
    dateRetourEffective?: DateTimeNullableWithAggregatesFilter<"Emprunt"> | Date | string | null
    statut?: EnumStatutEmpruntWithAggregatesFilter<"Emprunt"> | $Enums.StatutEmprunt
    commentaire?: StringNullableWithAggregatesFilter<"Emprunt"> | string | null
    universiteEmprunteur?: StringWithAggregatesFilter<"Emprunt"> | string
    estEmpruntExterne?: BoolWithAggregatesFilter<"Emprunt"> | boolean
    motifEmprunt?: StringNullableWithAggregatesFilter<"Emprunt"> | string | null
    validePar?: StringNullableWithAggregatesFilter<"Emprunt"> | string | null
  }

  export type RecommandationWhereInput = {
    AND?: RecommandationWhereInput | RecommandationWhereInput[]
    OR?: RecommandationWhereInput[]
    NOT?: RecommandationWhereInput | RecommandationWhereInput[]
    id?: StringFilter<"Recommandation"> | string
    userId?: StringFilter<"Recommandation"> | string
    ressourceId?: StringFilter<"Recommandation"> | string
    dateRecommandation?: DateTimeFilter<"Recommandation"> | Date | string
    score?: FloatFilter<"Recommandation"> | number
    motif?: EnumMotifRecommandationFilter<"Recommandation"> | $Enums.MotifRecommandation
    estVue?: BoolFilter<"Recommandation"> | boolean
    estInteruniversitaire?: BoolFilter<"Recommandation"> | boolean
    universiteSource?: StringNullableFilter<"Recommandation"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
    universiteSourceRel?: XOR<UniversiteNullableScalarRelationFilter, UniversiteWhereInput> | null
  }

  export type RecommandationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    dateRecommandation?: SortOrder
    score?: SortOrder
    motif?: SortOrder
    estVue?: SortOrder
    estInteruniversitaire?: SortOrder
    universiteSource?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    ressource?: RessourceOrderByWithRelationInput
    universiteSourceRel?: UniversiteOrderByWithRelationInput
    _relevance?: RecommandationOrderByRelevanceInput
  }

  export type RecommandationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RecommandationWhereInput | RecommandationWhereInput[]
    OR?: RecommandationWhereInput[]
    NOT?: RecommandationWhereInput | RecommandationWhereInput[]
    userId?: StringFilter<"Recommandation"> | string
    ressourceId?: StringFilter<"Recommandation"> | string
    dateRecommandation?: DateTimeFilter<"Recommandation"> | Date | string
    score?: FloatFilter<"Recommandation"> | number
    motif?: EnumMotifRecommandationFilter<"Recommandation"> | $Enums.MotifRecommandation
    estVue?: BoolFilter<"Recommandation"> | boolean
    estInteruniversitaire?: BoolFilter<"Recommandation"> | boolean
    universiteSource?: StringNullableFilter<"Recommandation"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
    universiteSourceRel?: XOR<UniversiteNullableScalarRelationFilter, UniversiteWhereInput> | null
  }, "id">

  export type RecommandationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    dateRecommandation?: SortOrder
    score?: SortOrder
    motif?: SortOrder
    estVue?: SortOrder
    estInteruniversitaire?: SortOrder
    universiteSource?: SortOrderInput | SortOrder
    _count?: RecommandationCountOrderByAggregateInput
    _avg?: RecommandationAvgOrderByAggregateInput
    _max?: RecommandationMaxOrderByAggregateInput
    _min?: RecommandationMinOrderByAggregateInput
    _sum?: RecommandationSumOrderByAggregateInput
  }

  export type RecommandationScalarWhereWithAggregatesInput = {
    AND?: RecommandationScalarWhereWithAggregatesInput | RecommandationScalarWhereWithAggregatesInput[]
    OR?: RecommandationScalarWhereWithAggregatesInput[]
    NOT?: RecommandationScalarWhereWithAggregatesInput | RecommandationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Recommandation"> | string
    userId?: StringWithAggregatesFilter<"Recommandation"> | string
    ressourceId?: StringWithAggregatesFilter<"Recommandation"> | string
    dateRecommandation?: DateTimeWithAggregatesFilter<"Recommandation"> | Date | string
    score?: FloatWithAggregatesFilter<"Recommandation"> | number
    motif?: EnumMotifRecommandationWithAggregatesFilter<"Recommandation"> | $Enums.MotifRecommandation
    estVue?: BoolWithAggregatesFilter<"Recommandation"> | boolean
    estInteruniversitaire?: BoolWithAggregatesFilter<"Recommandation"> | boolean
    universiteSource?: StringNullableWithAggregatesFilter<"Recommandation"> | string | null
  }

  export type UniversiteWhereInput = {
    AND?: UniversiteWhereInput | UniversiteWhereInput[]
    OR?: UniversiteWhereInput[]
    NOT?: UniversiteWhereInput | UniversiteWhereInput[]
    id?: StringFilter<"Universite"> | string
    nom?: StringFilter<"Universite"> | string
    adresse?: StringNullableFilter<"Universite"> | string | null
    ville?: StringFilter<"Universite"> | string
    pays?: StringFilter<"Universite"> | string
    siteWeb?: StringNullableFilter<"Universite"> | string | null
    dateCreation?: DateTimeFilter<"Universite"> | Date | string
    adresseBlockchain?: StringNullableFilter<"Universite"> | string | null
    estActive?: BoolFilter<"Universite"> | boolean
    users?: UserListRelationFilter
    ressources?: RessourceListRelationFilter
    conventionsSource?: ConventionInteruniversitaireListRelationFilter
    conventionsDestination?: ConventionInteruniversitaireListRelationFilter
    statistiquesSource?: StatistiqueInteruniversitaireListRelationFilter
    statistiquesDestination?: StatistiqueInteruniversitaireListRelationFilter
    reservations?: ReservationListRelationFilter
    emprunts?: EmpruntListRelationFilter
    recommandationsSource?: RecommandationListRelationFilter
    statistiquesBibliotheque?: StatistiqueBibliothequeListRelationFilter
    partagesSource?: PartageUniversiteListRelationFilter
    partagesDestination?: PartageUniversiteListRelationFilter
    transactionsOrigine?: TransactionBlockchainListRelationFilter
    transactionsDestination?: TransactionBlockchainListRelationFilter
    HistoriqueAcces?: HistoriqueAccesListRelationFilter
  }

  export type UniversiteOrderByWithRelationInput = {
    id?: SortOrder
    nom?: SortOrder
    adresse?: SortOrderInput | SortOrder
    ville?: SortOrder
    pays?: SortOrder
    siteWeb?: SortOrderInput | SortOrder
    dateCreation?: SortOrder
    adresseBlockchain?: SortOrderInput | SortOrder
    estActive?: SortOrder
    users?: UserOrderByRelationAggregateInput
    ressources?: RessourceOrderByRelationAggregateInput
    conventionsSource?: ConventionInteruniversitaireOrderByRelationAggregateInput
    conventionsDestination?: ConventionInteruniversitaireOrderByRelationAggregateInput
    statistiquesSource?: StatistiqueInteruniversitaireOrderByRelationAggregateInput
    statistiquesDestination?: StatistiqueInteruniversitaireOrderByRelationAggregateInput
    reservations?: ReservationOrderByRelationAggregateInput
    emprunts?: EmpruntOrderByRelationAggregateInput
    recommandationsSource?: RecommandationOrderByRelationAggregateInput
    statistiquesBibliotheque?: StatistiqueBibliothequeOrderByRelationAggregateInput
    partagesSource?: PartageUniversiteOrderByRelationAggregateInput
    partagesDestination?: PartageUniversiteOrderByRelationAggregateInput
    transactionsOrigine?: TransactionBlockchainOrderByRelationAggregateInput
    transactionsDestination?: TransactionBlockchainOrderByRelationAggregateInput
    HistoriqueAcces?: HistoriqueAccesOrderByRelationAggregateInput
    _relevance?: UniversiteOrderByRelevanceInput
  }

  export type UniversiteWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    nom?: string
    AND?: UniversiteWhereInput | UniversiteWhereInput[]
    OR?: UniversiteWhereInput[]
    NOT?: UniversiteWhereInput | UniversiteWhereInput[]
    adresse?: StringNullableFilter<"Universite"> | string | null
    ville?: StringFilter<"Universite"> | string
    pays?: StringFilter<"Universite"> | string
    siteWeb?: StringNullableFilter<"Universite"> | string | null
    dateCreation?: DateTimeFilter<"Universite"> | Date | string
    adresseBlockchain?: StringNullableFilter<"Universite"> | string | null
    estActive?: BoolFilter<"Universite"> | boolean
    users?: UserListRelationFilter
    ressources?: RessourceListRelationFilter
    conventionsSource?: ConventionInteruniversitaireListRelationFilter
    conventionsDestination?: ConventionInteruniversitaireListRelationFilter
    statistiquesSource?: StatistiqueInteruniversitaireListRelationFilter
    statistiquesDestination?: StatistiqueInteruniversitaireListRelationFilter
    reservations?: ReservationListRelationFilter
    emprunts?: EmpruntListRelationFilter
    recommandationsSource?: RecommandationListRelationFilter
    statistiquesBibliotheque?: StatistiqueBibliothequeListRelationFilter
    partagesSource?: PartageUniversiteListRelationFilter
    partagesDestination?: PartageUniversiteListRelationFilter
    transactionsOrigine?: TransactionBlockchainListRelationFilter
    transactionsDestination?: TransactionBlockchainListRelationFilter
    HistoriqueAcces?: HistoriqueAccesListRelationFilter
  }, "id" | "nom">

  export type UniversiteOrderByWithAggregationInput = {
    id?: SortOrder
    nom?: SortOrder
    adresse?: SortOrderInput | SortOrder
    ville?: SortOrder
    pays?: SortOrder
    siteWeb?: SortOrderInput | SortOrder
    dateCreation?: SortOrder
    adresseBlockchain?: SortOrderInput | SortOrder
    estActive?: SortOrder
    _count?: UniversiteCountOrderByAggregateInput
    _max?: UniversiteMaxOrderByAggregateInput
    _min?: UniversiteMinOrderByAggregateInput
  }

  export type UniversiteScalarWhereWithAggregatesInput = {
    AND?: UniversiteScalarWhereWithAggregatesInput | UniversiteScalarWhereWithAggregatesInput[]
    OR?: UniversiteScalarWhereWithAggregatesInput[]
    NOT?: UniversiteScalarWhereWithAggregatesInput | UniversiteScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Universite"> | string
    nom?: StringWithAggregatesFilter<"Universite"> | string
    adresse?: StringNullableWithAggregatesFilter<"Universite"> | string | null
    ville?: StringWithAggregatesFilter<"Universite"> | string
    pays?: StringWithAggregatesFilter<"Universite"> | string
    siteWeb?: StringNullableWithAggregatesFilter<"Universite"> | string | null
    dateCreation?: DateTimeWithAggregatesFilter<"Universite"> | Date | string
    adresseBlockchain?: StringNullableWithAggregatesFilter<"Universite"> | string | null
    estActive?: BoolWithAggregatesFilter<"Universite"> | boolean
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    motDePasse?: StringFilter<"User"> | string
    nom?: StringFilter<"User"> | string
    prenom?: StringFilter<"User"> | string
    image?: StringNullableFilter<"User"> | string | null
    role?: EnumRoleUserFilter<"User"> | $Enums.RoleUser
    departement?: StringNullableFilter<"User"> | string | null
    faculte?: StringNullableFilter<"User"> | string | null
    specialite?: StringNullableFilter<"User"> | string | null
    niveauEtudes?: StringNullableFilter<"User"> | string | null
    dateInscription?: DateTimeFilter<"User"> | Date | string
    derniereConnexion?: DateTimeNullableFilter<"User"> | Date | string | null
    estActif?: BoolFilter<"User"> | boolean
    universiteId?: StringFilter<"User"> | string
    preferencesRecommandation?: StringNullableFilter<"User"> | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFilter<"User"> | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFilter<"User"> | boolean
    droitReservationExterieure?: BoolFilter<"User"> | boolean
    universiteAutorisees?: StringNullableFilter<"User"> | string | null
    nbMaxEmpruntsExternes?: IntFilter<"User"> | number
    statutValidation?: StringNullableFilter<"User"> | string | null
    dateValidation?: DateTimeNullableFilter<"User"> | Date | string | null
    universite?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
    contributions?: RessourceListRelationFilter
    favoris?: FavoriListRelationFilter
    commentaires?: CommentaireListRelationFilter
    notations?: NotationListRelationFilter
    historiques?: HistoriqueAccesListRelationFilter
    collections?: CollectionListRelationFilter
    reservations?: ReservationListRelationFilter
    emprunts?: EmpruntListRelationFilter
    recommandations?: RecommandationListRelationFilter
    JournalAudit?: JournalAuditListRelationFilter
    DonneesRecommandation?: DonneesRecommandationListRelationFilter
    Notification?: NotificationListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    motDePasse?: SortOrder
    nom?: SortOrder
    prenom?: SortOrder
    image?: SortOrderInput | SortOrder
    role?: SortOrder
    departement?: SortOrderInput | SortOrder
    faculte?: SortOrderInput | SortOrder
    specialite?: SortOrderInput | SortOrder
    niveauEtudes?: SortOrderInput | SortOrder
    dateInscription?: SortOrder
    derniereConnexion?: SortOrderInput | SortOrder
    estActif?: SortOrder
    universiteId?: SortOrder
    preferencesRecommandation?: SortOrderInput | SortOrder
    frequenceRecommandation?: SortOrder
    droitEmpruntExterieur?: SortOrder
    droitReservationExterieure?: SortOrder
    universiteAutorisees?: SortOrderInput | SortOrder
    nbMaxEmpruntsExternes?: SortOrder
    statutValidation?: SortOrderInput | SortOrder
    dateValidation?: SortOrderInput | SortOrder
    universite?: UniversiteOrderByWithRelationInput
    contributions?: RessourceOrderByRelationAggregateInput
    favoris?: FavoriOrderByRelationAggregateInput
    commentaires?: CommentaireOrderByRelationAggregateInput
    notations?: NotationOrderByRelationAggregateInput
    historiques?: HistoriqueAccesOrderByRelationAggregateInput
    collections?: CollectionOrderByRelationAggregateInput
    reservations?: ReservationOrderByRelationAggregateInput
    emprunts?: EmpruntOrderByRelationAggregateInput
    recommandations?: RecommandationOrderByRelationAggregateInput
    JournalAudit?: JournalAuditOrderByRelationAggregateInput
    DonneesRecommandation?: DonneesRecommandationOrderByRelationAggregateInput
    Notification?: NotificationOrderByRelationAggregateInput
    _relevance?: UserOrderByRelevanceInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    motDePasse?: StringFilter<"User"> | string
    nom?: StringFilter<"User"> | string
    prenom?: StringFilter<"User"> | string
    image?: StringNullableFilter<"User"> | string | null
    role?: EnumRoleUserFilter<"User"> | $Enums.RoleUser
    departement?: StringNullableFilter<"User"> | string | null
    faculte?: StringNullableFilter<"User"> | string | null
    specialite?: StringNullableFilter<"User"> | string | null
    niveauEtudes?: StringNullableFilter<"User"> | string | null
    dateInscription?: DateTimeFilter<"User"> | Date | string
    derniereConnexion?: DateTimeNullableFilter<"User"> | Date | string | null
    estActif?: BoolFilter<"User"> | boolean
    universiteId?: StringFilter<"User"> | string
    preferencesRecommandation?: StringNullableFilter<"User"> | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFilter<"User"> | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFilter<"User"> | boolean
    droitReservationExterieure?: BoolFilter<"User"> | boolean
    universiteAutorisees?: StringNullableFilter<"User"> | string | null
    nbMaxEmpruntsExternes?: IntFilter<"User"> | number
    statutValidation?: StringNullableFilter<"User"> | string | null
    dateValidation?: DateTimeNullableFilter<"User"> | Date | string | null
    universite?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
    contributions?: RessourceListRelationFilter
    favoris?: FavoriListRelationFilter
    commentaires?: CommentaireListRelationFilter
    notations?: NotationListRelationFilter
    historiques?: HistoriqueAccesListRelationFilter
    collections?: CollectionListRelationFilter
    reservations?: ReservationListRelationFilter
    emprunts?: EmpruntListRelationFilter
    recommandations?: RecommandationListRelationFilter
    JournalAudit?: JournalAuditListRelationFilter
    DonneesRecommandation?: DonneesRecommandationListRelationFilter
    Notification?: NotificationListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    motDePasse?: SortOrder
    nom?: SortOrder
    prenom?: SortOrder
    image?: SortOrderInput | SortOrder
    role?: SortOrder
    departement?: SortOrderInput | SortOrder
    faculte?: SortOrderInput | SortOrder
    specialite?: SortOrderInput | SortOrder
    niveauEtudes?: SortOrderInput | SortOrder
    dateInscription?: SortOrder
    derniereConnexion?: SortOrderInput | SortOrder
    estActif?: SortOrder
    universiteId?: SortOrder
    preferencesRecommandation?: SortOrderInput | SortOrder
    frequenceRecommandation?: SortOrder
    droitEmpruntExterieur?: SortOrder
    droitReservationExterieure?: SortOrder
    universiteAutorisees?: SortOrderInput | SortOrder
    nbMaxEmpruntsExternes?: SortOrder
    statutValidation?: SortOrderInput | SortOrder
    dateValidation?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    motDePasse?: StringWithAggregatesFilter<"User"> | string
    nom?: StringWithAggregatesFilter<"User"> | string
    prenom?: StringWithAggregatesFilter<"User"> | string
    image?: StringNullableWithAggregatesFilter<"User"> | string | null
    role?: EnumRoleUserWithAggregatesFilter<"User"> | $Enums.RoleUser
    departement?: StringNullableWithAggregatesFilter<"User"> | string | null
    faculte?: StringNullableWithAggregatesFilter<"User"> | string | null
    specialite?: StringNullableWithAggregatesFilter<"User"> | string | null
    niveauEtudes?: StringNullableWithAggregatesFilter<"User"> | string | null
    dateInscription?: DateTimeWithAggregatesFilter<"User"> | Date | string
    derniereConnexion?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    estActif?: BoolWithAggregatesFilter<"User"> | boolean
    universiteId?: StringWithAggregatesFilter<"User"> | string
    preferencesRecommandation?: StringNullableWithAggregatesFilter<"User"> | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationWithAggregatesFilter<"User"> | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolWithAggregatesFilter<"User"> | boolean
    droitReservationExterieure?: BoolWithAggregatesFilter<"User"> | boolean
    universiteAutorisees?: StringNullableWithAggregatesFilter<"User"> | string | null
    nbMaxEmpruntsExternes?: IntWithAggregatesFilter<"User"> | number
    statutValidation?: StringNullableWithAggregatesFilter<"User"> | string | null
    dateValidation?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
  }

  export type FavoriWhereInput = {
    AND?: FavoriWhereInput | FavoriWhereInput[]
    OR?: FavoriWhereInput[]
    NOT?: FavoriWhereInput | FavoriWhereInput[]
    id?: StringFilter<"Favori"> | string
    userId?: StringFilter<"Favori"> | string
    ressourceId?: StringFilter<"Favori"> | string
    dateAjout?: DateTimeFilter<"Favori"> | Date | string
    note?: StringNullableFilter<"Favori"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
  }

  export type FavoriOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    dateAjout?: SortOrder
    note?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    ressource?: RessourceOrderByWithRelationInput
    _relevance?: FavoriOrderByRelevanceInput
  }

  export type FavoriWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_ressourceId?: FavoriUserIdRessourceIdCompoundUniqueInput
    AND?: FavoriWhereInput | FavoriWhereInput[]
    OR?: FavoriWhereInput[]
    NOT?: FavoriWhereInput | FavoriWhereInput[]
    userId?: StringFilter<"Favori"> | string
    ressourceId?: StringFilter<"Favori"> | string
    dateAjout?: DateTimeFilter<"Favori"> | Date | string
    note?: StringNullableFilter<"Favori"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
  }, "id" | "userId_ressourceId">

  export type FavoriOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    dateAjout?: SortOrder
    note?: SortOrderInput | SortOrder
    _count?: FavoriCountOrderByAggregateInput
    _max?: FavoriMaxOrderByAggregateInput
    _min?: FavoriMinOrderByAggregateInput
  }

  export type FavoriScalarWhereWithAggregatesInput = {
    AND?: FavoriScalarWhereWithAggregatesInput | FavoriScalarWhereWithAggregatesInput[]
    OR?: FavoriScalarWhereWithAggregatesInput[]
    NOT?: FavoriScalarWhereWithAggregatesInput | FavoriScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Favori"> | string
    userId?: StringWithAggregatesFilter<"Favori"> | string
    ressourceId?: StringWithAggregatesFilter<"Favori"> | string
    dateAjout?: DateTimeWithAggregatesFilter<"Favori"> | Date | string
    note?: StringNullableWithAggregatesFilter<"Favori"> | string | null
  }

  export type CommentaireWhereInput = {
    AND?: CommentaireWhereInput | CommentaireWhereInput[]
    OR?: CommentaireWhereInput[]
    NOT?: CommentaireWhereInput | CommentaireWhereInput[]
    id?: StringFilter<"Commentaire"> | string
    userId?: StringFilter<"Commentaire"> | string
    ressourceId?: StringFilter<"Commentaire"> | string
    contenu?: StringFilter<"Commentaire"> | string
    dateCreation?: DateTimeFilter<"Commentaire"> | Date | string
    estModere?: BoolFilter<"Commentaire"> | boolean
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
  }

  export type CommentaireOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    contenu?: SortOrder
    dateCreation?: SortOrder
    estModere?: SortOrder
    user?: UserOrderByWithRelationInput
    ressource?: RessourceOrderByWithRelationInput
    _relevance?: CommentaireOrderByRelevanceInput
  }

  export type CommentaireWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CommentaireWhereInput | CommentaireWhereInput[]
    OR?: CommentaireWhereInput[]
    NOT?: CommentaireWhereInput | CommentaireWhereInput[]
    userId?: StringFilter<"Commentaire"> | string
    ressourceId?: StringFilter<"Commentaire"> | string
    contenu?: StringFilter<"Commentaire"> | string
    dateCreation?: DateTimeFilter<"Commentaire"> | Date | string
    estModere?: BoolFilter<"Commentaire"> | boolean
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
  }, "id">

  export type CommentaireOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    contenu?: SortOrder
    dateCreation?: SortOrder
    estModere?: SortOrder
    _count?: CommentaireCountOrderByAggregateInput
    _max?: CommentaireMaxOrderByAggregateInput
    _min?: CommentaireMinOrderByAggregateInput
  }

  export type CommentaireScalarWhereWithAggregatesInput = {
    AND?: CommentaireScalarWhereWithAggregatesInput | CommentaireScalarWhereWithAggregatesInput[]
    OR?: CommentaireScalarWhereWithAggregatesInput[]
    NOT?: CommentaireScalarWhereWithAggregatesInput | CommentaireScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Commentaire"> | string
    userId?: StringWithAggregatesFilter<"Commentaire"> | string
    ressourceId?: StringWithAggregatesFilter<"Commentaire"> | string
    contenu?: StringWithAggregatesFilter<"Commentaire"> | string
    dateCreation?: DateTimeWithAggregatesFilter<"Commentaire"> | Date | string
    estModere?: BoolWithAggregatesFilter<"Commentaire"> | boolean
  }

  export type NotationWhereInput = {
    AND?: NotationWhereInput | NotationWhereInput[]
    OR?: NotationWhereInput[]
    NOT?: NotationWhereInput | NotationWhereInput[]
    id?: StringFilter<"Notation"> | string
    userId?: StringFilter<"Notation"> | string
    ressourceId?: StringFilter<"Notation"> | string
    note?: IntFilter<"Notation"> | number
    dateNotation?: DateTimeFilter<"Notation"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
  }

  export type NotationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    note?: SortOrder
    dateNotation?: SortOrder
    user?: UserOrderByWithRelationInput
    ressource?: RessourceOrderByWithRelationInput
    _relevance?: NotationOrderByRelevanceInput
  }

  export type NotationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_ressourceId?: NotationUserIdRessourceIdCompoundUniqueInput
    AND?: NotationWhereInput | NotationWhereInput[]
    OR?: NotationWhereInput[]
    NOT?: NotationWhereInput | NotationWhereInput[]
    userId?: StringFilter<"Notation"> | string
    ressourceId?: StringFilter<"Notation"> | string
    note?: IntFilter<"Notation"> | number
    dateNotation?: DateTimeFilter<"Notation"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
  }, "id" | "userId_ressourceId">

  export type NotationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    note?: SortOrder
    dateNotation?: SortOrder
    _count?: NotationCountOrderByAggregateInput
    _avg?: NotationAvgOrderByAggregateInput
    _max?: NotationMaxOrderByAggregateInput
    _min?: NotationMinOrderByAggregateInput
    _sum?: NotationSumOrderByAggregateInput
  }

  export type NotationScalarWhereWithAggregatesInput = {
    AND?: NotationScalarWhereWithAggregatesInput | NotationScalarWhereWithAggregatesInput[]
    OR?: NotationScalarWhereWithAggregatesInput[]
    NOT?: NotationScalarWhereWithAggregatesInput | NotationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Notation"> | string
    userId?: StringWithAggregatesFilter<"Notation"> | string
    ressourceId?: StringWithAggregatesFilter<"Notation"> | string
    note?: IntWithAggregatesFilter<"Notation"> | number
    dateNotation?: DateTimeWithAggregatesFilter<"Notation"> | Date | string
  }

  export type HistoriqueAccesWhereInput = {
    AND?: HistoriqueAccesWhereInput | HistoriqueAccesWhereInput[]
    OR?: HistoriqueAccesWhereInput[]
    NOT?: HistoriqueAccesWhereInput | HistoriqueAccesWhereInput[]
    id?: StringFilter<"HistoriqueAcces"> | string
    userId?: StringFilter<"HistoriqueAcces"> | string
    ressourceId?: StringFilter<"HistoriqueAcces"> | string
    dateAcces?: DateTimeFilter<"HistoriqueAcces"> | Date | string
    typeAcces?: EnumTypeAccesFilter<"HistoriqueAcces"> | $Enums.TypeAcces
    ipAcces?: StringFilter<"HistoriqueAcces"> | string
    universiteSrc?: StringNullableFilter<"HistoriqueAcces"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
    universiteSrcRel?: XOR<UniversiteNullableScalarRelationFilter, UniversiteWhereInput> | null
  }

  export type HistoriqueAccesOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    dateAcces?: SortOrder
    typeAcces?: SortOrder
    ipAcces?: SortOrder
    universiteSrc?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    ressource?: RessourceOrderByWithRelationInput
    universiteSrcRel?: UniversiteOrderByWithRelationInput
    _relevance?: HistoriqueAccesOrderByRelevanceInput
  }

  export type HistoriqueAccesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: HistoriqueAccesWhereInput | HistoriqueAccesWhereInput[]
    OR?: HistoriqueAccesWhereInput[]
    NOT?: HistoriqueAccesWhereInput | HistoriqueAccesWhereInput[]
    userId?: StringFilter<"HistoriqueAcces"> | string
    ressourceId?: StringFilter<"HistoriqueAcces"> | string
    dateAcces?: DateTimeFilter<"HistoriqueAcces"> | Date | string
    typeAcces?: EnumTypeAccesFilter<"HistoriqueAcces"> | $Enums.TypeAcces
    ipAcces?: StringFilter<"HistoriqueAcces"> | string
    universiteSrc?: StringNullableFilter<"HistoriqueAcces"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
    universiteSrcRel?: XOR<UniversiteNullableScalarRelationFilter, UniversiteWhereInput> | null
  }, "id">

  export type HistoriqueAccesOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    dateAcces?: SortOrder
    typeAcces?: SortOrder
    ipAcces?: SortOrder
    universiteSrc?: SortOrderInput | SortOrder
    _count?: HistoriqueAccesCountOrderByAggregateInput
    _max?: HistoriqueAccesMaxOrderByAggregateInput
    _min?: HistoriqueAccesMinOrderByAggregateInput
  }

  export type HistoriqueAccesScalarWhereWithAggregatesInput = {
    AND?: HistoriqueAccesScalarWhereWithAggregatesInput | HistoriqueAccesScalarWhereWithAggregatesInput[]
    OR?: HistoriqueAccesScalarWhereWithAggregatesInput[]
    NOT?: HistoriqueAccesScalarWhereWithAggregatesInput | HistoriqueAccesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"HistoriqueAcces"> | string
    userId?: StringWithAggregatesFilter<"HistoriqueAcces"> | string
    ressourceId?: StringWithAggregatesFilter<"HistoriqueAcces"> | string
    dateAcces?: DateTimeWithAggregatesFilter<"HistoriqueAcces"> | Date | string
    typeAcces?: EnumTypeAccesWithAggregatesFilter<"HistoriqueAcces"> | $Enums.TypeAcces
    ipAcces?: StringWithAggregatesFilter<"HistoriqueAcces"> | string
    universiteSrc?: StringNullableWithAggregatesFilter<"HistoriqueAcces"> | string | null
  }

  export type DonneesRecommandationWhereInput = {
    AND?: DonneesRecommandationWhereInput | DonneesRecommandationWhereInput[]
    OR?: DonneesRecommandationWhereInput[]
    NOT?: DonneesRecommandationWhereInput | DonneesRecommandationWhereInput[]
    id?: StringFilter<"DonneesRecommandation"> | string
    userId?: StringFilter<"DonneesRecommandation"> | string
    ressourceId?: StringFilter<"DonneesRecommandation"> | string
    score?: FloatFilter<"DonneesRecommandation"> | number
    typeInteraction?: EnumTypeInteractionFilter<"DonneesRecommandation"> | $Enums.TypeInteraction
    dateDonnee?: DateTimeFilter<"DonneesRecommandation"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
  }

  export type DonneesRecommandationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    score?: SortOrder
    typeInteraction?: SortOrder
    dateDonnee?: SortOrder
    user?: UserOrderByWithRelationInput
    ressource?: RessourceOrderByWithRelationInput
    _relevance?: DonneesRecommandationOrderByRelevanceInput
  }

  export type DonneesRecommandationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DonneesRecommandationWhereInput | DonneesRecommandationWhereInput[]
    OR?: DonneesRecommandationWhereInput[]
    NOT?: DonneesRecommandationWhereInput | DonneesRecommandationWhereInput[]
    userId?: StringFilter<"DonneesRecommandation"> | string
    ressourceId?: StringFilter<"DonneesRecommandation"> | string
    score?: FloatFilter<"DonneesRecommandation"> | number
    typeInteraction?: EnumTypeInteractionFilter<"DonneesRecommandation"> | $Enums.TypeInteraction
    dateDonnee?: DateTimeFilter<"DonneesRecommandation"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
  }, "id">

  export type DonneesRecommandationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    score?: SortOrder
    typeInteraction?: SortOrder
    dateDonnee?: SortOrder
    _count?: DonneesRecommandationCountOrderByAggregateInput
    _avg?: DonneesRecommandationAvgOrderByAggregateInput
    _max?: DonneesRecommandationMaxOrderByAggregateInput
    _min?: DonneesRecommandationMinOrderByAggregateInput
    _sum?: DonneesRecommandationSumOrderByAggregateInput
  }

  export type DonneesRecommandationScalarWhereWithAggregatesInput = {
    AND?: DonneesRecommandationScalarWhereWithAggregatesInput | DonneesRecommandationScalarWhereWithAggregatesInput[]
    OR?: DonneesRecommandationScalarWhereWithAggregatesInput[]
    NOT?: DonneesRecommandationScalarWhereWithAggregatesInput | DonneesRecommandationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"DonneesRecommandation"> | string
    userId?: StringWithAggregatesFilter<"DonneesRecommandation"> | string
    ressourceId?: StringWithAggregatesFilter<"DonneesRecommandation"> | string
    score?: FloatWithAggregatesFilter<"DonneesRecommandation"> | number
    typeInteraction?: EnumTypeInteractionWithAggregatesFilter<"DonneesRecommandation"> | $Enums.TypeInteraction
    dateDonnee?: DateTimeWithAggregatesFilter<"DonneesRecommandation"> | Date | string
  }

  export type CollectionWhereInput = {
    AND?: CollectionWhereInput | CollectionWhereInput[]
    OR?: CollectionWhereInput[]
    NOT?: CollectionWhereInput | CollectionWhereInput[]
    id?: StringFilter<"Collection"> | string
    userId?: StringFilter<"Collection"> | string
    nom?: StringFilter<"Collection"> | string
    description?: StringNullableFilter<"Collection"> | string | null
    estPublique?: BoolFilter<"Collection"> | boolean
    dateCreation?: DateTimeFilter<"Collection"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ressources?: CollectionRessourceListRelationFilter
  }

  export type CollectionOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    nom?: SortOrder
    description?: SortOrderInput | SortOrder
    estPublique?: SortOrder
    dateCreation?: SortOrder
    user?: UserOrderByWithRelationInput
    ressources?: CollectionRessourceOrderByRelationAggregateInput
    _relevance?: CollectionOrderByRelevanceInput
  }

  export type CollectionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CollectionWhereInput | CollectionWhereInput[]
    OR?: CollectionWhereInput[]
    NOT?: CollectionWhereInput | CollectionWhereInput[]
    userId?: StringFilter<"Collection"> | string
    nom?: StringFilter<"Collection"> | string
    description?: StringNullableFilter<"Collection"> | string | null
    estPublique?: BoolFilter<"Collection"> | boolean
    dateCreation?: DateTimeFilter<"Collection"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ressources?: CollectionRessourceListRelationFilter
  }, "id">

  export type CollectionOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    nom?: SortOrder
    description?: SortOrderInput | SortOrder
    estPublique?: SortOrder
    dateCreation?: SortOrder
    _count?: CollectionCountOrderByAggregateInput
    _max?: CollectionMaxOrderByAggregateInput
    _min?: CollectionMinOrderByAggregateInput
  }

  export type CollectionScalarWhereWithAggregatesInput = {
    AND?: CollectionScalarWhereWithAggregatesInput | CollectionScalarWhereWithAggregatesInput[]
    OR?: CollectionScalarWhereWithAggregatesInput[]
    NOT?: CollectionScalarWhereWithAggregatesInput | CollectionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Collection"> | string
    userId?: StringWithAggregatesFilter<"Collection"> | string
    nom?: StringWithAggregatesFilter<"Collection"> | string
    description?: StringNullableWithAggregatesFilter<"Collection"> | string | null
    estPublique?: BoolWithAggregatesFilter<"Collection"> | boolean
    dateCreation?: DateTimeWithAggregatesFilter<"Collection"> | Date | string
  }

  export type CollectionRessourceWhereInput = {
    AND?: CollectionRessourceWhereInput | CollectionRessourceWhereInput[]
    OR?: CollectionRessourceWhereInput[]
    NOT?: CollectionRessourceWhereInput | CollectionRessourceWhereInput[]
    id?: StringFilter<"CollectionRessource"> | string
    collectionId?: StringFilter<"CollectionRessource"> | string
    ressourceId?: StringFilter<"CollectionRessource"> | string
    dateAjout?: DateTimeFilter<"CollectionRessource"> | Date | string
    notes?: StringNullableFilter<"CollectionRessource"> | string | null
    collection?: XOR<CollectionScalarRelationFilter, CollectionWhereInput>
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
  }

  export type CollectionRessourceOrderByWithRelationInput = {
    id?: SortOrder
    collectionId?: SortOrder
    ressourceId?: SortOrder
    dateAjout?: SortOrder
    notes?: SortOrderInput | SortOrder
    collection?: CollectionOrderByWithRelationInput
    ressource?: RessourceOrderByWithRelationInput
    _relevance?: CollectionRessourceOrderByRelevanceInput
  }

  export type CollectionRessourceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    collectionId_ressourceId?: CollectionRessourceCollectionIdRessourceIdCompoundUniqueInput
    AND?: CollectionRessourceWhereInput | CollectionRessourceWhereInput[]
    OR?: CollectionRessourceWhereInput[]
    NOT?: CollectionRessourceWhereInput | CollectionRessourceWhereInput[]
    collectionId?: StringFilter<"CollectionRessource"> | string
    ressourceId?: StringFilter<"CollectionRessource"> | string
    dateAjout?: DateTimeFilter<"CollectionRessource"> | Date | string
    notes?: StringNullableFilter<"CollectionRessource"> | string | null
    collection?: XOR<CollectionScalarRelationFilter, CollectionWhereInput>
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
  }, "id" | "collectionId_ressourceId">

  export type CollectionRessourceOrderByWithAggregationInput = {
    id?: SortOrder
    collectionId?: SortOrder
    ressourceId?: SortOrder
    dateAjout?: SortOrder
    notes?: SortOrderInput | SortOrder
    _count?: CollectionRessourceCountOrderByAggregateInput
    _max?: CollectionRessourceMaxOrderByAggregateInput
    _min?: CollectionRessourceMinOrderByAggregateInput
  }

  export type CollectionRessourceScalarWhereWithAggregatesInput = {
    AND?: CollectionRessourceScalarWhereWithAggregatesInput | CollectionRessourceScalarWhereWithAggregatesInput[]
    OR?: CollectionRessourceScalarWhereWithAggregatesInput[]
    NOT?: CollectionRessourceScalarWhereWithAggregatesInput | CollectionRessourceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CollectionRessource"> | string
    collectionId?: StringWithAggregatesFilter<"CollectionRessource"> | string
    ressourceId?: StringWithAggregatesFilter<"CollectionRessource"> | string
    dateAjout?: DateTimeWithAggregatesFilter<"CollectionRessource"> | Date | string
    notes?: StringNullableWithAggregatesFilter<"CollectionRessource"> | string | null
  }

  export type PartageUniversiteWhereInput = {
    AND?: PartageUniversiteWhereInput | PartageUniversiteWhereInput[]
    OR?: PartageUniversiteWhereInput[]
    NOT?: PartageUniversiteWhereInput | PartageUniversiteWhereInput[]
    id?: StringFilter<"PartageUniversite"> | string
    ressourceId?: StringFilter<"PartageUniversite"> | string
    universiteSource?: StringFilter<"PartageUniversite"> | string
    universiteDestination?: StringFilter<"PartageUniversite"> | string
    datePartage?: DateTimeFilter<"PartageUniversite"> | Date | string
    estActif?: BoolFilter<"PartageUniversite"> | boolean
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
    universiteSourceRel?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
    universiteDestinationRel?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
  }

  export type PartageUniversiteOrderByWithRelationInput = {
    id?: SortOrder
    ressourceId?: SortOrder
    universiteSource?: SortOrder
    universiteDestination?: SortOrder
    datePartage?: SortOrder
    estActif?: SortOrder
    ressource?: RessourceOrderByWithRelationInput
    universiteSourceRel?: UniversiteOrderByWithRelationInput
    universiteDestinationRel?: UniversiteOrderByWithRelationInput
    _relevance?: PartageUniversiteOrderByRelevanceInput
  }

  export type PartageUniversiteWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    ressourceId_universiteDestination?: PartageUniversiteRessourceIdUniversiteDestinationCompoundUniqueInput
    AND?: PartageUniversiteWhereInput | PartageUniversiteWhereInput[]
    OR?: PartageUniversiteWhereInput[]
    NOT?: PartageUniversiteWhereInput | PartageUniversiteWhereInput[]
    ressourceId?: StringFilter<"PartageUniversite"> | string
    universiteSource?: StringFilter<"PartageUniversite"> | string
    universiteDestination?: StringFilter<"PartageUniversite"> | string
    datePartage?: DateTimeFilter<"PartageUniversite"> | Date | string
    estActif?: BoolFilter<"PartageUniversite"> | boolean
    ressource?: XOR<RessourceScalarRelationFilter, RessourceWhereInput>
    universiteSourceRel?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
    universiteDestinationRel?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
  }, "id" | "ressourceId_universiteDestination">

  export type PartageUniversiteOrderByWithAggregationInput = {
    id?: SortOrder
    ressourceId?: SortOrder
    universiteSource?: SortOrder
    universiteDestination?: SortOrder
    datePartage?: SortOrder
    estActif?: SortOrder
    _count?: PartageUniversiteCountOrderByAggregateInput
    _max?: PartageUniversiteMaxOrderByAggregateInput
    _min?: PartageUniversiteMinOrderByAggregateInput
  }

  export type PartageUniversiteScalarWhereWithAggregatesInput = {
    AND?: PartageUniversiteScalarWhereWithAggregatesInput | PartageUniversiteScalarWhereWithAggregatesInput[]
    OR?: PartageUniversiteScalarWhereWithAggregatesInput[]
    NOT?: PartageUniversiteScalarWhereWithAggregatesInput | PartageUniversiteScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PartageUniversite"> | string
    ressourceId?: StringWithAggregatesFilter<"PartageUniversite"> | string
    universiteSource?: StringWithAggregatesFilter<"PartageUniversite"> | string
    universiteDestination?: StringWithAggregatesFilter<"PartageUniversite"> | string
    datePartage?: DateTimeWithAggregatesFilter<"PartageUniversite"> | Date | string
    estActif?: BoolWithAggregatesFilter<"PartageUniversite"> | boolean
  }

  export type TransactionBlockchainWhereInput = {
    AND?: TransactionBlockchainWhereInput | TransactionBlockchainWhereInput[]
    OR?: TransactionBlockchainWhereInput[]
    NOT?: TransactionBlockchainWhereInput | TransactionBlockchainWhereInput[]
    id?: StringFilter<"TransactionBlockchain"> | string
    referenceBlockchain?: StringFilter<"TransactionBlockchain"> | string
    typeTransaction?: EnumTypeTransactionFilter<"TransactionBlockchain"> | $Enums.TypeTransaction
    ressourceId?: StringNullableFilter<"TransactionBlockchain"> | string | null
    universiteOrigine?: StringFilter<"TransactionBlockchain"> | string
    universiteDestination?: StringNullableFilter<"TransactionBlockchain"> | string | null
    dateTransaction?: DateTimeFilter<"TransactionBlockchain"> | Date | string
    statut?: EnumStatutTransactionFilter<"TransactionBlockchain"> | $Enums.StatutTransaction
    hashTransaction?: StringFilter<"TransactionBlockchain"> | string
    donneesTechniques?: JsonNullableFilter<"TransactionBlockchain">
    ressource?: XOR<RessourceNullableScalarRelationFilter, RessourceWhereInput> | null
    universiteOrigineRel?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
    universiteDestinationRel?: XOR<UniversiteNullableScalarRelationFilter, UniversiteWhereInput> | null
  }

  export type TransactionBlockchainOrderByWithRelationInput = {
    id?: SortOrder
    referenceBlockchain?: SortOrder
    typeTransaction?: SortOrder
    ressourceId?: SortOrderInput | SortOrder
    universiteOrigine?: SortOrder
    universiteDestination?: SortOrderInput | SortOrder
    dateTransaction?: SortOrder
    statut?: SortOrder
    hashTransaction?: SortOrder
    donneesTechniques?: SortOrderInput | SortOrder
    ressource?: RessourceOrderByWithRelationInput
    universiteOrigineRel?: UniversiteOrderByWithRelationInput
    universiteDestinationRel?: UniversiteOrderByWithRelationInput
    _relevance?: TransactionBlockchainOrderByRelevanceInput
  }

  export type TransactionBlockchainWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    referenceBlockchain?: string
    hashTransaction?: string
    AND?: TransactionBlockchainWhereInput | TransactionBlockchainWhereInput[]
    OR?: TransactionBlockchainWhereInput[]
    NOT?: TransactionBlockchainWhereInput | TransactionBlockchainWhereInput[]
    typeTransaction?: EnumTypeTransactionFilter<"TransactionBlockchain"> | $Enums.TypeTransaction
    ressourceId?: StringNullableFilter<"TransactionBlockchain"> | string | null
    universiteOrigine?: StringFilter<"TransactionBlockchain"> | string
    universiteDestination?: StringNullableFilter<"TransactionBlockchain"> | string | null
    dateTransaction?: DateTimeFilter<"TransactionBlockchain"> | Date | string
    statut?: EnumStatutTransactionFilter<"TransactionBlockchain"> | $Enums.StatutTransaction
    donneesTechniques?: JsonNullableFilter<"TransactionBlockchain">
    ressource?: XOR<RessourceNullableScalarRelationFilter, RessourceWhereInput> | null
    universiteOrigineRel?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
    universiteDestinationRel?: XOR<UniversiteNullableScalarRelationFilter, UniversiteWhereInput> | null
  }, "id" | "referenceBlockchain" | "hashTransaction">

  export type TransactionBlockchainOrderByWithAggregationInput = {
    id?: SortOrder
    referenceBlockchain?: SortOrder
    typeTransaction?: SortOrder
    ressourceId?: SortOrderInput | SortOrder
    universiteOrigine?: SortOrder
    universiteDestination?: SortOrderInput | SortOrder
    dateTransaction?: SortOrder
    statut?: SortOrder
    hashTransaction?: SortOrder
    donneesTechniques?: SortOrderInput | SortOrder
    _count?: TransactionBlockchainCountOrderByAggregateInput
    _max?: TransactionBlockchainMaxOrderByAggregateInput
    _min?: TransactionBlockchainMinOrderByAggregateInput
  }

  export type TransactionBlockchainScalarWhereWithAggregatesInput = {
    AND?: TransactionBlockchainScalarWhereWithAggregatesInput | TransactionBlockchainScalarWhereWithAggregatesInput[]
    OR?: TransactionBlockchainScalarWhereWithAggregatesInput[]
    NOT?: TransactionBlockchainScalarWhereWithAggregatesInput | TransactionBlockchainScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TransactionBlockchain"> | string
    referenceBlockchain?: StringWithAggregatesFilter<"TransactionBlockchain"> | string
    typeTransaction?: EnumTypeTransactionWithAggregatesFilter<"TransactionBlockchain"> | $Enums.TypeTransaction
    ressourceId?: StringNullableWithAggregatesFilter<"TransactionBlockchain"> | string | null
    universiteOrigine?: StringWithAggregatesFilter<"TransactionBlockchain"> | string
    universiteDestination?: StringNullableWithAggregatesFilter<"TransactionBlockchain"> | string | null
    dateTransaction?: DateTimeWithAggregatesFilter<"TransactionBlockchain"> | Date | string
    statut?: EnumStatutTransactionWithAggregatesFilter<"TransactionBlockchain"> | $Enums.StatutTransaction
    hashTransaction?: StringWithAggregatesFilter<"TransactionBlockchain"> | string
    donneesTechniques?: JsonNullableWithAggregatesFilter<"TransactionBlockchain">
  }

  export type RessourceWhereInput = {
    AND?: RessourceWhereInput | RessourceWhereInput[]
    OR?: RessourceWhereInput[]
    NOT?: RessourceWhereInput | RessourceWhereInput[]
    id?: StringFilter<"Ressource"> | string
    titre?: StringFilter<"Ressource"> | string
    description?: StringFilter<"Ressource"> | string
    type?: EnumTypeRessourceFilter<"Ressource"> | $Enums.TypeRessource
    langue?: StringFilter<"Ressource"> | string
    urlFichier?: StringFilter<"Ressource"> | string
    urlFichierLocal?: StringNullableFilter<"Ressource"> | string | null
    format?: StringFilter<"Ressource"> | string
    dateCreation?: DateTimeFilter<"Ressource"> | Date | string
    dateModification?: DateTimeFilter<"Ressource"> | Date | string
    estPublique?: BoolFilter<"Ressource"> | boolean
    motsCles?: StringFilter<"Ressource"> | string
    auteurId?: StringNullableFilter<"Ressource"> | string | null
    universiteId?: StringFilter<"Ressource"> | string
    image?: StringNullableFilter<"Ressource"> | string | null
    niveauAcces?: EnumNiveauAccesFilter<"Ressource"> | $Enums.NiveauAcces
    datePublication?: DateTimeNullableFilter<"Ressource"> | Date | string | null
    estValide?: BoolFilter<"Ressource"> | boolean
    estArchive?: BoolFilter<"Ressource"> | boolean
    nomAuteurExterne?: StringNullableFilter<"Ressource"> | string | null
    prenomAuteurExterne?: StringNullableFilter<"Ressource"> | string | null
    affiliationAuteurExterne?: StringNullableFilter<"Ressource"> | string | null
    isbn?: StringNullableFilter<"Ressource"> | string | null
    doi?: StringNullableFilter<"Ressource"> | string | null
    edition?: StringNullableFilter<"Ressource"> | string | null
    anneePublication?: IntNullableFilter<"Ressource"> | number | null
    editeur?: StringNullableFilter<"Ressource"> | string | null
    nbPages?: IntNullableFilter<"Ressource"> | number | null
    categorieBiblio?: EnumCategorieBiblioNullableFilter<"Ressource"> | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFilter<"Ressource"> | boolean
    nbExemplaires?: IntFilter<"Ressource"> | number
    nbDisponibles?: IntFilter<"Ressource"> | number
    coteClassification?: StringNullableFilter<"Ressource"> | string | null
    estEmpruntableExterne?: BoolFilter<"Ressource"> | boolean
    dureeMaxEmpruntExterne?: IntFilter<"Ressource"> | number
    nbMaxExemplairesExterne?: IntFilter<"Ressource"> | number
    necessiteAutorisation?: BoolFilter<"Ressource"> | boolean
    auteur?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    universite?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
    favoris?: FavoriListRelationFilter
    commentaires?: CommentaireListRelationFilter
    notations?: NotationListRelationFilter
    historiques?: HistoriqueAccesListRelationFilter
    collections?: CollectionRessourceListRelationFilter
    partages?: PartageUniversiteListRelationFilter
    exemplaires?: ExemplairePhysiqueListRelationFilter
    reservations?: ReservationListRelationFilter
    recommandations?: RecommandationListRelationFilter
    donneesRecommandation?: DonneesRecommandationListRelationFilter
    transactions?: TransactionBlockchainListRelationFilter
    Notification?: NotificationListRelationFilter
  }

  export type RessourceOrderByWithRelationInput = {
    id?: SortOrder
    titre?: SortOrder
    description?: SortOrder
    type?: SortOrder
    langue?: SortOrder
    urlFichier?: SortOrder
    urlFichierLocal?: SortOrderInput | SortOrder
    format?: SortOrder
    dateCreation?: SortOrder
    dateModification?: SortOrder
    estPublique?: SortOrder
    motsCles?: SortOrder
    auteurId?: SortOrderInput | SortOrder
    universiteId?: SortOrder
    image?: SortOrderInput | SortOrder
    niveauAcces?: SortOrder
    datePublication?: SortOrderInput | SortOrder
    estValide?: SortOrder
    estArchive?: SortOrder
    nomAuteurExterne?: SortOrderInput | SortOrder
    prenomAuteurExterne?: SortOrderInput | SortOrder
    affiliationAuteurExterne?: SortOrderInput | SortOrder
    isbn?: SortOrderInput | SortOrder
    doi?: SortOrderInput | SortOrder
    edition?: SortOrderInput | SortOrder
    anneePublication?: SortOrderInput | SortOrder
    editeur?: SortOrderInput | SortOrder
    nbPages?: SortOrderInput | SortOrder
    categorieBiblio?: SortOrderInput | SortOrder
    estEmpruntable?: SortOrder
    nbExemplaires?: SortOrder
    nbDisponibles?: SortOrder
    coteClassification?: SortOrderInput | SortOrder
    estEmpruntableExterne?: SortOrder
    dureeMaxEmpruntExterne?: SortOrder
    nbMaxExemplairesExterne?: SortOrder
    necessiteAutorisation?: SortOrder
    auteur?: UserOrderByWithRelationInput
    universite?: UniversiteOrderByWithRelationInput
    favoris?: FavoriOrderByRelationAggregateInput
    commentaires?: CommentaireOrderByRelationAggregateInput
    notations?: NotationOrderByRelationAggregateInput
    historiques?: HistoriqueAccesOrderByRelationAggregateInput
    collections?: CollectionRessourceOrderByRelationAggregateInput
    partages?: PartageUniversiteOrderByRelationAggregateInput
    exemplaires?: ExemplairePhysiqueOrderByRelationAggregateInput
    reservations?: ReservationOrderByRelationAggregateInput
    recommandations?: RecommandationOrderByRelationAggregateInput
    donneesRecommandation?: DonneesRecommandationOrderByRelationAggregateInput
    transactions?: TransactionBlockchainOrderByRelationAggregateInput
    Notification?: NotificationOrderByRelationAggregateInput
    _relevance?: RessourceOrderByRelevanceInput
  }

  export type RessourceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RessourceWhereInput | RessourceWhereInput[]
    OR?: RessourceWhereInput[]
    NOT?: RessourceWhereInput | RessourceWhereInput[]
    titre?: StringFilter<"Ressource"> | string
    description?: StringFilter<"Ressource"> | string
    type?: EnumTypeRessourceFilter<"Ressource"> | $Enums.TypeRessource
    langue?: StringFilter<"Ressource"> | string
    urlFichier?: StringFilter<"Ressource"> | string
    urlFichierLocal?: StringNullableFilter<"Ressource"> | string | null
    format?: StringFilter<"Ressource"> | string
    dateCreation?: DateTimeFilter<"Ressource"> | Date | string
    dateModification?: DateTimeFilter<"Ressource"> | Date | string
    estPublique?: BoolFilter<"Ressource"> | boolean
    motsCles?: StringFilter<"Ressource"> | string
    auteurId?: StringNullableFilter<"Ressource"> | string | null
    universiteId?: StringFilter<"Ressource"> | string
    image?: StringNullableFilter<"Ressource"> | string | null
    niveauAcces?: EnumNiveauAccesFilter<"Ressource"> | $Enums.NiveauAcces
    datePublication?: DateTimeNullableFilter<"Ressource"> | Date | string | null
    estValide?: BoolFilter<"Ressource"> | boolean
    estArchive?: BoolFilter<"Ressource"> | boolean
    nomAuteurExterne?: StringNullableFilter<"Ressource"> | string | null
    prenomAuteurExterne?: StringNullableFilter<"Ressource"> | string | null
    affiliationAuteurExterne?: StringNullableFilter<"Ressource"> | string | null
    isbn?: StringNullableFilter<"Ressource"> | string | null
    doi?: StringNullableFilter<"Ressource"> | string | null
    edition?: StringNullableFilter<"Ressource"> | string | null
    anneePublication?: IntNullableFilter<"Ressource"> | number | null
    editeur?: StringNullableFilter<"Ressource"> | string | null
    nbPages?: IntNullableFilter<"Ressource"> | number | null
    categorieBiblio?: EnumCategorieBiblioNullableFilter<"Ressource"> | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFilter<"Ressource"> | boolean
    nbExemplaires?: IntFilter<"Ressource"> | number
    nbDisponibles?: IntFilter<"Ressource"> | number
    coteClassification?: StringNullableFilter<"Ressource"> | string | null
    estEmpruntableExterne?: BoolFilter<"Ressource"> | boolean
    dureeMaxEmpruntExterne?: IntFilter<"Ressource"> | number
    nbMaxExemplairesExterne?: IntFilter<"Ressource"> | number
    necessiteAutorisation?: BoolFilter<"Ressource"> | boolean
    auteur?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    universite?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
    favoris?: FavoriListRelationFilter
    commentaires?: CommentaireListRelationFilter
    notations?: NotationListRelationFilter
    historiques?: HistoriqueAccesListRelationFilter
    collections?: CollectionRessourceListRelationFilter
    partages?: PartageUniversiteListRelationFilter
    exemplaires?: ExemplairePhysiqueListRelationFilter
    reservations?: ReservationListRelationFilter
    recommandations?: RecommandationListRelationFilter
    donneesRecommandation?: DonneesRecommandationListRelationFilter
    transactions?: TransactionBlockchainListRelationFilter
    Notification?: NotificationListRelationFilter
  }, "id">

  export type RessourceOrderByWithAggregationInput = {
    id?: SortOrder
    titre?: SortOrder
    description?: SortOrder
    type?: SortOrder
    langue?: SortOrder
    urlFichier?: SortOrder
    urlFichierLocal?: SortOrderInput | SortOrder
    format?: SortOrder
    dateCreation?: SortOrder
    dateModification?: SortOrder
    estPublique?: SortOrder
    motsCles?: SortOrder
    auteurId?: SortOrderInput | SortOrder
    universiteId?: SortOrder
    image?: SortOrderInput | SortOrder
    niveauAcces?: SortOrder
    datePublication?: SortOrderInput | SortOrder
    estValide?: SortOrder
    estArchive?: SortOrder
    nomAuteurExterne?: SortOrderInput | SortOrder
    prenomAuteurExterne?: SortOrderInput | SortOrder
    affiliationAuteurExterne?: SortOrderInput | SortOrder
    isbn?: SortOrderInput | SortOrder
    doi?: SortOrderInput | SortOrder
    edition?: SortOrderInput | SortOrder
    anneePublication?: SortOrderInput | SortOrder
    editeur?: SortOrderInput | SortOrder
    nbPages?: SortOrderInput | SortOrder
    categorieBiblio?: SortOrderInput | SortOrder
    estEmpruntable?: SortOrder
    nbExemplaires?: SortOrder
    nbDisponibles?: SortOrder
    coteClassification?: SortOrderInput | SortOrder
    estEmpruntableExterne?: SortOrder
    dureeMaxEmpruntExterne?: SortOrder
    nbMaxExemplairesExterne?: SortOrder
    necessiteAutorisation?: SortOrder
    _count?: RessourceCountOrderByAggregateInput
    _avg?: RessourceAvgOrderByAggregateInput
    _max?: RessourceMaxOrderByAggregateInput
    _min?: RessourceMinOrderByAggregateInput
    _sum?: RessourceSumOrderByAggregateInput
  }

  export type RessourceScalarWhereWithAggregatesInput = {
    AND?: RessourceScalarWhereWithAggregatesInput | RessourceScalarWhereWithAggregatesInput[]
    OR?: RessourceScalarWhereWithAggregatesInput[]
    NOT?: RessourceScalarWhereWithAggregatesInput | RessourceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Ressource"> | string
    titre?: StringWithAggregatesFilter<"Ressource"> | string
    description?: StringWithAggregatesFilter<"Ressource"> | string
    type?: EnumTypeRessourceWithAggregatesFilter<"Ressource"> | $Enums.TypeRessource
    langue?: StringWithAggregatesFilter<"Ressource"> | string
    urlFichier?: StringWithAggregatesFilter<"Ressource"> | string
    urlFichierLocal?: StringNullableWithAggregatesFilter<"Ressource"> | string | null
    format?: StringWithAggregatesFilter<"Ressource"> | string
    dateCreation?: DateTimeWithAggregatesFilter<"Ressource"> | Date | string
    dateModification?: DateTimeWithAggregatesFilter<"Ressource"> | Date | string
    estPublique?: BoolWithAggregatesFilter<"Ressource"> | boolean
    motsCles?: StringWithAggregatesFilter<"Ressource"> | string
    auteurId?: StringNullableWithAggregatesFilter<"Ressource"> | string | null
    universiteId?: StringWithAggregatesFilter<"Ressource"> | string
    image?: StringNullableWithAggregatesFilter<"Ressource"> | string | null
    niveauAcces?: EnumNiveauAccesWithAggregatesFilter<"Ressource"> | $Enums.NiveauAcces
    datePublication?: DateTimeNullableWithAggregatesFilter<"Ressource"> | Date | string | null
    estValide?: BoolWithAggregatesFilter<"Ressource"> | boolean
    estArchive?: BoolWithAggregatesFilter<"Ressource"> | boolean
    nomAuteurExterne?: StringNullableWithAggregatesFilter<"Ressource"> | string | null
    prenomAuteurExterne?: StringNullableWithAggregatesFilter<"Ressource"> | string | null
    affiliationAuteurExterne?: StringNullableWithAggregatesFilter<"Ressource"> | string | null
    isbn?: StringNullableWithAggregatesFilter<"Ressource"> | string | null
    doi?: StringNullableWithAggregatesFilter<"Ressource"> | string | null
    edition?: StringNullableWithAggregatesFilter<"Ressource"> | string | null
    anneePublication?: IntNullableWithAggregatesFilter<"Ressource"> | number | null
    editeur?: StringNullableWithAggregatesFilter<"Ressource"> | string | null
    nbPages?: IntNullableWithAggregatesFilter<"Ressource"> | number | null
    categorieBiblio?: EnumCategorieBiblioNullableWithAggregatesFilter<"Ressource"> | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolWithAggregatesFilter<"Ressource"> | boolean
    nbExemplaires?: IntWithAggregatesFilter<"Ressource"> | number
    nbDisponibles?: IntWithAggregatesFilter<"Ressource"> | number
    coteClassification?: StringNullableWithAggregatesFilter<"Ressource"> | string | null
    estEmpruntableExterne?: BoolWithAggregatesFilter<"Ressource"> | boolean
    dureeMaxEmpruntExterne?: IntWithAggregatesFilter<"Ressource"> | number
    nbMaxExemplairesExterne?: IntWithAggregatesFilter<"Ressource"> | number
    necessiteAutorisation?: BoolWithAggregatesFilter<"Ressource"> | boolean
  }

  export type StatistiqueBibliothequeWhereInput = {
    AND?: StatistiqueBibliothequeWhereInput | StatistiqueBibliothequeWhereInput[]
    OR?: StatistiqueBibliothequeWhereInput[]
    NOT?: StatistiqueBibliothequeWhereInput | StatistiqueBibliothequeWhereInput[]
    id?: StringFilter<"StatistiqueBibliotheque"> | string
    universiteId?: StringFilter<"StatistiqueBibliotheque"> | string
    mois?: IntFilter<"StatistiqueBibliotheque"> | number
    annee?: IntFilter<"StatistiqueBibliotheque"> | number
    nbEmprunts?: IntFilter<"StatistiqueBibliotheque"> | number
    nbEmpruntsExternes?: IntFilter<"StatistiqueBibliotheque"> | number
    nbReservations?: IntFilter<"StatistiqueBibliotheque"> | number
    nbReservationsExternes?: IntFilter<"StatistiqueBibliotheque"> | number
    nbRetardsRendu?: IntFilter<"StatistiqueBibliotheque"> | number
    tauxRotation?: FloatNullableFilter<"StatistiqueBibliotheque"> | number | null
    categoriesPlusEmpruntees?: StringNullableFilter<"StatistiqueBibliotheque"> | string | null
    universitesPlusFrequentes?: StringNullableFilter<"StatistiqueBibliotheque"> | string | null
    universite?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
  }

  export type StatistiqueBibliothequeOrderByWithRelationInput = {
    id?: SortOrder
    universiteId?: SortOrder
    mois?: SortOrder
    annee?: SortOrder
    nbEmprunts?: SortOrder
    nbEmpruntsExternes?: SortOrder
    nbReservations?: SortOrder
    nbReservationsExternes?: SortOrder
    nbRetardsRendu?: SortOrder
    tauxRotation?: SortOrderInput | SortOrder
    categoriesPlusEmpruntees?: SortOrderInput | SortOrder
    universitesPlusFrequentes?: SortOrderInput | SortOrder
    universite?: UniversiteOrderByWithRelationInput
    _relevance?: StatistiqueBibliothequeOrderByRelevanceInput
  }

  export type StatistiqueBibliothequeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    universiteId_mois_annee?: StatistiqueBibliothequeUniversiteIdMoisAnneeCompoundUniqueInput
    AND?: StatistiqueBibliothequeWhereInput | StatistiqueBibliothequeWhereInput[]
    OR?: StatistiqueBibliothequeWhereInput[]
    NOT?: StatistiqueBibliothequeWhereInput | StatistiqueBibliothequeWhereInput[]
    universiteId?: StringFilter<"StatistiqueBibliotheque"> | string
    mois?: IntFilter<"StatistiqueBibliotheque"> | number
    annee?: IntFilter<"StatistiqueBibliotheque"> | number
    nbEmprunts?: IntFilter<"StatistiqueBibliotheque"> | number
    nbEmpruntsExternes?: IntFilter<"StatistiqueBibliotheque"> | number
    nbReservations?: IntFilter<"StatistiqueBibliotheque"> | number
    nbReservationsExternes?: IntFilter<"StatistiqueBibliotheque"> | number
    nbRetardsRendu?: IntFilter<"StatistiqueBibliotheque"> | number
    tauxRotation?: FloatNullableFilter<"StatistiqueBibliotheque"> | number | null
    categoriesPlusEmpruntees?: StringNullableFilter<"StatistiqueBibliotheque"> | string | null
    universitesPlusFrequentes?: StringNullableFilter<"StatistiqueBibliotheque"> | string | null
    universite?: XOR<UniversiteScalarRelationFilter, UniversiteWhereInput>
  }, "id" | "universiteId_mois_annee">

  export type StatistiqueBibliothequeOrderByWithAggregationInput = {
    id?: SortOrder
    universiteId?: SortOrder
    mois?: SortOrder
    annee?: SortOrder
    nbEmprunts?: SortOrder
    nbEmpruntsExternes?: SortOrder
    nbReservations?: SortOrder
    nbReservationsExternes?: SortOrder
    nbRetardsRendu?: SortOrder
    tauxRotation?: SortOrderInput | SortOrder
    categoriesPlusEmpruntees?: SortOrderInput | SortOrder
    universitesPlusFrequentes?: SortOrderInput | SortOrder
    _count?: StatistiqueBibliothequeCountOrderByAggregateInput
    _avg?: StatistiqueBibliothequeAvgOrderByAggregateInput
    _max?: StatistiqueBibliothequeMaxOrderByAggregateInput
    _min?: StatistiqueBibliothequeMinOrderByAggregateInput
    _sum?: StatistiqueBibliothequeSumOrderByAggregateInput
  }

  export type StatistiqueBibliothequeScalarWhereWithAggregatesInput = {
    AND?: StatistiqueBibliothequeScalarWhereWithAggregatesInput | StatistiqueBibliothequeScalarWhereWithAggregatesInput[]
    OR?: StatistiqueBibliothequeScalarWhereWithAggregatesInput[]
    NOT?: StatistiqueBibliothequeScalarWhereWithAggregatesInput | StatistiqueBibliothequeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"StatistiqueBibliotheque"> | string
    universiteId?: StringWithAggregatesFilter<"StatistiqueBibliotheque"> | string
    mois?: IntWithAggregatesFilter<"StatistiqueBibliotheque"> | number
    annee?: IntWithAggregatesFilter<"StatistiqueBibliotheque"> | number
    nbEmprunts?: IntWithAggregatesFilter<"StatistiqueBibliotheque"> | number
    nbEmpruntsExternes?: IntWithAggregatesFilter<"StatistiqueBibliotheque"> | number
    nbReservations?: IntWithAggregatesFilter<"StatistiqueBibliotheque"> | number
    nbReservationsExternes?: IntWithAggregatesFilter<"StatistiqueBibliotheque"> | number
    nbRetardsRendu?: IntWithAggregatesFilter<"StatistiqueBibliotheque"> | number
    tauxRotation?: FloatNullableWithAggregatesFilter<"StatistiqueBibliotheque"> | number | null
    categoriesPlusEmpruntees?: StringNullableWithAggregatesFilter<"StatistiqueBibliotheque"> | string | null
    universitesPlusFrequentes?: StringNullableWithAggregatesFilter<"StatistiqueBibliotheque"> | string | null
  }

  export type NotificationWhereInput = {
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    id?: StringFilter<"Notification"> | string
    userId?: StringFilter<"Notification"> | string
    titre?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    dateCreation?: DateTimeFilter<"Notification"> | Date | string
    estLue?: BoolFilter<"Notification"> | boolean
    typeNotification?: EnumTypeNotificationFilter<"Notification"> | $Enums.TypeNotification
    ressourceId?: StringNullableFilter<"Notification"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ressource?: XOR<RessourceNullableScalarRelationFilter, RessourceWhereInput> | null
  }

  export type NotificationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    titre?: SortOrder
    message?: SortOrder
    dateCreation?: SortOrder
    estLue?: SortOrder
    typeNotification?: SortOrder
    ressourceId?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    ressource?: RessourceOrderByWithRelationInput
    _relevance?: NotificationOrderByRelevanceInput
  }

  export type NotificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    userId?: StringFilter<"Notification"> | string
    titre?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    dateCreation?: DateTimeFilter<"Notification"> | Date | string
    estLue?: BoolFilter<"Notification"> | boolean
    typeNotification?: EnumTypeNotificationFilter<"Notification"> | $Enums.TypeNotification
    ressourceId?: StringNullableFilter<"Notification"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ressource?: XOR<RessourceNullableScalarRelationFilter, RessourceWhereInput> | null
  }, "id">

  export type NotificationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    titre?: SortOrder
    message?: SortOrder
    dateCreation?: SortOrder
    estLue?: SortOrder
    typeNotification?: SortOrder
    ressourceId?: SortOrderInput | SortOrder
    _count?: NotificationCountOrderByAggregateInput
    _max?: NotificationMaxOrderByAggregateInput
    _min?: NotificationMinOrderByAggregateInput
  }

  export type NotificationScalarWhereWithAggregatesInput = {
    AND?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    OR?: NotificationScalarWhereWithAggregatesInput[]
    NOT?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Notification"> | string
    userId?: StringWithAggregatesFilter<"Notification"> | string
    titre?: StringWithAggregatesFilter<"Notification"> | string
    message?: StringWithAggregatesFilter<"Notification"> | string
    dateCreation?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
    estLue?: BoolWithAggregatesFilter<"Notification"> | boolean
    typeNotification?: EnumTypeNotificationWithAggregatesFilter<"Notification"> | $Enums.TypeNotification
    ressourceId?: StringNullableWithAggregatesFilter<"Notification"> | string | null
  }

  export type JournalAuditWhereInput = {
    AND?: JournalAuditWhereInput | JournalAuditWhereInput[]
    OR?: JournalAuditWhereInput[]
    NOT?: JournalAuditWhereInput | JournalAuditWhereInput[]
    id?: StringFilter<"JournalAudit"> | string
    userId?: StringNullableFilter<"JournalAudit"> | string | null
    action?: StringFilter<"JournalAudit"> | string
    entite?: StringFilter<"JournalAudit"> | string
    entiteId?: StringFilter<"JournalAudit"> | string
    dateAction?: DateTimeFilter<"JournalAudit"> | Date | string
    detailsAction?: JsonFilter<"JournalAudit">
    ipAdresse?: StringFilter<"JournalAudit"> | string
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type JournalAuditOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    action?: SortOrder
    entite?: SortOrder
    entiteId?: SortOrder
    dateAction?: SortOrder
    detailsAction?: SortOrder
    ipAdresse?: SortOrder
    user?: UserOrderByWithRelationInput
    _relevance?: JournalAuditOrderByRelevanceInput
  }

  export type JournalAuditWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: JournalAuditWhereInput | JournalAuditWhereInput[]
    OR?: JournalAuditWhereInput[]
    NOT?: JournalAuditWhereInput | JournalAuditWhereInput[]
    userId?: StringNullableFilter<"JournalAudit"> | string | null
    action?: StringFilter<"JournalAudit"> | string
    entite?: StringFilter<"JournalAudit"> | string
    entiteId?: StringFilter<"JournalAudit"> | string
    dateAction?: DateTimeFilter<"JournalAudit"> | Date | string
    detailsAction?: JsonFilter<"JournalAudit">
    ipAdresse?: StringFilter<"JournalAudit"> | string
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type JournalAuditOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    action?: SortOrder
    entite?: SortOrder
    entiteId?: SortOrder
    dateAction?: SortOrder
    detailsAction?: SortOrder
    ipAdresse?: SortOrder
    _count?: JournalAuditCountOrderByAggregateInput
    _max?: JournalAuditMaxOrderByAggregateInput
    _min?: JournalAuditMinOrderByAggregateInput
  }

  export type JournalAuditScalarWhereWithAggregatesInput = {
    AND?: JournalAuditScalarWhereWithAggregatesInput | JournalAuditScalarWhereWithAggregatesInput[]
    OR?: JournalAuditScalarWhereWithAggregatesInput[]
    NOT?: JournalAuditScalarWhereWithAggregatesInput | JournalAuditScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"JournalAudit"> | string
    userId?: StringNullableWithAggregatesFilter<"JournalAudit"> | string | null
    action?: StringWithAggregatesFilter<"JournalAudit"> | string
    entite?: StringWithAggregatesFilter<"JournalAudit"> | string
    entiteId?: StringWithAggregatesFilter<"JournalAudit"> | string
    dateAction?: DateTimeWithAggregatesFilter<"JournalAudit"> | Date | string
    detailsAction?: JsonWithAggregatesFilter<"JournalAudit">
    ipAdresse?: StringWithAggregatesFilter<"JournalAudit"> | string
  }

  export type ConventionInteruniversitaireCreateInput = {
    id?: string
    dateDebut: Date | string
    dateFin?: Date | string | null
    estActive?: boolean
    typeConvention?: $Enums.TypeConvention
    detailsConvention?: string | null
    documentsUrl?: string | null
    contactUniversite1?: string | null
    contactUniversite2?: string | null
    universite1: UniversiteCreateNestedOneWithoutConventionsSourceInput
    universite2: UniversiteCreateNestedOneWithoutConventionsDestinationInput
  }

  export type ConventionInteruniversitaireUncheckedCreateInput = {
    id?: string
    universiteId1: string
    universiteId2: string
    dateDebut: Date | string
    dateFin?: Date | string | null
    estActive?: boolean
    typeConvention?: $Enums.TypeConvention
    detailsConvention?: string | null
    documentsUrl?: string | null
    contactUniversite1?: string | null
    contactUniversite2?: string | null
  }

  export type ConventionInteruniversitaireUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    typeConvention?: EnumTypeConventionFieldUpdateOperationsInput | $Enums.TypeConvention
    detailsConvention?: NullableStringFieldUpdateOperationsInput | string | null
    documentsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite1?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite2?: NullableStringFieldUpdateOperationsInput | string | null
    universite1?: UniversiteUpdateOneRequiredWithoutConventionsSourceNestedInput
    universite2?: UniversiteUpdateOneRequiredWithoutConventionsDestinationNestedInput
  }

  export type ConventionInteruniversitaireUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    universiteId1?: StringFieldUpdateOperationsInput | string
    universiteId2?: StringFieldUpdateOperationsInput | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    typeConvention?: EnumTypeConventionFieldUpdateOperationsInput | $Enums.TypeConvention
    detailsConvention?: NullableStringFieldUpdateOperationsInput | string | null
    documentsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite1?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite2?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ConventionInteruniversitaireCreateManyInput = {
    id?: string
    universiteId1: string
    universiteId2: string
    dateDebut: Date | string
    dateFin?: Date | string | null
    estActive?: boolean
    typeConvention?: $Enums.TypeConvention
    detailsConvention?: string | null
    documentsUrl?: string | null
    contactUniversite1?: string | null
    contactUniversite2?: string | null
  }

  export type ConventionInteruniversitaireUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    typeConvention?: EnumTypeConventionFieldUpdateOperationsInput | $Enums.TypeConvention
    detailsConvention?: NullableStringFieldUpdateOperationsInput | string | null
    documentsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite1?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite2?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ConventionInteruniversitaireUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    universiteId1?: StringFieldUpdateOperationsInput | string
    universiteId2?: StringFieldUpdateOperationsInput | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    typeConvention?: EnumTypeConventionFieldUpdateOperationsInput | $Enums.TypeConvention
    detailsConvention?: NullableStringFieldUpdateOperationsInput | string | null
    documentsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite1?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite2?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StatistiqueInteruniversitaireCreateInput = {
    id?: string
    mois: number
    annee: number
    nbEmprunts?: number
    nbReservations?: number
    ressourcesPlusConsultees?: string | null
    domainesPlusConsultes?: string | null
    universiteSourceRel: UniversiteCreateNestedOneWithoutStatistiquesSourceInput
    universiteDestinationRel: UniversiteCreateNestedOneWithoutStatistiquesDestinationInput
  }

  export type StatistiqueInteruniversitaireUncheckedCreateInput = {
    id?: string
    universiteSource: string
    universiteDestination: string
    mois: number
    annee: number
    nbEmprunts?: number
    nbReservations?: number
    ressourcesPlusConsultees?: string | null
    domainesPlusConsultes?: string | null
  }

  export type StatistiqueInteruniversitaireUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mois?: IntFieldUpdateOperationsInput | number
    annee?: IntFieldUpdateOperationsInput | number
    nbEmprunts?: IntFieldUpdateOperationsInput | number
    nbReservations?: IntFieldUpdateOperationsInput | number
    ressourcesPlusConsultees?: NullableStringFieldUpdateOperationsInput | string | null
    domainesPlusConsultes?: NullableStringFieldUpdateOperationsInput | string | null
    universiteSourceRel?: UniversiteUpdateOneRequiredWithoutStatistiquesSourceNestedInput
    universiteDestinationRel?: UniversiteUpdateOneRequiredWithoutStatistiquesDestinationNestedInput
  }

  export type StatistiqueInteruniversitaireUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    universiteSource?: StringFieldUpdateOperationsInput | string
    universiteDestination?: StringFieldUpdateOperationsInput | string
    mois?: IntFieldUpdateOperationsInput | number
    annee?: IntFieldUpdateOperationsInput | number
    nbEmprunts?: IntFieldUpdateOperationsInput | number
    nbReservations?: IntFieldUpdateOperationsInput | number
    ressourcesPlusConsultees?: NullableStringFieldUpdateOperationsInput | string | null
    domainesPlusConsultes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StatistiqueInteruniversitaireCreateManyInput = {
    id?: string
    universiteSource: string
    universiteDestination: string
    mois: number
    annee: number
    nbEmprunts?: number
    nbReservations?: number
    ressourcesPlusConsultees?: string | null
    domainesPlusConsultes?: string | null
  }

  export type StatistiqueInteruniversitaireUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    mois?: IntFieldUpdateOperationsInput | number
    annee?: IntFieldUpdateOperationsInput | number
    nbEmprunts?: IntFieldUpdateOperationsInput | number
    nbReservations?: IntFieldUpdateOperationsInput | number
    ressourcesPlusConsultees?: NullableStringFieldUpdateOperationsInput | string | null
    domainesPlusConsultes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StatistiqueInteruniversitaireUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    universiteSource?: StringFieldUpdateOperationsInput | string
    universiteDestination?: StringFieldUpdateOperationsInput | string
    mois?: IntFieldUpdateOperationsInput | number
    annee?: IntFieldUpdateOperationsInput | number
    nbEmprunts?: IntFieldUpdateOperationsInput | number
    nbReservations?: IntFieldUpdateOperationsInput | number
    ressourcesPlusConsultees?: NullableStringFieldUpdateOperationsInput | string | null
    domainesPlusConsultes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReservationCreateInput = {
    id?: string
    dateReservation?: Date | string
    dateDebut: Date | string
    dateFin: Date | string
    statut?: $Enums.StatutReservation
    commentaire?: string | null
    motifReservation?: string | null
    validePar?: string | null
    user?: UserCreateNestedOneWithoutReservationsInput
    ressource: RessourceCreateNestedOneWithoutReservationsInput
    universiteEmprunteurRel: UniversiteCreateNestedOneWithoutReservationsInput
  }

  export type ReservationUncheckedCreateInput = {
    id?: string
    userId?: string | null
    ressourceId: string
    dateReservation?: Date | string
    dateDebut: Date | string
    dateFin: Date | string
    statut?: $Enums.StatutReservation
    commentaire?: string | null
    universiteEmprunteur: string
    motifReservation?: string | null
    validePar?: string | null
  }

  export type ReservationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateReservation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutReservationFieldUpdateOperationsInput | $Enums.StatutReservation
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    motifReservation?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutReservationsNestedInput
    ressource?: RessourceUpdateOneRequiredWithoutReservationsNestedInput
    universiteEmprunteurRel?: UniversiteUpdateOneRequiredWithoutReservationsNestedInput
  }

  export type ReservationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateReservation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutReservationFieldUpdateOperationsInput | $Enums.StatutReservation
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    universiteEmprunteur?: StringFieldUpdateOperationsInput | string
    motifReservation?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReservationCreateManyInput = {
    id?: string
    userId?: string | null
    ressourceId: string
    dateReservation?: Date | string
    dateDebut: Date | string
    dateFin: Date | string
    statut?: $Enums.StatutReservation
    commentaire?: string | null
    universiteEmprunteur: string
    motifReservation?: string | null
    validePar?: string | null
  }

  export type ReservationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateReservation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutReservationFieldUpdateOperationsInput | $Enums.StatutReservation
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    motifReservation?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReservationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateReservation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutReservationFieldUpdateOperationsInput | $Enums.StatutReservation
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    universiteEmprunteur?: StringFieldUpdateOperationsInput | string
    motifReservation?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ExemplairePhysiqueCreateInput = {
    id?: string
    cote: string
    etat?: $Enums.EtatExemplaire
    disponible?: boolean
    localisation: string
    dateAcquisition?: Date | string | null
    estReservableExterne?: boolean | null
    estEmpruntableExterne?: boolean | null
    ressource: RessourceCreateNestedOneWithoutExemplairesInput
    emprunts?: EmpruntCreateNestedManyWithoutExemplaireInput
  }

  export type ExemplairePhysiqueUncheckedCreateInput = {
    id?: string
    ressourceId: string
    cote: string
    etat?: $Enums.EtatExemplaire
    disponible?: boolean
    localisation: string
    dateAcquisition?: Date | string | null
    estReservableExterne?: boolean | null
    estEmpruntableExterne?: boolean | null
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutExemplaireInput
  }

  export type ExemplairePhysiqueUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cote?: StringFieldUpdateOperationsInput | string
    etat?: EnumEtatExemplaireFieldUpdateOperationsInput | $Enums.EtatExemplaire
    disponible?: BoolFieldUpdateOperationsInput | boolean
    localisation?: StringFieldUpdateOperationsInput | string
    dateAcquisition?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estReservableExterne?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estEmpruntableExterne?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ressource?: RessourceUpdateOneRequiredWithoutExemplairesNestedInput
    emprunts?: EmpruntUpdateManyWithoutExemplaireNestedInput
  }

  export type ExemplairePhysiqueUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    cote?: StringFieldUpdateOperationsInput | string
    etat?: EnumEtatExemplaireFieldUpdateOperationsInput | $Enums.EtatExemplaire
    disponible?: BoolFieldUpdateOperationsInput | boolean
    localisation?: StringFieldUpdateOperationsInput | string
    dateAcquisition?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estReservableExterne?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estEmpruntableExterne?: NullableBoolFieldUpdateOperationsInput | boolean | null
    emprunts?: EmpruntUncheckedUpdateManyWithoutExemplaireNestedInput
  }

  export type ExemplairePhysiqueCreateManyInput = {
    id?: string
    ressourceId: string
    cote: string
    etat?: $Enums.EtatExemplaire
    disponible?: boolean
    localisation: string
    dateAcquisition?: Date | string | null
    estReservableExterne?: boolean | null
    estEmpruntableExterne?: boolean | null
  }

  export type ExemplairePhysiqueUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    cote?: StringFieldUpdateOperationsInput | string
    etat?: EnumEtatExemplaireFieldUpdateOperationsInput | $Enums.EtatExemplaire
    disponible?: BoolFieldUpdateOperationsInput | boolean
    localisation?: StringFieldUpdateOperationsInput | string
    dateAcquisition?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estReservableExterne?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estEmpruntableExterne?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ExemplairePhysiqueUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    cote?: StringFieldUpdateOperationsInput | string
    etat?: EnumEtatExemplaireFieldUpdateOperationsInput | $Enums.EtatExemplaire
    disponible?: BoolFieldUpdateOperationsInput | boolean
    localisation?: StringFieldUpdateOperationsInput | string
    dateAcquisition?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estReservableExterne?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estEmpruntableExterne?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type EmpruntCreateInput = {
    id?: string
    dateEmprunt?: Date | string
    dateRetourPrevue: Date | string
    dateRetourEffective?: Date | string | null
    statut?: $Enums.StatutEmprunt
    commentaire?: string | null
    estEmpruntExterne?: boolean
    motifEmprunt?: string | null
    validePar?: string | null
    exemplaire: ExemplairePhysiqueCreateNestedOneWithoutEmpruntsInput
    user: UserCreateNestedOneWithoutEmpruntsInput
    universiteEmprunteurRel: UniversiteCreateNestedOneWithoutEmpruntsInput
  }

  export type EmpruntUncheckedCreateInput = {
    id?: string
    exemplaireId: string
    userId: string
    dateEmprunt?: Date | string
    dateRetourPrevue: Date | string
    dateRetourEffective?: Date | string | null
    statut?: $Enums.StatutEmprunt
    commentaire?: string | null
    universiteEmprunteur: string
    estEmpruntExterne?: boolean
    motifEmprunt?: string | null
    validePar?: string | null
  }

  export type EmpruntUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateEmprunt?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourPrevue?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourEffective?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statut?: EnumStatutEmpruntFieldUpdateOperationsInput | $Enums.StatutEmprunt
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntExterne?: BoolFieldUpdateOperationsInput | boolean
    motifEmprunt?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
    exemplaire?: ExemplairePhysiqueUpdateOneRequiredWithoutEmpruntsNestedInput
    user?: UserUpdateOneRequiredWithoutEmpruntsNestedInput
    universiteEmprunteurRel?: UniversiteUpdateOneRequiredWithoutEmpruntsNestedInput
  }

  export type EmpruntUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    exemplaireId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dateEmprunt?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourPrevue?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourEffective?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statut?: EnumStatutEmpruntFieldUpdateOperationsInput | $Enums.StatutEmprunt
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    universiteEmprunteur?: StringFieldUpdateOperationsInput | string
    estEmpruntExterne?: BoolFieldUpdateOperationsInput | boolean
    motifEmprunt?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EmpruntCreateManyInput = {
    id?: string
    exemplaireId: string
    userId: string
    dateEmprunt?: Date | string
    dateRetourPrevue: Date | string
    dateRetourEffective?: Date | string | null
    statut?: $Enums.StatutEmprunt
    commentaire?: string | null
    universiteEmprunteur: string
    estEmpruntExterne?: boolean
    motifEmprunt?: string | null
    validePar?: string | null
  }

  export type EmpruntUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateEmprunt?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourPrevue?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourEffective?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statut?: EnumStatutEmpruntFieldUpdateOperationsInput | $Enums.StatutEmprunt
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntExterne?: BoolFieldUpdateOperationsInput | boolean
    motifEmprunt?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EmpruntUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    exemplaireId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dateEmprunt?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourPrevue?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourEffective?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statut?: EnumStatutEmpruntFieldUpdateOperationsInput | $Enums.StatutEmprunt
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    universiteEmprunteur?: StringFieldUpdateOperationsInput | string
    estEmpruntExterne?: BoolFieldUpdateOperationsInput | boolean
    motifEmprunt?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RecommandationCreateInput = {
    id?: string
    dateRecommandation?: Date | string
    score: number
    motif: $Enums.MotifRecommandation
    estVue?: boolean
    estInteruniversitaire?: boolean
    user: UserCreateNestedOneWithoutRecommandationsInput
    ressource: RessourceCreateNestedOneWithoutRecommandationsInput
    universiteSourceRel?: UniversiteCreateNestedOneWithoutRecommandationsSourceInput
  }

  export type RecommandationUncheckedCreateInput = {
    id?: string
    userId: string
    ressourceId: string
    dateRecommandation?: Date | string
    score: number
    motif: $Enums.MotifRecommandation
    estVue?: boolean
    estInteruniversitaire?: boolean
    universiteSource?: string | null
  }

  export type RecommandationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateRecommandation?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    motif?: EnumMotifRecommandationFieldUpdateOperationsInput | $Enums.MotifRecommandation
    estVue?: BoolFieldUpdateOperationsInput | boolean
    estInteruniversitaire?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutRecommandationsNestedInput
    ressource?: RessourceUpdateOneRequiredWithoutRecommandationsNestedInput
    universiteSourceRel?: UniversiteUpdateOneWithoutRecommandationsSourceNestedInput
  }

  export type RecommandationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateRecommandation?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    motif?: EnumMotifRecommandationFieldUpdateOperationsInput | $Enums.MotifRecommandation
    estVue?: BoolFieldUpdateOperationsInput | boolean
    estInteruniversitaire?: BoolFieldUpdateOperationsInput | boolean
    universiteSource?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RecommandationCreateManyInput = {
    id?: string
    userId: string
    ressourceId: string
    dateRecommandation?: Date | string
    score: number
    motif: $Enums.MotifRecommandation
    estVue?: boolean
    estInteruniversitaire?: boolean
    universiteSource?: string | null
  }

  export type RecommandationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateRecommandation?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    motif?: EnumMotifRecommandationFieldUpdateOperationsInput | $Enums.MotifRecommandation
    estVue?: BoolFieldUpdateOperationsInput | boolean
    estInteruniversitaire?: BoolFieldUpdateOperationsInput | boolean
  }

  export type RecommandationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateRecommandation?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    motif?: EnumMotifRecommandationFieldUpdateOperationsInput | $Enums.MotifRecommandation
    estVue?: BoolFieldUpdateOperationsInput | boolean
    estInteruniversitaire?: BoolFieldUpdateOperationsInput | boolean
    universiteSource?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UniversiteCreateInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteUncheckedCreateInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserUncheckedCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceUncheckedCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesUncheckedCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUncheckedUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUncheckedUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUncheckedUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteCreateManyInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
  }

  export type UniversiteUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UniversiteUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UserCreateInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    universite: UniversiteCreateNestedOneWithoutUsersInput
    contributions?: RessourceCreateNestedManyWithoutAuteurInput
    favoris?: FavoriCreateNestedManyWithoutUserInput
    commentaires?: CommentaireCreateNestedManyWithoutUserInput
    notations?: NotationCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutUserInput
    collections?: CollectionCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
    emprunts?: EmpruntCreateNestedManyWithoutUserInput
    recommandations?: RecommandationCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    universiteId: string
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    contributions?: RessourceUncheckedCreateNestedManyWithoutAuteurInput
    favoris?: FavoriUncheckedCreateNestedManyWithoutUserInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutUserInput
    notations?: NotationUncheckedCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutUserInput
    collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUserInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditUncheckedCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universite?: UniversiteUpdateOneRequiredWithoutUsersNestedInput
    contributions?: RessourceUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUpdateManyWithoutUserNestedInput
    notations?: NotationUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutUserNestedInput
    collections?: CollectionUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUpdateManyWithoutUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    universiteId?: StringFieldUpdateOperationsInput | string
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contributions?: RessourceUncheckedUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUncheckedUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutUserNestedInput
    notations?: NotationUncheckedUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutUserNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUncheckedUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    universiteId: string
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    universiteId?: StringFieldUpdateOperationsInput | string
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FavoriCreateInput = {
    id?: string
    dateAjout?: Date | string
    note?: string | null
    user: UserCreateNestedOneWithoutFavorisInput
    ressource: RessourceCreateNestedOneWithoutFavorisInput
  }

  export type FavoriUncheckedCreateInput = {
    id?: string
    userId: string
    ressourceId: string
    dateAjout?: Date | string
    note?: string | null
  }

  export type FavoriUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutFavorisNestedInput
    ressource?: RessourceUpdateOneRequiredWithoutFavorisNestedInput
  }

  export type FavoriUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FavoriCreateManyInput = {
    id?: string
    userId: string
    ressourceId: string
    dateAjout?: Date | string
    note?: string | null
  }

  export type FavoriUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FavoriUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommentaireCreateInput = {
    id?: string
    contenu: string
    dateCreation?: Date | string
    estModere?: boolean
    user: UserCreateNestedOneWithoutCommentairesInput
    ressource: RessourceCreateNestedOneWithoutCommentairesInput
  }

  export type CommentaireUncheckedCreateInput = {
    id?: string
    userId: string
    ressourceId: string
    contenu: string
    dateCreation?: Date | string
    estModere?: boolean
  }

  export type CommentaireUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    contenu?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estModere?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutCommentairesNestedInput
    ressource?: RessourceUpdateOneRequiredWithoutCommentairesNestedInput
  }

  export type CommentaireUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    contenu?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estModere?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CommentaireCreateManyInput = {
    id?: string
    userId: string
    ressourceId: string
    contenu: string
    dateCreation?: Date | string
    estModere?: boolean
  }

  export type CommentaireUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    contenu?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estModere?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CommentaireUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    contenu?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estModere?: BoolFieldUpdateOperationsInput | boolean
  }

  export type NotationCreateInput = {
    id?: string
    note: number
    dateNotation?: Date | string
    user: UserCreateNestedOneWithoutNotationsInput
    ressource: RessourceCreateNestedOneWithoutNotationsInput
  }

  export type NotationUncheckedCreateInput = {
    id?: string
    userId: string
    ressourceId: string
    note: number
    dateNotation?: Date | string
  }

  export type NotationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: IntFieldUpdateOperationsInput | number
    dateNotation?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutNotationsNestedInput
    ressource?: RessourceUpdateOneRequiredWithoutNotationsNestedInput
  }

  export type NotationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    note?: IntFieldUpdateOperationsInput | number
    dateNotation?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotationCreateManyInput = {
    id?: string
    userId: string
    ressourceId: string
    note: number
    dateNotation?: Date | string
  }

  export type NotationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: IntFieldUpdateOperationsInput | number
    dateNotation?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    note?: IntFieldUpdateOperationsInput | number
    dateNotation?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistoriqueAccesCreateInput = {
    id?: string
    dateAcces?: Date | string
    typeAcces: $Enums.TypeAcces
    ipAcces: string
    user: UserCreateNestedOneWithoutHistoriquesInput
    ressource: RessourceCreateNestedOneWithoutHistoriquesInput
    universiteSrcRel?: UniversiteCreateNestedOneWithoutHistoriqueAccesInput
  }

  export type HistoriqueAccesUncheckedCreateInput = {
    id?: string
    userId: string
    ressourceId: string
    dateAcces?: Date | string
    typeAcces: $Enums.TypeAcces
    ipAcces: string
    universiteSrc?: string | null
  }

  export type HistoriqueAccesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateAcces?: DateTimeFieldUpdateOperationsInput | Date | string
    typeAcces?: EnumTypeAccesFieldUpdateOperationsInput | $Enums.TypeAcces
    ipAcces?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneRequiredWithoutHistoriquesNestedInput
    ressource?: RessourceUpdateOneRequiredWithoutHistoriquesNestedInput
    universiteSrcRel?: UniversiteUpdateOneWithoutHistoriqueAccesNestedInput
  }

  export type HistoriqueAccesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateAcces?: DateTimeFieldUpdateOperationsInput | Date | string
    typeAcces?: EnumTypeAccesFieldUpdateOperationsInput | $Enums.TypeAcces
    ipAcces?: StringFieldUpdateOperationsInput | string
    universiteSrc?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type HistoriqueAccesCreateManyInput = {
    id?: string
    userId: string
    ressourceId: string
    dateAcces?: Date | string
    typeAcces: $Enums.TypeAcces
    ipAcces: string
    universiteSrc?: string | null
  }

  export type HistoriqueAccesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateAcces?: DateTimeFieldUpdateOperationsInput | Date | string
    typeAcces?: EnumTypeAccesFieldUpdateOperationsInput | $Enums.TypeAcces
    ipAcces?: StringFieldUpdateOperationsInput | string
  }

  export type HistoriqueAccesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateAcces?: DateTimeFieldUpdateOperationsInput | Date | string
    typeAcces?: EnumTypeAccesFieldUpdateOperationsInput | $Enums.TypeAcces
    ipAcces?: StringFieldUpdateOperationsInput | string
    universiteSrc?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DonneesRecommandationCreateInput = {
    id?: string
    score: number
    typeInteraction: $Enums.TypeInteraction
    dateDonnee?: Date | string
    user: UserCreateNestedOneWithoutDonneesRecommandationInput
    ressource: RessourceCreateNestedOneWithoutDonneesRecommandationInput
  }

  export type DonneesRecommandationUncheckedCreateInput = {
    id?: string
    userId: string
    ressourceId: string
    score: number
    typeInteraction: $Enums.TypeInteraction
    dateDonnee?: Date | string
  }

  export type DonneesRecommandationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    score?: FloatFieldUpdateOperationsInput | number
    typeInteraction?: EnumTypeInteractionFieldUpdateOperationsInput | $Enums.TypeInteraction
    dateDonnee?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutDonneesRecommandationNestedInput
    ressource?: RessourceUpdateOneRequiredWithoutDonneesRecommandationNestedInput
  }

  export type DonneesRecommandationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    score?: FloatFieldUpdateOperationsInput | number
    typeInteraction?: EnumTypeInteractionFieldUpdateOperationsInput | $Enums.TypeInteraction
    dateDonnee?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonneesRecommandationCreateManyInput = {
    id?: string
    userId: string
    ressourceId: string
    score: number
    typeInteraction: $Enums.TypeInteraction
    dateDonnee?: Date | string
  }

  export type DonneesRecommandationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    score?: FloatFieldUpdateOperationsInput | number
    typeInteraction?: EnumTypeInteractionFieldUpdateOperationsInput | $Enums.TypeInteraction
    dateDonnee?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonneesRecommandationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    score?: FloatFieldUpdateOperationsInput | number
    typeInteraction?: EnumTypeInteractionFieldUpdateOperationsInput | $Enums.TypeInteraction
    dateDonnee?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CollectionCreateInput = {
    id?: string
    nom: string
    description?: string | null
    estPublique?: boolean
    dateCreation?: Date | string
    user: UserCreateNestedOneWithoutCollectionsInput
    ressources?: CollectionRessourceCreateNestedManyWithoutCollectionInput
  }

  export type CollectionUncheckedCreateInput = {
    id?: string
    userId: string
    nom: string
    description?: string | null
    estPublique?: boolean
    dateCreation?: Date | string
    ressources?: CollectionRessourceUncheckedCreateNestedManyWithoutCollectionInput
  }

  export type CollectionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCollectionsNestedInput
    ressources?: CollectionRessourceUpdateManyWithoutCollectionNestedInput
  }

  export type CollectionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    ressources?: CollectionRessourceUncheckedUpdateManyWithoutCollectionNestedInput
  }

  export type CollectionCreateManyInput = {
    id?: string
    userId: string
    nom: string
    description?: string | null
    estPublique?: boolean
    dateCreation?: Date | string
  }

  export type CollectionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CollectionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CollectionRessourceCreateInput = {
    id?: string
    dateAjout?: Date | string
    notes?: string | null
    collection: CollectionCreateNestedOneWithoutRessourcesInput
    ressource: RessourceCreateNestedOneWithoutCollectionsInput
  }

  export type CollectionRessourceUncheckedCreateInput = {
    id?: string
    collectionId: string
    ressourceId: string
    dateAjout?: Date | string
    notes?: string | null
  }

  export type CollectionRessourceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    collection?: CollectionUpdateOneRequiredWithoutRessourcesNestedInput
    ressource?: RessourceUpdateOneRequiredWithoutCollectionsNestedInput
  }

  export type CollectionRessourceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    collectionId?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CollectionRessourceCreateManyInput = {
    id?: string
    collectionId: string
    ressourceId: string
    dateAjout?: Date | string
    notes?: string | null
  }

  export type CollectionRessourceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CollectionRessourceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    collectionId?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PartageUniversiteCreateInput = {
    id?: string
    datePartage?: Date | string
    estActif?: boolean
    ressource: RessourceCreateNestedOneWithoutPartagesInput
    universiteSourceRel: UniversiteCreateNestedOneWithoutPartagesSourceInput
    universiteDestinationRel: UniversiteCreateNestedOneWithoutPartagesDestinationInput
  }

  export type PartageUniversiteUncheckedCreateInput = {
    id?: string
    ressourceId: string
    universiteSource: string
    universiteDestination: string
    datePartage?: Date | string
    estActif?: boolean
  }

  export type PartageUniversiteUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    datePartage?: DateTimeFieldUpdateOperationsInput | Date | string
    estActif?: BoolFieldUpdateOperationsInput | boolean
    ressource?: RessourceUpdateOneRequiredWithoutPartagesNestedInput
    universiteSourceRel?: UniversiteUpdateOneRequiredWithoutPartagesSourceNestedInput
    universiteDestinationRel?: UniversiteUpdateOneRequiredWithoutPartagesDestinationNestedInput
  }

  export type PartageUniversiteUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    universiteSource?: StringFieldUpdateOperationsInput | string
    universiteDestination?: StringFieldUpdateOperationsInput | string
    datePartage?: DateTimeFieldUpdateOperationsInput | Date | string
    estActif?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PartageUniversiteCreateManyInput = {
    id?: string
    ressourceId: string
    universiteSource: string
    universiteDestination: string
    datePartage?: Date | string
    estActif?: boolean
  }

  export type PartageUniversiteUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    datePartage?: DateTimeFieldUpdateOperationsInput | Date | string
    estActif?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PartageUniversiteUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    universiteSource?: StringFieldUpdateOperationsInput | string
    universiteDestination?: StringFieldUpdateOperationsInput | string
    datePartage?: DateTimeFieldUpdateOperationsInput | Date | string
    estActif?: BoolFieldUpdateOperationsInput | boolean
  }

  export type TransactionBlockchainCreateInput = {
    id?: string
    referenceBlockchain: string
    typeTransaction: $Enums.TypeTransaction
    dateTransaction?: Date | string
    statut: $Enums.StatutTransaction
    hashTransaction: string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
    ressource?: RessourceCreateNestedOneWithoutTransactionsInput
    universiteOrigineRel: UniversiteCreateNestedOneWithoutTransactionsOrigineInput
    universiteDestinationRel?: UniversiteCreateNestedOneWithoutTransactionsDestinationInput
  }

  export type TransactionBlockchainUncheckedCreateInput = {
    id?: string
    referenceBlockchain: string
    typeTransaction: $Enums.TypeTransaction
    ressourceId?: string | null
    universiteOrigine: string
    universiteDestination?: string | null
    dateTransaction?: Date | string
    statut: $Enums.StatutTransaction
    hashTransaction: string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TransactionBlockchainUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceBlockchain?: StringFieldUpdateOperationsInput | string
    typeTransaction?: EnumTypeTransactionFieldUpdateOperationsInput | $Enums.TypeTransaction
    dateTransaction?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutTransactionFieldUpdateOperationsInput | $Enums.StatutTransaction
    hashTransaction?: StringFieldUpdateOperationsInput | string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
    ressource?: RessourceUpdateOneWithoutTransactionsNestedInput
    universiteOrigineRel?: UniversiteUpdateOneRequiredWithoutTransactionsOrigineNestedInput
    universiteDestinationRel?: UniversiteUpdateOneWithoutTransactionsDestinationNestedInput
  }

  export type TransactionBlockchainUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceBlockchain?: StringFieldUpdateOperationsInput | string
    typeTransaction?: EnumTypeTransactionFieldUpdateOperationsInput | $Enums.TypeTransaction
    ressourceId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteOrigine?: StringFieldUpdateOperationsInput | string
    universiteDestination?: NullableStringFieldUpdateOperationsInput | string | null
    dateTransaction?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutTransactionFieldUpdateOperationsInput | $Enums.StatutTransaction
    hashTransaction?: StringFieldUpdateOperationsInput | string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TransactionBlockchainCreateManyInput = {
    id?: string
    referenceBlockchain: string
    typeTransaction: $Enums.TypeTransaction
    ressourceId?: string | null
    universiteOrigine: string
    universiteDestination?: string | null
    dateTransaction?: Date | string
    statut: $Enums.StatutTransaction
    hashTransaction: string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TransactionBlockchainUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceBlockchain?: StringFieldUpdateOperationsInput | string
    typeTransaction?: EnumTypeTransactionFieldUpdateOperationsInput | $Enums.TypeTransaction
    dateTransaction?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutTransactionFieldUpdateOperationsInput | $Enums.StatutTransaction
    hashTransaction?: StringFieldUpdateOperationsInput | string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TransactionBlockchainUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceBlockchain?: StringFieldUpdateOperationsInput | string
    typeTransaction?: EnumTypeTransactionFieldUpdateOperationsInput | $Enums.TypeTransaction
    ressourceId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteOrigine?: StringFieldUpdateOperationsInput | string
    universiteDestination?: NullableStringFieldUpdateOperationsInput | string | null
    dateTransaction?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutTransactionFieldUpdateOperationsInput | $Enums.StatutTransaction
    hashTransaction?: StringFieldUpdateOperationsInput | string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
  }

  export type RessourceCreateInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    auteur?: UserCreateNestedOneWithoutContributionsInput
    universite: UniversiteCreateNestedOneWithoutRessourcesInput
    favoris?: FavoriCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireCreateNestedManyWithoutRessourceInput
    notations?: NotationCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueCreateNestedManyWithoutRessourceInput
    reservations?: ReservationCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainCreateNestedManyWithoutRessourceInput
    Notification?: NotificationCreateNestedManyWithoutRessourceInput
  }

  export type RessourceUncheckedCreateInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    auteurId?: string | null
    universiteId: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    favoris?: FavoriUncheckedCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutRessourceInput
    notations?: NotationUncheckedCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceUncheckedCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteUncheckedCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueUncheckedCreateNestedManyWithoutRessourceInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainUncheckedCreateNestedManyWithoutRessourceInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutRessourceInput
  }

  export type RessourceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    auteur?: UserUpdateOneWithoutContributionsNestedInput
    universite?: UniversiteUpdateOneRequiredWithoutRessourcesNestedInput
    favoris?: FavoriUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUpdateManyWithoutRessourceNestedInput
    notations?: NotationUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    auteurId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteId?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    favoris?: FavoriUncheckedUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutRessourceNestedInput
    notations?: NotationUncheckedUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUncheckedUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUncheckedUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUncheckedUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUncheckedUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceCreateManyInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    auteurId?: string | null
    universiteId: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
  }

  export type RessourceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
  }

  export type RessourceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    auteurId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteId?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
  }

  export type StatistiqueBibliothequeCreateInput = {
    id?: string
    mois: number
    annee: number
    nbEmprunts?: number
    nbEmpruntsExternes?: number
    nbReservations?: number
    nbReservationsExternes?: number
    nbRetardsRendu?: number
    tauxRotation?: number | null
    categoriesPlusEmpruntees?: string | null
    universitesPlusFrequentes?: string | null
    universite: UniversiteCreateNestedOneWithoutStatistiquesBibliothequeInput
  }

  export type StatistiqueBibliothequeUncheckedCreateInput = {
    id?: string
    universiteId: string
    mois: number
    annee: number
    nbEmprunts?: number
    nbEmpruntsExternes?: number
    nbReservations?: number
    nbReservationsExternes?: number
    nbRetardsRendu?: number
    tauxRotation?: number | null
    categoriesPlusEmpruntees?: string | null
    universitesPlusFrequentes?: string | null
  }

  export type StatistiqueBibliothequeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mois?: IntFieldUpdateOperationsInput | number
    annee?: IntFieldUpdateOperationsInput | number
    nbEmprunts?: IntFieldUpdateOperationsInput | number
    nbEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    nbReservations?: IntFieldUpdateOperationsInput | number
    nbReservationsExternes?: IntFieldUpdateOperationsInput | number
    nbRetardsRendu?: IntFieldUpdateOperationsInput | number
    tauxRotation?: NullableFloatFieldUpdateOperationsInput | number | null
    categoriesPlusEmpruntees?: NullableStringFieldUpdateOperationsInput | string | null
    universitesPlusFrequentes?: NullableStringFieldUpdateOperationsInput | string | null
    universite?: UniversiteUpdateOneRequiredWithoutStatistiquesBibliothequeNestedInput
  }

  export type StatistiqueBibliothequeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    universiteId?: StringFieldUpdateOperationsInput | string
    mois?: IntFieldUpdateOperationsInput | number
    annee?: IntFieldUpdateOperationsInput | number
    nbEmprunts?: IntFieldUpdateOperationsInput | number
    nbEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    nbReservations?: IntFieldUpdateOperationsInput | number
    nbReservationsExternes?: IntFieldUpdateOperationsInput | number
    nbRetardsRendu?: IntFieldUpdateOperationsInput | number
    tauxRotation?: NullableFloatFieldUpdateOperationsInput | number | null
    categoriesPlusEmpruntees?: NullableStringFieldUpdateOperationsInput | string | null
    universitesPlusFrequentes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StatistiqueBibliothequeCreateManyInput = {
    id?: string
    universiteId: string
    mois: number
    annee: number
    nbEmprunts?: number
    nbEmpruntsExternes?: number
    nbReservations?: number
    nbReservationsExternes?: number
    nbRetardsRendu?: number
    tauxRotation?: number | null
    categoriesPlusEmpruntees?: string | null
    universitesPlusFrequentes?: string | null
  }

  export type StatistiqueBibliothequeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    mois?: IntFieldUpdateOperationsInput | number
    annee?: IntFieldUpdateOperationsInput | number
    nbEmprunts?: IntFieldUpdateOperationsInput | number
    nbEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    nbReservations?: IntFieldUpdateOperationsInput | number
    nbReservationsExternes?: IntFieldUpdateOperationsInput | number
    nbRetardsRendu?: IntFieldUpdateOperationsInput | number
    tauxRotation?: NullableFloatFieldUpdateOperationsInput | number | null
    categoriesPlusEmpruntees?: NullableStringFieldUpdateOperationsInput | string | null
    universitesPlusFrequentes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StatistiqueBibliothequeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    universiteId?: StringFieldUpdateOperationsInput | string
    mois?: IntFieldUpdateOperationsInput | number
    annee?: IntFieldUpdateOperationsInput | number
    nbEmprunts?: IntFieldUpdateOperationsInput | number
    nbEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    nbReservations?: IntFieldUpdateOperationsInput | number
    nbReservationsExternes?: IntFieldUpdateOperationsInput | number
    nbRetardsRendu?: IntFieldUpdateOperationsInput | number
    tauxRotation?: NullableFloatFieldUpdateOperationsInput | number | null
    categoriesPlusEmpruntees?: NullableStringFieldUpdateOperationsInput | string | null
    universitesPlusFrequentes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationCreateInput = {
    id?: string
    titre: string
    message: string
    dateCreation?: Date | string
    estLue?: boolean
    typeNotification: $Enums.TypeNotification
    user: UserCreateNestedOneWithoutNotificationInput
    ressource?: RessourceCreateNestedOneWithoutNotificationInput
  }

  export type NotificationUncheckedCreateInput = {
    id?: string
    userId: string
    titre: string
    message: string
    dateCreation?: Date | string
    estLue?: boolean
    typeNotification: $Enums.TypeNotification
    ressourceId?: string | null
  }

  export type NotificationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estLue?: BoolFieldUpdateOperationsInput | boolean
    typeNotification?: EnumTypeNotificationFieldUpdateOperationsInput | $Enums.TypeNotification
    user?: UserUpdateOneRequiredWithoutNotificationNestedInput
    ressource?: RessourceUpdateOneWithoutNotificationNestedInput
  }

  export type NotificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estLue?: BoolFieldUpdateOperationsInput | boolean
    typeNotification?: EnumTypeNotificationFieldUpdateOperationsInput | $Enums.TypeNotification
    ressourceId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationCreateManyInput = {
    id?: string
    userId: string
    titre: string
    message: string
    dateCreation?: Date | string
    estLue?: boolean
    typeNotification: $Enums.TypeNotification
    ressourceId?: string | null
  }

  export type NotificationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estLue?: BoolFieldUpdateOperationsInput | boolean
    typeNotification?: EnumTypeNotificationFieldUpdateOperationsInput | $Enums.TypeNotification
  }

  export type NotificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estLue?: BoolFieldUpdateOperationsInput | boolean
    typeNotification?: EnumTypeNotificationFieldUpdateOperationsInput | $Enums.TypeNotification
    ressourceId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type JournalAuditCreateInput = {
    id?: string
    action: string
    entite: string
    entiteId: string
    dateAction?: Date | string
    detailsAction: JsonNullValueInput | InputJsonValue
    ipAdresse: string
    user?: UserCreateNestedOneWithoutJournalAuditInput
  }

  export type JournalAuditUncheckedCreateInput = {
    id?: string
    userId?: string | null
    action: string
    entite: string
    entiteId: string
    dateAction?: Date | string
    detailsAction: JsonNullValueInput | InputJsonValue
    ipAdresse: string
  }

  export type JournalAuditUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entite?: StringFieldUpdateOperationsInput | string
    entiteId?: StringFieldUpdateOperationsInput | string
    dateAction?: DateTimeFieldUpdateOperationsInput | Date | string
    detailsAction?: JsonNullValueInput | InputJsonValue
    ipAdresse?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneWithoutJournalAuditNestedInput
  }

  export type JournalAuditUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    entite?: StringFieldUpdateOperationsInput | string
    entiteId?: StringFieldUpdateOperationsInput | string
    dateAction?: DateTimeFieldUpdateOperationsInput | Date | string
    detailsAction?: JsonNullValueInput | InputJsonValue
    ipAdresse?: StringFieldUpdateOperationsInput | string
  }

  export type JournalAuditCreateManyInput = {
    id?: string
    userId?: string | null
    action: string
    entite: string
    entiteId: string
    dateAction?: Date | string
    detailsAction: JsonNullValueInput | InputJsonValue
    ipAdresse: string
  }

  export type JournalAuditUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entite?: StringFieldUpdateOperationsInput | string
    entiteId?: StringFieldUpdateOperationsInput | string
    dateAction?: DateTimeFieldUpdateOperationsInput | Date | string
    detailsAction?: JsonNullValueInput | InputJsonValue
    ipAdresse?: StringFieldUpdateOperationsInput | string
  }

  export type JournalAuditUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    entite?: StringFieldUpdateOperationsInput | string
    entiteId?: StringFieldUpdateOperationsInput | string
    dateAction?: DateTimeFieldUpdateOperationsInput | Date | string
    detailsAction?: JsonNullValueInput | InputJsonValue
    ipAdresse?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type EnumTypeConventionFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeConvention | EnumTypeConventionFieldRefInput<$PrismaModel>
    in?: $Enums.TypeConvention[]
    notIn?: $Enums.TypeConvention[]
    not?: NestedEnumTypeConventionFilter<$PrismaModel> | $Enums.TypeConvention
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type UniversiteScalarRelationFilter = {
    is?: UniversiteWhereInput
    isNot?: UniversiteWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ConventionInteruniversitaireOrderByRelevanceInput = {
    fields: ConventionInteruniversitaireOrderByRelevanceFieldEnum | ConventionInteruniversitaireOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ConventionInteruniversitaireUniversiteId1UniversiteId2CompoundUniqueInput = {
    universiteId1: string
    universiteId2: string
  }

  export type ConventionInteruniversitaireCountOrderByAggregateInput = {
    id?: SortOrder
    universiteId1?: SortOrder
    universiteId2?: SortOrder
    dateDebut?: SortOrder
    dateFin?: SortOrder
    estActive?: SortOrder
    typeConvention?: SortOrder
    detailsConvention?: SortOrder
    documentsUrl?: SortOrder
    contactUniversite1?: SortOrder
    contactUniversite2?: SortOrder
  }

  export type ConventionInteruniversitaireMaxOrderByAggregateInput = {
    id?: SortOrder
    universiteId1?: SortOrder
    universiteId2?: SortOrder
    dateDebut?: SortOrder
    dateFin?: SortOrder
    estActive?: SortOrder
    typeConvention?: SortOrder
    detailsConvention?: SortOrder
    documentsUrl?: SortOrder
    contactUniversite1?: SortOrder
    contactUniversite2?: SortOrder
  }

  export type ConventionInteruniversitaireMinOrderByAggregateInput = {
    id?: SortOrder
    universiteId1?: SortOrder
    universiteId2?: SortOrder
    dateDebut?: SortOrder
    dateFin?: SortOrder
    estActive?: SortOrder
    typeConvention?: SortOrder
    detailsConvention?: SortOrder
    documentsUrl?: SortOrder
    contactUniversite1?: SortOrder
    contactUniversite2?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type EnumTypeConventionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeConvention | EnumTypeConventionFieldRefInput<$PrismaModel>
    in?: $Enums.TypeConvention[]
    notIn?: $Enums.TypeConvention[]
    not?: NestedEnumTypeConventionWithAggregatesFilter<$PrismaModel> | $Enums.TypeConvention
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTypeConventionFilter<$PrismaModel>
    _max?: NestedEnumTypeConventionFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StatistiqueInteruniversitaireOrderByRelevanceInput = {
    fields: StatistiqueInteruniversitaireOrderByRelevanceFieldEnum | StatistiqueInteruniversitaireOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type StatistiqueInteruniversitaireUniversiteSourceUniversiteDestinationMoisAnneeCompoundUniqueInput = {
    universiteSource: string
    universiteDestination: string
    mois: number
    annee: number
  }

  export type StatistiqueInteruniversitaireCountOrderByAggregateInput = {
    id?: SortOrder
    universiteSource?: SortOrder
    universiteDestination?: SortOrder
    mois?: SortOrder
    annee?: SortOrder
    nbEmprunts?: SortOrder
    nbReservations?: SortOrder
    ressourcesPlusConsultees?: SortOrder
    domainesPlusConsultes?: SortOrder
  }

  export type StatistiqueInteruniversitaireAvgOrderByAggregateInput = {
    mois?: SortOrder
    annee?: SortOrder
    nbEmprunts?: SortOrder
    nbReservations?: SortOrder
  }

  export type StatistiqueInteruniversitaireMaxOrderByAggregateInput = {
    id?: SortOrder
    universiteSource?: SortOrder
    universiteDestination?: SortOrder
    mois?: SortOrder
    annee?: SortOrder
    nbEmprunts?: SortOrder
    nbReservations?: SortOrder
    ressourcesPlusConsultees?: SortOrder
    domainesPlusConsultes?: SortOrder
  }

  export type StatistiqueInteruniversitaireMinOrderByAggregateInput = {
    id?: SortOrder
    universiteSource?: SortOrder
    universiteDestination?: SortOrder
    mois?: SortOrder
    annee?: SortOrder
    nbEmprunts?: SortOrder
    nbReservations?: SortOrder
    ressourcesPlusConsultees?: SortOrder
    domainesPlusConsultes?: SortOrder
  }

  export type StatistiqueInteruniversitaireSumOrderByAggregateInput = {
    mois?: SortOrder
    annee?: SortOrder
    nbEmprunts?: SortOrder
    nbReservations?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type EnumStatutReservationFilter<$PrismaModel = never> = {
    equals?: $Enums.StatutReservation | EnumStatutReservationFieldRefInput<$PrismaModel>
    in?: $Enums.StatutReservation[]
    notIn?: $Enums.StatutReservation[]
    not?: NestedEnumStatutReservationFilter<$PrismaModel> | $Enums.StatutReservation
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type RessourceScalarRelationFilter = {
    is?: RessourceWhereInput
    isNot?: RessourceWhereInput
  }

  export type ReservationOrderByRelevanceInput = {
    fields: ReservationOrderByRelevanceFieldEnum | ReservationOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ReservationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    dateReservation?: SortOrder
    dateDebut?: SortOrder
    dateFin?: SortOrder
    statut?: SortOrder
    commentaire?: SortOrder
    universiteEmprunteur?: SortOrder
    motifReservation?: SortOrder
    validePar?: SortOrder
  }

  export type ReservationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    dateReservation?: SortOrder
    dateDebut?: SortOrder
    dateFin?: SortOrder
    statut?: SortOrder
    commentaire?: SortOrder
    universiteEmprunteur?: SortOrder
    motifReservation?: SortOrder
    validePar?: SortOrder
  }

  export type ReservationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    dateReservation?: SortOrder
    dateDebut?: SortOrder
    dateFin?: SortOrder
    statut?: SortOrder
    commentaire?: SortOrder
    universiteEmprunteur?: SortOrder
    motifReservation?: SortOrder
    validePar?: SortOrder
  }

  export type EnumStatutReservationWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatutReservation | EnumStatutReservationFieldRefInput<$PrismaModel>
    in?: $Enums.StatutReservation[]
    notIn?: $Enums.StatutReservation[]
    not?: NestedEnumStatutReservationWithAggregatesFilter<$PrismaModel> | $Enums.StatutReservation
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatutReservationFilter<$PrismaModel>
    _max?: NestedEnumStatutReservationFilter<$PrismaModel>
  }

  export type EnumEtatExemplaireFilter<$PrismaModel = never> = {
    equals?: $Enums.EtatExemplaire | EnumEtatExemplaireFieldRefInput<$PrismaModel>
    in?: $Enums.EtatExemplaire[]
    notIn?: $Enums.EtatExemplaire[]
    not?: NestedEnumEtatExemplaireFilter<$PrismaModel> | $Enums.EtatExemplaire
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type EmpruntListRelationFilter = {
    every?: EmpruntWhereInput
    some?: EmpruntWhereInput
    none?: EmpruntWhereInput
  }

  export type EmpruntOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ExemplairePhysiqueOrderByRelevanceInput = {
    fields: ExemplairePhysiqueOrderByRelevanceFieldEnum | ExemplairePhysiqueOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ExemplairePhysiqueCountOrderByAggregateInput = {
    id?: SortOrder
    ressourceId?: SortOrder
    cote?: SortOrder
    etat?: SortOrder
    disponible?: SortOrder
    localisation?: SortOrder
    dateAcquisition?: SortOrder
    estReservableExterne?: SortOrder
    estEmpruntableExterne?: SortOrder
  }

  export type ExemplairePhysiqueMaxOrderByAggregateInput = {
    id?: SortOrder
    ressourceId?: SortOrder
    cote?: SortOrder
    etat?: SortOrder
    disponible?: SortOrder
    localisation?: SortOrder
    dateAcquisition?: SortOrder
    estReservableExterne?: SortOrder
    estEmpruntableExterne?: SortOrder
  }

  export type ExemplairePhysiqueMinOrderByAggregateInput = {
    id?: SortOrder
    ressourceId?: SortOrder
    cote?: SortOrder
    etat?: SortOrder
    disponible?: SortOrder
    localisation?: SortOrder
    dateAcquisition?: SortOrder
    estReservableExterne?: SortOrder
    estEmpruntableExterne?: SortOrder
  }

  export type EnumEtatExemplaireWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EtatExemplaire | EnumEtatExemplaireFieldRefInput<$PrismaModel>
    in?: $Enums.EtatExemplaire[]
    notIn?: $Enums.EtatExemplaire[]
    not?: NestedEnumEtatExemplaireWithAggregatesFilter<$PrismaModel> | $Enums.EtatExemplaire
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEtatExemplaireFilter<$PrismaModel>
    _max?: NestedEnumEtatExemplaireFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type EnumStatutEmpruntFilter<$PrismaModel = never> = {
    equals?: $Enums.StatutEmprunt | EnumStatutEmpruntFieldRefInput<$PrismaModel>
    in?: $Enums.StatutEmprunt[]
    notIn?: $Enums.StatutEmprunt[]
    not?: NestedEnumStatutEmpruntFilter<$PrismaModel> | $Enums.StatutEmprunt
  }

  export type ExemplairePhysiqueScalarRelationFilter = {
    is?: ExemplairePhysiqueWhereInput
    isNot?: ExemplairePhysiqueWhereInput
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type EmpruntOrderByRelevanceInput = {
    fields: EmpruntOrderByRelevanceFieldEnum | EmpruntOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EmpruntCountOrderByAggregateInput = {
    id?: SortOrder
    exemplaireId?: SortOrder
    userId?: SortOrder
    dateEmprunt?: SortOrder
    dateRetourPrevue?: SortOrder
    dateRetourEffective?: SortOrder
    statut?: SortOrder
    commentaire?: SortOrder
    universiteEmprunteur?: SortOrder
    estEmpruntExterne?: SortOrder
    motifEmprunt?: SortOrder
    validePar?: SortOrder
  }

  export type EmpruntMaxOrderByAggregateInput = {
    id?: SortOrder
    exemplaireId?: SortOrder
    userId?: SortOrder
    dateEmprunt?: SortOrder
    dateRetourPrevue?: SortOrder
    dateRetourEffective?: SortOrder
    statut?: SortOrder
    commentaire?: SortOrder
    universiteEmprunteur?: SortOrder
    estEmpruntExterne?: SortOrder
    motifEmprunt?: SortOrder
    validePar?: SortOrder
  }

  export type EmpruntMinOrderByAggregateInput = {
    id?: SortOrder
    exemplaireId?: SortOrder
    userId?: SortOrder
    dateEmprunt?: SortOrder
    dateRetourPrevue?: SortOrder
    dateRetourEffective?: SortOrder
    statut?: SortOrder
    commentaire?: SortOrder
    universiteEmprunteur?: SortOrder
    estEmpruntExterne?: SortOrder
    motifEmprunt?: SortOrder
    validePar?: SortOrder
  }

  export type EnumStatutEmpruntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatutEmprunt | EnumStatutEmpruntFieldRefInput<$PrismaModel>
    in?: $Enums.StatutEmprunt[]
    notIn?: $Enums.StatutEmprunt[]
    not?: NestedEnumStatutEmpruntWithAggregatesFilter<$PrismaModel> | $Enums.StatutEmprunt
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatutEmpruntFilter<$PrismaModel>
    _max?: NestedEnumStatutEmpruntFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type EnumMotifRecommandationFilter<$PrismaModel = never> = {
    equals?: $Enums.MotifRecommandation | EnumMotifRecommandationFieldRefInput<$PrismaModel>
    in?: $Enums.MotifRecommandation[]
    notIn?: $Enums.MotifRecommandation[]
    not?: NestedEnumMotifRecommandationFilter<$PrismaModel> | $Enums.MotifRecommandation
  }

  export type UniversiteNullableScalarRelationFilter = {
    is?: UniversiteWhereInput | null
    isNot?: UniversiteWhereInput | null
  }

  export type RecommandationOrderByRelevanceInput = {
    fields: RecommandationOrderByRelevanceFieldEnum | RecommandationOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type RecommandationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    dateRecommandation?: SortOrder
    score?: SortOrder
    motif?: SortOrder
    estVue?: SortOrder
    estInteruniversitaire?: SortOrder
    universiteSource?: SortOrder
  }

  export type RecommandationAvgOrderByAggregateInput = {
    score?: SortOrder
  }

  export type RecommandationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    dateRecommandation?: SortOrder
    score?: SortOrder
    motif?: SortOrder
    estVue?: SortOrder
    estInteruniversitaire?: SortOrder
    universiteSource?: SortOrder
  }

  export type RecommandationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    dateRecommandation?: SortOrder
    score?: SortOrder
    motif?: SortOrder
    estVue?: SortOrder
    estInteruniversitaire?: SortOrder
    universiteSource?: SortOrder
  }

  export type RecommandationSumOrderByAggregateInput = {
    score?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type EnumMotifRecommandationWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MotifRecommandation | EnumMotifRecommandationFieldRefInput<$PrismaModel>
    in?: $Enums.MotifRecommandation[]
    notIn?: $Enums.MotifRecommandation[]
    not?: NestedEnumMotifRecommandationWithAggregatesFilter<$PrismaModel> | $Enums.MotifRecommandation
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMotifRecommandationFilter<$PrismaModel>
    _max?: NestedEnumMotifRecommandationFilter<$PrismaModel>
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type RessourceListRelationFilter = {
    every?: RessourceWhereInput
    some?: RessourceWhereInput
    none?: RessourceWhereInput
  }

  export type ConventionInteruniversitaireListRelationFilter = {
    every?: ConventionInteruniversitaireWhereInput
    some?: ConventionInteruniversitaireWhereInput
    none?: ConventionInteruniversitaireWhereInput
  }

  export type StatistiqueInteruniversitaireListRelationFilter = {
    every?: StatistiqueInteruniversitaireWhereInput
    some?: StatistiqueInteruniversitaireWhereInput
    none?: StatistiqueInteruniversitaireWhereInput
  }

  export type ReservationListRelationFilter = {
    every?: ReservationWhereInput
    some?: ReservationWhereInput
    none?: ReservationWhereInput
  }

  export type RecommandationListRelationFilter = {
    every?: RecommandationWhereInput
    some?: RecommandationWhereInput
    none?: RecommandationWhereInput
  }

  export type StatistiqueBibliothequeListRelationFilter = {
    every?: StatistiqueBibliothequeWhereInput
    some?: StatistiqueBibliothequeWhereInput
    none?: StatistiqueBibliothequeWhereInput
  }

  export type PartageUniversiteListRelationFilter = {
    every?: PartageUniversiteWhereInput
    some?: PartageUniversiteWhereInput
    none?: PartageUniversiteWhereInput
  }

  export type TransactionBlockchainListRelationFilter = {
    every?: TransactionBlockchainWhereInput
    some?: TransactionBlockchainWhereInput
    none?: TransactionBlockchainWhereInput
  }

  export type HistoriqueAccesListRelationFilter = {
    every?: HistoriqueAccesWhereInput
    some?: HistoriqueAccesWhereInput
    none?: HistoriqueAccesWhereInput
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RessourceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ConventionInteruniversitaireOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StatistiqueInteruniversitaireOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReservationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RecommandationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StatistiqueBibliothequeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PartageUniversiteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TransactionBlockchainOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type HistoriqueAccesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UniversiteOrderByRelevanceInput = {
    fields: UniversiteOrderByRelevanceFieldEnum | UniversiteOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UniversiteCountOrderByAggregateInput = {
    id?: SortOrder
    nom?: SortOrder
    adresse?: SortOrder
    ville?: SortOrder
    pays?: SortOrder
    siteWeb?: SortOrder
    dateCreation?: SortOrder
    adresseBlockchain?: SortOrder
    estActive?: SortOrder
  }

  export type UniversiteMaxOrderByAggregateInput = {
    id?: SortOrder
    nom?: SortOrder
    adresse?: SortOrder
    ville?: SortOrder
    pays?: SortOrder
    siteWeb?: SortOrder
    dateCreation?: SortOrder
    adresseBlockchain?: SortOrder
    estActive?: SortOrder
  }

  export type UniversiteMinOrderByAggregateInput = {
    id?: SortOrder
    nom?: SortOrder
    adresse?: SortOrder
    ville?: SortOrder
    pays?: SortOrder
    siteWeb?: SortOrder
    dateCreation?: SortOrder
    adresseBlockchain?: SortOrder
    estActive?: SortOrder
  }

  export type EnumRoleUserFilter<$PrismaModel = never> = {
    equals?: $Enums.RoleUser | EnumRoleUserFieldRefInput<$PrismaModel>
    in?: $Enums.RoleUser[]
    notIn?: $Enums.RoleUser[]
    not?: NestedEnumRoleUserFilter<$PrismaModel> | $Enums.RoleUser
  }

  export type EnumFrequenceRecommandationFilter<$PrismaModel = never> = {
    equals?: $Enums.FrequenceRecommandation | EnumFrequenceRecommandationFieldRefInput<$PrismaModel>
    in?: $Enums.FrequenceRecommandation[]
    notIn?: $Enums.FrequenceRecommandation[]
    not?: NestedEnumFrequenceRecommandationFilter<$PrismaModel> | $Enums.FrequenceRecommandation
  }

  export type FavoriListRelationFilter = {
    every?: FavoriWhereInput
    some?: FavoriWhereInput
    none?: FavoriWhereInput
  }

  export type CommentaireListRelationFilter = {
    every?: CommentaireWhereInput
    some?: CommentaireWhereInput
    none?: CommentaireWhereInput
  }

  export type NotationListRelationFilter = {
    every?: NotationWhereInput
    some?: NotationWhereInput
    none?: NotationWhereInput
  }

  export type CollectionListRelationFilter = {
    every?: CollectionWhereInput
    some?: CollectionWhereInput
    none?: CollectionWhereInput
  }

  export type JournalAuditListRelationFilter = {
    every?: JournalAuditWhereInput
    some?: JournalAuditWhereInput
    none?: JournalAuditWhereInput
  }

  export type DonneesRecommandationListRelationFilter = {
    every?: DonneesRecommandationWhereInput
    some?: DonneesRecommandationWhereInput
    none?: DonneesRecommandationWhereInput
  }

  export type NotificationListRelationFilter = {
    every?: NotificationWhereInput
    some?: NotificationWhereInput
    none?: NotificationWhereInput
  }

  export type FavoriOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CommentaireOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CollectionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type JournalAuditOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DonneesRecommandationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelevanceInput = {
    fields: UserOrderByRelevanceFieldEnum | UserOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    motDePasse?: SortOrder
    nom?: SortOrder
    prenom?: SortOrder
    image?: SortOrder
    role?: SortOrder
    departement?: SortOrder
    faculte?: SortOrder
    specialite?: SortOrder
    niveauEtudes?: SortOrder
    dateInscription?: SortOrder
    derniereConnexion?: SortOrder
    estActif?: SortOrder
    universiteId?: SortOrder
    preferencesRecommandation?: SortOrder
    frequenceRecommandation?: SortOrder
    droitEmpruntExterieur?: SortOrder
    droitReservationExterieure?: SortOrder
    universiteAutorisees?: SortOrder
    nbMaxEmpruntsExternes?: SortOrder
    statutValidation?: SortOrder
    dateValidation?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    nbMaxEmpruntsExternes?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    motDePasse?: SortOrder
    nom?: SortOrder
    prenom?: SortOrder
    image?: SortOrder
    role?: SortOrder
    departement?: SortOrder
    faculte?: SortOrder
    specialite?: SortOrder
    niveauEtudes?: SortOrder
    dateInscription?: SortOrder
    derniereConnexion?: SortOrder
    estActif?: SortOrder
    universiteId?: SortOrder
    preferencesRecommandation?: SortOrder
    frequenceRecommandation?: SortOrder
    droitEmpruntExterieur?: SortOrder
    droitReservationExterieure?: SortOrder
    universiteAutorisees?: SortOrder
    nbMaxEmpruntsExternes?: SortOrder
    statutValidation?: SortOrder
    dateValidation?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    motDePasse?: SortOrder
    nom?: SortOrder
    prenom?: SortOrder
    image?: SortOrder
    role?: SortOrder
    departement?: SortOrder
    faculte?: SortOrder
    specialite?: SortOrder
    niveauEtudes?: SortOrder
    dateInscription?: SortOrder
    derniereConnexion?: SortOrder
    estActif?: SortOrder
    universiteId?: SortOrder
    preferencesRecommandation?: SortOrder
    frequenceRecommandation?: SortOrder
    droitEmpruntExterieur?: SortOrder
    droitReservationExterieure?: SortOrder
    universiteAutorisees?: SortOrder
    nbMaxEmpruntsExternes?: SortOrder
    statutValidation?: SortOrder
    dateValidation?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    nbMaxEmpruntsExternes?: SortOrder
  }

  export type EnumRoleUserWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RoleUser | EnumRoleUserFieldRefInput<$PrismaModel>
    in?: $Enums.RoleUser[]
    notIn?: $Enums.RoleUser[]
    not?: NestedEnumRoleUserWithAggregatesFilter<$PrismaModel> | $Enums.RoleUser
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleUserFilter<$PrismaModel>
    _max?: NestedEnumRoleUserFilter<$PrismaModel>
  }

  export type EnumFrequenceRecommandationWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FrequenceRecommandation | EnumFrequenceRecommandationFieldRefInput<$PrismaModel>
    in?: $Enums.FrequenceRecommandation[]
    notIn?: $Enums.FrequenceRecommandation[]
    not?: NestedEnumFrequenceRecommandationWithAggregatesFilter<$PrismaModel> | $Enums.FrequenceRecommandation
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFrequenceRecommandationFilter<$PrismaModel>
    _max?: NestedEnumFrequenceRecommandationFilter<$PrismaModel>
  }

  export type FavoriOrderByRelevanceInput = {
    fields: FavoriOrderByRelevanceFieldEnum | FavoriOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type FavoriUserIdRessourceIdCompoundUniqueInput = {
    userId: string
    ressourceId: string
  }

  export type FavoriCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    dateAjout?: SortOrder
    note?: SortOrder
  }

  export type FavoriMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    dateAjout?: SortOrder
    note?: SortOrder
  }

  export type FavoriMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    dateAjout?: SortOrder
    note?: SortOrder
  }

  export type CommentaireOrderByRelevanceInput = {
    fields: CommentaireOrderByRelevanceFieldEnum | CommentaireOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CommentaireCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    contenu?: SortOrder
    dateCreation?: SortOrder
    estModere?: SortOrder
  }

  export type CommentaireMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    contenu?: SortOrder
    dateCreation?: SortOrder
    estModere?: SortOrder
  }

  export type CommentaireMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    contenu?: SortOrder
    dateCreation?: SortOrder
    estModere?: SortOrder
  }

  export type NotationOrderByRelevanceInput = {
    fields: NotationOrderByRelevanceFieldEnum | NotationOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type NotationUserIdRessourceIdCompoundUniqueInput = {
    userId: string
    ressourceId: string
  }

  export type NotationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    note?: SortOrder
    dateNotation?: SortOrder
  }

  export type NotationAvgOrderByAggregateInput = {
    note?: SortOrder
  }

  export type NotationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    note?: SortOrder
    dateNotation?: SortOrder
  }

  export type NotationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    note?: SortOrder
    dateNotation?: SortOrder
  }

  export type NotationSumOrderByAggregateInput = {
    note?: SortOrder
  }

  export type EnumTypeAccesFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeAcces | EnumTypeAccesFieldRefInput<$PrismaModel>
    in?: $Enums.TypeAcces[]
    notIn?: $Enums.TypeAcces[]
    not?: NestedEnumTypeAccesFilter<$PrismaModel> | $Enums.TypeAcces
  }

  export type HistoriqueAccesOrderByRelevanceInput = {
    fields: HistoriqueAccesOrderByRelevanceFieldEnum | HistoriqueAccesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type HistoriqueAccesCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    dateAcces?: SortOrder
    typeAcces?: SortOrder
    ipAcces?: SortOrder
    universiteSrc?: SortOrder
  }

  export type HistoriqueAccesMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    dateAcces?: SortOrder
    typeAcces?: SortOrder
    ipAcces?: SortOrder
    universiteSrc?: SortOrder
  }

  export type HistoriqueAccesMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    dateAcces?: SortOrder
    typeAcces?: SortOrder
    ipAcces?: SortOrder
    universiteSrc?: SortOrder
  }

  export type EnumTypeAccesWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeAcces | EnumTypeAccesFieldRefInput<$PrismaModel>
    in?: $Enums.TypeAcces[]
    notIn?: $Enums.TypeAcces[]
    not?: NestedEnumTypeAccesWithAggregatesFilter<$PrismaModel> | $Enums.TypeAcces
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTypeAccesFilter<$PrismaModel>
    _max?: NestedEnumTypeAccesFilter<$PrismaModel>
  }

  export type EnumTypeInteractionFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeInteraction | EnumTypeInteractionFieldRefInput<$PrismaModel>
    in?: $Enums.TypeInteraction[]
    notIn?: $Enums.TypeInteraction[]
    not?: NestedEnumTypeInteractionFilter<$PrismaModel> | $Enums.TypeInteraction
  }

  export type DonneesRecommandationOrderByRelevanceInput = {
    fields: DonneesRecommandationOrderByRelevanceFieldEnum | DonneesRecommandationOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type DonneesRecommandationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    score?: SortOrder
    typeInteraction?: SortOrder
    dateDonnee?: SortOrder
  }

  export type DonneesRecommandationAvgOrderByAggregateInput = {
    score?: SortOrder
  }

  export type DonneesRecommandationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    score?: SortOrder
    typeInteraction?: SortOrder
    dateDonnee?: SortOrder
  }

  export type DonneesRecommandationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    ressourceId?: SortOrder
    score?: SortOrder
    typeInteraction?: SortOrder
    dateDonnee?: SortOrder
  }

  export type DonneesRecommandationSumOrderByAggregateInput = {
    score?: SortOrder
  }

  export type EnumTypeInteractionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeInteraction | EnumTypeInteractionFieldRefInput<$PrismaModel>
    in?: $Enums.TypeInteraction[]
    notIn?: $Enums.TypeInteraction[]
    not?: NestedEnumTypeInteractionWithAggregatesFilter<$PrismaModel> | $Enums.TypeInteraction
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTypeInteractionFilter<$PrismaModel>
    _max?: NestedEnumTypeInteractionFilter<$PrismaModel>
  }

  export type CollectionRessourceListRelationFilter = {
    every?: CollectionRessourceWhereInput
    some?: CollectionRessourceWhereInput
    none?: CollectionRessourceWhereInput
  }

  export type CollectionRessourceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CollectionOrderByRelevanceInput = {
    fields: CollectionOrderByRelevanceFieldEnum | CollectionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CollectionCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    nom?: SortOrder
    description?: SortOrder
    estPublique?: SortOrder
    dateCreation?: SortOrder
  }

  export type CollectionMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    nom?: SortOrder
    description?: SortOrder
    estPublique?: SortOrder
    dateCreation?: SortOrder
  }

  export type CollectionMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    nom?: SortOrder
    description?: SortOrder
    estPublique?: SortOrder
    dateCreation?: SortOrder
  }

  export type CollectionScalarRelationFilter = {
    is?: CollectionWhereInput
    isNot?: CollectionWhereInput
  }

  export type CollectionRessourceOrderByRelevanceInput = {
    fields: CollectionRessourceOrderByRelevanceFieldEnum | CollectionRessourceOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CollectionRessourceCollectionIdRessourceIdCompoundUniqueInput = {
    collectionId: string
    ressourceId: string
  }

  export type CollectionRessourceCountOrderByAggregateInput = {
    id?: SortOrder
    collectionId?: SortOrder
    ressourceId?: SortOrder
    dateAjout?: SortOrder
    notes?: SortOrder
  }

  export type CollectionRessourceMaxOrderByAggregateInput = {
    id?: SortOrder
    collectionId?: SortOrder
    ressourceId?: SortOrder
    dateAjout?: SortOrder
    notes?: SortOrder
  }

  export type CollectionRessourceMinOrderByAggregateInput = {
    id?: SortOrder
    collectionId?: SortOrder
    ressourceId?: SortOrder
    dateAjout?: SortOrder
    notes?: SortOrder
  }

  export type PartageUniversiteOrderByRelevanceInput = {
    fields: PartageUniversiteOrderByRelevanceFieldEnum | PartageUniversiteOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type PartageUniversiteRessourceIdUniversiteDestinationCompoundUniqueInput = {
    ressourceId: string
    universiteDestination: string
  }

  export type PartageUniversiteCountOrderByAggregateInput = {
    id?: SortOrder
    ressourceId?: SortOrder
    universiteSource?: SortOrder
    universiteDestination?: SortOrder
    datePartage?: SortOrder
    estActif?: SortOrder
  }

  export type PartageUniversiteMaxOrderByAggregateInput = {
    id?: SortOrder
    ressourceId?: SortOrder
    universiteSource?: SortOrder
    universiteDestination?: SortOrder
    datePartage?: SortOrder
    estActif?: SortOrder
  }

  export type PartageUniversiteMinOrderByAggregateInput = {
    id?: SortOrder
    ressourceId?: SortOrder
    universiteSource?: SortOrder
    universiteDestination?: SortOrder
    datePartage?: SortOrder
    estActif?: SortOrder
  }

  export type EnumTypeTransactionFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeTransaction | EnumTypeTransactionFieldRefInput<$PrismaModel>
    in?: $Enums.TypeTransaction[]
    notIn?: $Enums.TypeTransaction[]
    not?: NestedEnumTypeTransactionFilter<$PrismaModel> | $Enums.TypeTransaction
  }

  export type EnumStatutTransactionFilter<$PrismaModel = never> = {
    equals?: $Enums.StatutTransaction | EnumStatutTransactionFieldRefInput<$PrismaModel>
    in?: $Enums.StatutTransaction[]
    notIn?: $Enums.StatutTransaction[]
    not?: NestedEnumStatutTransactionFilter<$PrismaModel> | $Enums.StatutTransaction
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type RessourceNullableScalarRelationFilter = {
    is?: RessourceWhereInput | null
    isNot?: RessourceWhereInput | null
  }

  export type TransactionBlockchainOrderByRelevanceInput = {
    fields: TransactionBlockchainOrderByRelevanceFieldEnum | TransactionBlockchainOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TransactionBlockchainCountOrderByAggregateInput = {
    id?: SortOrder
    referenceBlockchain?: SortOrder
    typeTransaction?: SortOrder
    ressourceId?: SortOrder
    universiteOrigine?: SortOrder
    universiteDestination?: SortOrder
    dateTransaction?: SortOrder
    statut?: SortOrder
    hashTransaction?: SortOrder
    donneesTechniques?: SortOrder
  }

  export type TransactionBlockchainMaxOrderByAggregateInput = {
    id?: SortOrder
    referenceBlockchain?: SortOrder
    typeTransaction?: SortOrder
    ressourceId?: SortOrder
    universiteOrigine?: SortOrder
    universiteDestination?: SortOrder
    dateTransaction?: SortOrder
    statut?: SortOrder
    hashTransaction?: SortOrder
  }

  export type TransactionBlockchainMinOrderByAggregateInput = {
    id?: SortOrder
    referenceBlockchain?: SortOrder
    typeTransaction?: SortOrder
    ressourceId?: SortOrder
    universiteOrigine?: SortOrder
    universiteDestination?: SortOrder
    dateTransaction?: SortOrder
    statut?: SortOrder
    hashTransaction?: SortOrder
  }

  export type EnumTypeTransactionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeTransaction | EnumTypeTransactionFieldRefInput<$PrismaModel>
    in?: $Enums.TypeTransaction[]
    notIn?: $Enums.TypeTransaction[]
    not?: NestedEnumTypeTransactionWithAggregatesFilter<$PrismaModel> | $Enums.TypeTransaction
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTypeTransactionFilter<$PrismaModel>
    _max?: NestedEnumTypeTransactionFilter<$PrismaModel>
  }

  export type EnumStatutTransactionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatutTransaction | EnumStatutTransactionFieldRefInput<$PrismaModel>
    in?: $Enums.StatutTransaction[]
    notIn?: $Enums.StatutTransaction[]
    not?: NestedEnumStatutTransactionWithAggregatesFilter<$PrismaModel> | $Enums.StatutTransaction
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatutTransactionFilter<$PrismaModel>
    _max?: NestedEnumStatutTransactionFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type EnumTypeRessourceFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeRessource | EnumTypeRessourceFieldRefInput<$PrismaModel>
    in?: $Enums.TypeRessource[]
    notIn?: $Enums.TypeRessource[]
    not?: NestedEnumTypeRessourceFilter<$PrismaModel> | $Enums.TypeRessource
  }

  export type EnumNiveauAccesFilter<$PrismaModel = never> = {
    equals?: $Enums.NiveauAcces | EnumNiveauAccesFieldRefInput<$PrismaModel>
    in?: $Enums.NiveauAcces[]
    notIn?: $Enums.NiveauAcces[]
    not?: NestedEnumNiveauAccesFilter<$PrismaModel> | $Enums.NiveauAcces
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EnumCategorieBiblioNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.CategorieBiblio | EnumCategorieBiblioFieldRefInput<$PrismaModel> | null
    in?: $Enums.CategorieBiblio[] | null
    notIn?: $Enums.CategorieBiblio[] | null
    not?: NestedEnumCategorieBiblioNullableFilter<$PrismaModel> | $Enums.CategorieBiblio | null
  }

  export type ExemplairePhysiqueListRelationFilter = {
    every?: ExemplairePhysiqueWhereInput
    some?: ExemplairePhysiqueWhereInput
    none?: ExemplairePhysiqueWhereInput
  }

  export type ExemplairePhysiqueOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RessourceOrderByRelevanceInput = {
    fields: RessourceOrderByRelevanceFieldEnum | RessourceOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type RessourceCountOrderByAggregateInput = {
    id?: SortOrder
    titre?: SortOrder
    description?: SortOrder
    type?: SortOrder
    langue?: SortOrder
    urlFichier?: SortOrder
    urlFichierLocal?: SortOrder
    format?: SortOrder
    dateCreation?: SortOrder
    dateModification?: SortOrder
    estPublique?: SortOrder
    motsCles?: SortOrder
    auteurId?: SortOrder
    universiteId?: SortOrder
    image?: SortOrder
    niveauAcces?: SortOrder
    datePublication?: SortOrder
    estValide?: SortOrder
    estArchive?: SortOrder
    nomAuteurExterne?: SortOrder
    prenomAuteurExterne?: SortOrder
    affiliationAuteurExterne?: SortOrder
    isbn?: SortOrder
    doi?: SortOrder
    edition?: SortOrder
    anneePublication?: SortOrder
    editeur?: SortOrder
    nbPages?: SortOrder
    categorieBiblio?: SortOrder
    estEmpruntable?: SortOrder
    nbExemplaires?: SortOrder
    nbDisponibles?: SortOrder
    coteClassification?: SortOrder
    estEmpruntableExterne?: SortOrder
    dureeMaxEmpruntExterne?: SortOrder
    nbMaxExemplairesExterne?: SortOrder
    necessiteAutorisation?: SortOrder
  }

  export type RessourceAvgOrderByAggregateInput = {
    anneePublication?: SortOrder
    nbPages?: SortOrder
    nbExemplaires?: SortOrder
    nbDisponibles?: SortOrder
    dureeMaxEmpruntExterne?: SortOrder
    nbMaxExemplairesExterne?: SortOrder
  }

  export type RessourceMaxOrderByAggregateInput = {
    id?: SortOrder
    titre?: SortOrder
    description?: SortOrder
    type?: SortOrder
    langue?: SortOrder
    urlFichier?: SortOrder
    urlFichierLocal?: SortOrder
    format?: SortOrder
    dateCreation?: SortOrder
    dateModification?: SortOrder
    estPublique?: SortOrder
    motsCles?: SortOrder
    auteurId?: SortOrder
    universiteId?: SortOrder
    image?: SortOrder
    niveauAcces?: SortOrder
    datePublication?: SortOrder
    estValide?: SortOrder
    estArchive?: SortOrder
    nomAuteurExterne?: SortOrder
    prenomAuteurExterne?: SortOrder
    affiliationAuteurExterne?: SortOrder
    isbn?: SortOrder
    doi?: SortOrder
    edition?: SortOrder
    anneePublication?: SortOrder
    editeur?: SortOrder
    nbPages?: SortOrder
    categorieBiblio?: SortOrder
    estEmpruntable?: SortOrder
    nbExemplaires?: SortOrder
    nbDisponibles?: SortOrder
    coteClassification?: SortOrder
    estEmpruntableExterne?: SortOrder
    dureeMaxEmpruntExterne?: SortOrder
    nbMaxExemplairesExterne?: SortOrder
    necessiteAutorisation?: SortOrder
  }

  export type RessourceMinOrderByAggregateInput = {
    id?: SortOrder
    titre?: SortOrder
    description?: SortOrder
    type?: SortOrder
    langue?: SortOrder
    urlFichier?: SortOrder
    urlFichierLocal?: SortOrder
    format?: SortOrder
    dateCreation?: SortOrder
    dateModification?: SortOrder
    estPublique?: SortOrder
    motsCles?: SortOrder
    auteurId?: SortOrder
    universiteId?: SortOrder
    image?: SortOrder
    niveauAcces?: SortOrder
    datePublication?: SortOrder
    estValide?: SortOrder
    estArchive?: SortOrder
    nomAuteurExterne?: SortOrder
    prenomAuteurExterne?: SortOrder
    affiliationAuteurExterne?: SortOrder
    isbn?: SortOrder
    doi?: SortOrder
    edition?: SortOrder
    anneePublication?: SortOrder
    editeur?: SortOrder
    nbPages?: SortOrder
    categorieBiblio?: SortOrder
    estEmpruntable?: SortOrder
    nbExemplaires?: SortOrder
    nbDisponibles?: SortOrder
    coteClassification?: SortOrder
    estEmpruntableExterne?: SortOrder
    dureeMaxEmpruntExterne?: SortOrder
    nbMaxExemplairesExterne?: SortOrder
    necessiteAutorisation?: SortOrder
  }

  export type RessourceSumOrderByAggregateInput = {
    anneePublication?: SortOrder
    nbPages?: SortOrder
    nbExemplaires?: SortOrder
    nbDisponibles?: SortOrder
    dureeMaxEmpruntExterne?: SortOrder
    nbMaxExemplairesExterne?: SortOrder
  }

  export type EnumTypeRessourceWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeRessource | EnumTypeRessourceFieldRefInput<$PrismaModel>
    in?: $Enums.TypeRessource[]
    notIn?: $Enums.TypeRessource[]
    not?: NestedEnumTypeRessourceWithAggregatesFilter<$PrismaModel> | $Enums.TypeRessource
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTypeRessourceFilter<$PrismaModel>
    _max?: NestedEnumTypeRessourceFilter<$PrismaModel>
  }

  export type EnumNiveauAccesWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NiveauAcces | EnumNiveauAccesFieldRefInput<$PrismaModel>
    in?: $Enums.NiveauAcces[]
    notIn?: $Enums.NiveauAcces[]
    not?: NestedEnumNiveauAccesWithAggregatesFilter<$PrismaModel> | $Enums.NiveauAcces
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNiveauAccesFilter<$PrismaModel>
    _max?: NestedEnumNiveauAccesFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumCategorieBiblioNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CategorieBiblio | EnumCategorieBiblioFieldRefInput<$PrismaModel> | null
    in?: $Enums.CategorieBiblio[] | null
    notIn?: $Enums.CategorieBiblio[] | null
    not?: NestedEnumCategorieBiblioNullableWithAggregatesFilter<$PrismaModel> | $Enums.CategorieBiblio | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumCategorieBiblioNullableFilter<$PrismaModel>
    _max?: NestedEnumCategorieBiblioNullableFilter<$PrismaModel>
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type StatistiqueBibliothequeOrderByRelevanceInput = {
    fields: StatistiqueBibliothequeOrderByRelevanceFieldEnum | StatistiqueBibliothequeOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type StatistiqueBibliothequeUniversiteIdMoisAnneeCompoundUniqueInput = {
    universiteId: string
    mois: number
    annee: number
  }

  export type StatistiqueBibliothequeCountOrderByAggregateInput = {
    id?: SortOrder
    universiteId?: SortOrder
    mois?: SortOrder
    annee?: SortOrder
    nbEmprunts?: SortOrder
    nbEmpruntsExternes?: SortOrder
    nbReservations?: SortOrder
    nbReservationsExternes?: SortOrder
    nbRetardsRendu?: SortOrder
    tauxRotation?: SortOrder
    categoriesPlusEmpruntees?: SortOrder
    universitesPlusFrequentes?: SortOrder
  }

  export type StatistiqueBibliothequeAvgOrderByAggregateInput = {
    mois?: SortOrder
    annee?: SortOrder
    nbEmprunts?: SortOrder
    nbEmpruntsExternes?: SortOrder
    nbReservations?: SortOrder
    nbReservationsExternes?: SortOrder
    nbRetardsRendu?: SortOrder
    tauxRotation?: SortOrder
  }

  export type StatistiqueBibliothequeMaxOrderByAggregateInput = {
    id?: SortOrder
    universiteId?: SortOrder
    mois?: SortOrder
    annee?: SortOrder
    nbEmprunts?: SortOrder
    nbEmpruntsExternes?: SortOrder
    nbReservations?: SortOrder
    nbReservationsExternes?: SortOrder
    nbRetardsRendu?: SortOrder
    tauxRotation?: SortOrder
    categoriesPlusEmpruntees?: SortOrder
    universitesPlusFrequentes?: SortOrder
  }

  export type StatistiqueBibliothequeMinOrderByAggregateInput = {
    id?: SortOrder
    universiteId?: SortOrder
    mois?: SortOrder
    annee?: SortOrder
    nbEmprunts?: SortOrder
    nbEmpruntsExternes?: SortOrder
    nbReservations?: SortOrder
    nbReservationsExternes?: SortOrder
    nbRetardsRendu?: SortOrder
    tauxRotation?: SortOrder
    categoriesPlusEmpruntees?: SortOrder
    universitesPlusFrequentes?: SortOrder
  }

  export type StatistiqueBibliothequeSumOrderByAggregateInput = {
    mois?: SortOrder
    annee?: SortOrder
    nbEmprunts?: SortOrder
    nbEmpruntsExternes?: SortOrder
    nbReservations?: SortOrder
    nbReservationsExternes?: SortOrder
    nbRetardsRendu?: SortOrder
    tauxRotation?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type EnumTypeNotificationFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeNotification | EnumTypeNotificationFieldRefInput<$PrismaModel>
    in?: $Enums.TypeNotification[]
    notIn?: $Enums.TypeNotification[]
    not?: NestedEnumTypeNotificationFilter<$PrismaModel> | $Enums.TypeNotification
  }

  export type NotificationOrderByRelevanceInput = {
    fields: NotificationOrderByRelevanceFieldEnum | NotificationOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type NotificationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    titre?: SortOrder
    message?: SortOrder
    dateCreation?: SortOrder
    estLue?: SortOrder
    typeNotification?: SortOrder
    ressourceId?: SortOrder
  }

  export type NotificationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    titre?: SortOrder
    message?: SortOrder
    dateCreation?: SortOrder
    estLue?: SortOrder
    typeNotification?: SortOrder
    ressourceId?: SortOrder
  }

  export type NotificationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    titre?: SortOrder
    message?: SortOrder
    dateCreation?: SortOrder
    estLue?: SortOrder
    typeNotification?: SortOrder
    ressourceId?: SortOrder
  }

  export type EnumTypeNotificationWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeNotification | EnumTypeNotificationFieldRefInput<$PrismaModel>
    in?: $Enums.TypeNotification[]
    notIn?: $Enums.TypeNotification[]
    not?: NestedEnumTypeNotificationWithAggregatesFilter<$PrismaModel> | $Enums.TypeNotification
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTypeNotificationFilter<$PrismaModel>
    _max?: NestedEnumTypeNotificationFilter<$PrismaModel>
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type JournalAuditOrderByRelevanceInput = {
    fields: JournalAuditOrderByRelevanceFieldEnum | JournalAuditOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type JournalAuditCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    entite?: SortOrder
    entiteId?: SortOrder
    dateAction?: SortOrder
    detailsAction?: SortOrder
    ipAdresse?: SortOrder
  }

  export type JournalAuditMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    entite?: SortOrder
    entiteId?: SortOrder
    dateAction?: SortOrder
    ipAdresse?: SortOrder
  }

  export type JournalAuditMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    entite?: SortOrder
    entiteId?: SortOrder
    dateAction?: SortOrder
    ipAdresse?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type UniversiteCreateNestedOneWithoutConventionsSourceInput = {
    create?: XOR<UniversiteCreateWithoutConventionsSourceInput, UniversiteUncheckedCreateWithoutConventionsSourceInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutConventionsSourceInput
    connect?: UniversiteWhereUniqueInput
  }

  export type UniversiteCreateNestedOneWithoutConventionsDestinationInput = {
    create?: XOR<UniversiteCreateWithoutConventionsDestinationInput, UniversiteUncheckedCreateWithoutConventionsDestinationInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutConventionsDestinationInput
    connect?: UniversiteWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type EnumTypeConventionFieldUpdateOperationsInput = {
    set?: $Enums.TypeConvention
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type UniversiteUpdateOneRequiredWithoutConventionsSourceNestedInput = {
    create?: XOR<UniversiteCreateWithoutConventionsSourceInput, UniversiteUncheckedCreateWithoutConventionsSourceInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutConventionsSourceInput
    upsert?: UniversiteUpsertWithoutConventionsSourceInput
    connect?: UniversiteWhereUniqueInput
    update?: XOR<XOR<UniversiteUpdateToOneWithWhereWithoutConventionsSourceInput, UniversiteUpdateWithoutConventionsSourceInput>, UniversiteUncheckedUpdateWithoutConventionsSourceInput>
  }

  export type UniversiteUpdateOneRequiredWithoutConventionsDestinationNestedInput = {
    create?: XOR<UniversiteCreateWithoutConventionsDestinationInput, UniversiteUncheckedCreateWithoutConventionsDestinationInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutConventionsDestinationInput
    upsert?: UniversiteUpsertWithoutConventionsDestinationInput
    connect?: UniversiteWhereUniqueInput
    update?: XOR<XOR<UniversiteUpdateToOneWithWhereWithoutConventionsDestinationInput, UniversiteUpdateWithoutConventionsDestinationInput>, UniversiteUncheckedUpdateWithoutConventionsDestinationInput>
  }

  export type UniversiteCreateNestedOneWithoutStatistiquesSourceInput = {
    create?: XOR<UniversiteCreateWithoutStatistiquesSourceInput, UniversiteUncheckedCreateWithoutStatistiquesSourceInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutStatistiquesSourceInput
    connect?: UniversiteWhereUniqueInput
  }

  export type UniversiteCreateNestedOneWithoutStatistiquesDestinationInput = {
    create?: XOR<UniversiteCreateWithoutStatistiquesDestinationInput, UniversiteUncheckedCreateWithoutStatistiquesDestinationInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutStatistiquesDestinationInput
    connect?: UniversiteWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UniversiteUpdateOneRequiredWithoutStatistiquesSourceNestedInput = {
    create?: XOR<UniversiteCreateWithoutStatistiquesSourceInput, UniversiteUncheckedCreateWithoutStatistiquesSourceInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutStatistiquesSourceInput
    upsert?: UniversiteUpsertWithoutStatistiquesSourceInput
    connect?: UniversiteWhereUniqueInput
    update?: XOR<XOR<UniversiteUpdateToOneWithWhereWithoutStatistiquesSourceInput, UniversiteUpdateWithoutStatistiquesSourceInput>, UniversiteUncheckedUpdateWithoutStatistiquesSourceInput>
  }

  export type UniversiteUpdateOneRequiredWithoutStatistiquesDestinationNestedInput = {
    create?: XOR<UniversiteCreateWithoutStatistiquesDestinationInput, UniversiteUncheckedCreateWithoutStatistiquesDestinationInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutStatistiquesDestinationInput
    upsert?: UniversiteUpsertWithoutStatistiquesDestinationInput
    connect?: UniversiteWhereUniqueInput
    update?: XOR<XOR<UniversiteUpdateToOneWithWhereWithoutStatistiquesDestinationInput, UniversiteUpdateWithoutStatistiquesDestinationInput>, UniversiteUncheckedUpdateWithoutStatistiquesDestinationInput>
  }

  export type UserCreateNestedOneWithoutReservationsInput = {
    create?: XOR<UserCreateWithoutReservationsInput, UserUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservationsInput
    connect?: UserWhereUniqueInput
  }

  export type RessourceCreateNestedOneWithoutReservationsInput = {
    create?: XOR<RessourceCreateWithoutReservationsInput, RessourceUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutReservationsInput
    connect?: RessourceWhereUniqueInput
  }

  export type UniversiteCreateNestedOneWithoutReservationsInput = {
    create?: XOR<UniversiteCreateWithoutReservationsInput, UniversiteUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutReservationsInput
    connect?: UniversiteWhereUniqueInput
  }

  export type EnumStatutReservationFieldUpdateOperationsInput = {
    set?: $Enums.StatutReservation
  }

  export type UserUpdateOneWithoutReservationsNestedInput = {
    create?: XOR<UserCreateWithoutReservationsInput, UserUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservationsInput
    upsert?: UserUpsertWithoutReservationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReservationsInput, UserUpdateWithoutReservationsInput>, UserUncheckedUpdateWithoutReservationsInput>
  }

  export type RessourceUpdateOneRequiredWithoutReservationsNestedInput = {
    create?: XOR<RessourceCreateWithoutReservationsInput, RessourceUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutReservationsInput
    upsert?: RessourceUpsertWithoutReservationsInput
    connect?: RessourceWhereUniqueInput
    update?: XOR<XOR<RessourceUpdateToOneWithWhereWithoutReservationsInput, RessourceUpdateWithoutReservationsInput>, RessourceUncheckedUpdateWithoutReservationsInput>
  }

  export type UniversiteUpdateOneRequiredWithoutReservationsNestedInput = {
    create?: XOR<UniversiteCreateWithoutReservationsInput, UniversiteUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutReservationsInput
    upsert?: UniversiteUpsertWithoutReservationsInput
    connect?: UniversiteWhereUniqueInput
    update?: XOR<XOR<UniversiteUpdateToOneWithWhereWithoutReservationsInput, UniversiteUpdateWithoutReservationsInput>, UniversiteUncheckedUpdateWithoutReservationsInput>
  }

  export type RessourceCreateNestedOneWithoutExemplairesInput = {
    create?: XOR<RessourceCreateWithoutExemplairesInput, RessourceUncheckedCreateWithoutExemplairesInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutExemplairesInput
    connect?: RessourceWhereUniqueInput
  }

  export type EmpruntCreateNestedManyWithoutExemplaireInput = {
    create?: XOR<EmpruntCreateWithoutExemplaireInput, EmpruntUncheckedCreateWithoutExemplaireInput> | EmpruntCreateWithoutExemplaireInput[] | EmpruntUncheckedCreateWithoutExemplaireInput[]
    connectOrCreate?: EmpruntCreateOrConnectWithoutExemplaireInput | EmpruntCreateOrConnectWithoutExemplaireInput[]
    createMany?: EmpruntCreateManyExemplaireInputEnvelope
    connect?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
  }

  export type EmpruntUncheckedCreateNestedManyWithoutExemplaireInput = {
    create?: XOR<EmpruntCreateWithoutExemplaireInput, EmpruntUncheckedCreateWithoutExemplaireInput> | EmpruntCreateWithoutExemplaireInput[] | EmpruntUncheckedCreateWithoutExemplaireInput[]
    connectOrCreate?: EmpruntCreateOrConnectWithoutExemplaireInput | EmpruntCreateOrConnectWithoutExemplaireInput[]
    createMany?: EmpruntCreateManyExemplaireInputEnvelope
    connect?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
  }

  export type EnumEtatExemplaireFieldUpdateOperationsInput = {
    set?: $Enums.EtatExemplaire
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type RessourceUpdateOneRequiredWithoutExemplairesNestedInput = {
    create?: XOR<RessourceCreateWithoutExemplairesInput, RessourceUncheckedCreateWithoutExemplairesInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutExemplairesInput
    upsert?: RessourceUpsertWithoutExemplairesInput
    connect?: RessourceWhereUniqueInput
    update?: XOR<XOR<RessourceUpdateToOneWithWhereWithoutExemplairesInput, RessourceUpdateWithoutExemplairesInput>, RessourceUncheckedUpdateWithoutExemplairesInput>
  }

  export type EmpruntUpdateManyWithoutExemplaireNestedInput = {
    create?: XOR<EmpruntCreateWithoutExemplaireInput, EmpruntUncheckedCreateWithoutExemplaireInput> | EmpruntCreateWithoutExemplaireInput[] | EmpruntUncheckedCreateWithoutExemplaireInput[]
    connectOrCreate?: EmpruntCreateOrConnectWithoutExemplaireInput | EmpruntCreateOrConnectWithoutExemplaireInput[]
    upsert?: EmpruntUpsertWithWhereUniqueWithoutExemplaireInput | EmpruntUpsertWithWhereUniqueWithoutExemplaireInput[]
    createMany?: EmpruntCreateManyExemplaireInputEnvelope
    set?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    disconnect?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    delete?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    connect?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    update?: EmpruntUpdateWithWhereUniqueWithoutExemplaireInput | EmpruntUpdateWithWhereUniqueWithoutExemplaireInput[]
    updateMany?: EmpruntUpdateManyWithWhereWithoutExemplaireInput | EmpruntUpdateManyWithWhereWithoutExemplaireInput[]
    deleteMany?: EmpruntScalarWhereInput | EmpruntScalarWhereInput[]
  }

  export type EmpruntUncheckedUpdateManyWithoutExemplaireNestedInput = {
    create?: XOR<EmpruntCreateWithoutExemplaireInput, EmpruntUncheckedCreateWithoutExemplaireInput> | EmpruntCreateWithoutExemplaireInput[] | EmpruntUncheckedCreateWithoutExemplaireInput[]
    connectOrCreate?: EmpruntCreateOrConnectWithoutExemplaireInput | EmpruntCreateOrConnectWithoutExemplaireInput[]
    upsert?: EmpruntUpsertWithWhereUniqueWithoutExemplaireInput | EmpruntUpsertWithWhereUniqueWithoutExemplaireInput[]
    createMany?: EmpruntCreateManyExemplaireInputEnvelope
    set?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    disconnect?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    delete?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    connect?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    update?: EmpruntUpdateWithWhereUniqueWithoutExemplaireInput | EmpruntUpdateWithWhereUniqueWithoutExemplaireInput[]
    updateMany?: EmpruntUpdateManyWithWhereWithoutExemplaireInput | EmpruntUpdateManyWithWhereWithoutExemplaireInput[]
    deleteMany?: EmpruntScalarWhereInput | EmpruntScalarWhereInput[]
  }

  export type ExemplairePhysiqueCreateNestedOneWithoutEmpruntsInput = {
    create?: XOR<ExemplairePhysiqueCreateWithoutEmpruntsInput, ExemplairePhysiqueUncheckedCreateWithoutEmpruntsInput>
    connectOrCreate?: ExemplairePhysiqueCreateOrConnectWithoutEmpruntsInput
    connect?: ExemplairePhysiqueWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutEmpruntsInput = {
    create?: XOR<UserCreateWithoutEmpruntsInput, UserUncheckedCreateWithoutEmpruntsInput>
    connectOrCreate?: UserCreateOrConnectWithoutEmpruntsInput
    connect?: UserWhereUniqueInput
  }

  export type UniversiteCreateNestedOneWithoutEmpruntsInput = {
    create?: XOR<UniversiteCreateWithoutEmpruntsInput, UniversiteUncheckedCreateWithoutEmpruntsInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutEmpruntsInput
    connect?: UniversiteWhereUniqueInput
  }

  export type EnumStatutEmpruntFieldUpdateOperationsInput = {
    set?: $Enums.StatutEmprunt
  }

  export type ExemplairePhysiqueUpdateOneRequiredWithoutEmpruntsNestedInput = {
    create?: XOR<ExemplairePhysiqueCreateWithoutEmpruntsInput, ExemplairePhysiqueUncheckedCreateWithoutEmpruntsInput>
    connectOrCreate?: ExemplairePhysiqueCreateOrConnectWithoutEmpruntsInput
    upsert?: ExemplairePhysiqueUpsertWithoutEmpruntsInput
    connect?: ExemplairePhysiqueWhereUniqueInput
    update?: XOR<XOR<ExemplairePhysiqueUpdateToOneWithWhereWithoutEmpruntsInput, ExemplairePhysiqueUpdateWithoutEmpruntsInput>, ExemplairePhysiqueUncheckedUpdateWithoutEmpruntsInput>
  }

  export type UserUpdateOneRequiredWithoutEmpruntsNestedInput = {
    create?: XOR<UserCreateWithoutEmpruntsInput, UserUncheckedCreateWithoutEmpruntsInput>
    connectOrCreate?: UserCreateOrConnectWithoutEmpruntsInput
    upsert?: UserUpsertWithoutEmpruntsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutEmpruntsInput, UserUpdateWithoutEmpruntsInput>, UserUncheckedUpdateWithoutEmpruntsInput>
  }

  export type UniversiteUpdateOneRequiredWithoutEmpruntsNestedInput = {
    create?: XOR<UniversiteCreateWithoutEmpruntsInput, UniversiteUncheckedCreateWithoutEmpruntsInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutEmpruntsInput
    upsert?: UniversiteUpsertWithoutEmpruntsInput
    connect?: UniversiteWhereUniqueInput
    update?: XOR<XOR<UniversiteUpdateToOneWithWhereWithoutEmpruntsInput, UniversiteUpdateWithoutEmpruntsInput>, UniversiteUncheckedUpdateWithoutEmpruntsInput>
  }

  export type UserCreateNestedOneWithoutRecommandationsInput = {
    create?: XOR<UserCreateWithoutRecommandationsInput, UserUncheckedCreateWithoutRecommandationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutRecommandationsInput
    connect?: UserWhereUniqueInput
  }

  export type RessourceCreateNestedOneWithoutRecommandationsInput = {
    create?: XOR<RessourceCreateWithoutRecommandationsInput, RessourceUncheckedCreateWithoutRecommandationsInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutRecommandationsInput
    connect?: RessourceWhereUniqueInput
  }

  export type UniversiteCreateNestedOneWithoutRecommandationsSourceInput = {
    create?: XOR<UniversiteCreateWithoutRecommandationsSourceInput, UniversiteUncheckedCreateWithoutRecommandationsSourceInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutRecommandationsSourceInput
    connect?: UniversiteWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumMotifRecommandationFieldUpdateOperationsInput = {
    set?: $Enums.MotifRecommandation
  }

  export type UserUpdateOneRequiredWithoutRecommandationsNestedInput = {
    create?: XOR<UserCreateWithoutRecommandationsInput, UserUncheckedCreateWithoutRecommandationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutRecommandationsInput
    upsert?: UserUpsertWithoutRecommandationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRecommandationsInput, UserUpdateWithoutRecommandationsInput>, UserUncheckedUpdateWithoutRecommandationsInput>
  }

  export type RessourceUpdateOneRequiredWithoutRecommandationsNestedInput = {
    create?: XOR<RessourceCreateWithoutRecommandationsInput, RessourceUncheckedCreateWithoutRecommandationsInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutRecommandationsInput
    upsert?: RessourceUpsertWithoutRecommandationsInput
    connect?: RessourceWhereUniqueInput
    update?: XOR<XOR<RessourceUpdateToOneWithWhereWithoutRecommandationsInput, RessourceUpdateWithoutRecommandationsInput>, RessourceUncheckedUpdateWithoutRecommandationsInput>
  }

  export type UniversiteUpdateOneWithoutRecommandationsSourceNestedInput = {
    create?: XOR<UniversiteCreateWithoutRecommandationsSourceInput, UniversiteUncheckedCreateWithoutRecommandationsSourceInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutRecommandationsSourceInput
    upsert?: UniversiteUpsertWithoutRecommandationsSourceInput
    disconnect?: UniversiteWhereInput | boolean
    delete?: UniversiteWhereInput | boolean
    connect?: UniversiteWhereUniqueInput
    update?: XOR<XOR<UniversiteUpdateToOneWithWhereWithoutRecommandationsSourceInput, UniversiteUpdateWithoutRecommandationsSourceInput>, UniversiteUncheckedUpdateWithoutRecommandationsSourceInput>
  }

  export type UserCreateNestedManyWithoutUniversiteInput = {
    create?: XOR<UserCreateWithoutUniversiteInput, UserUncheckedCreateWithoutUniversiteInput> | UserCreateWithoutUniversiteInput[] | UserUncheckedCreateWithoutUniversiteInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUniversiteInput | UserCreateOrConnectWithoutUniversiteInput[]
    createMany?: UserCreateManyUniversiteInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type RessourceCreateNestedManyWithoutUniversiteInput = {
    create?: XOR<RessourceCreateWithoutUniversiteInput, RessourceUncheckedCreateWithoutUniversiteInput> | RessourceCreateWithoutUniversiteInput[] | RessourceUncheckedCreateWithoutUniversiteInput[]
    connectOrCreate?: RessourceCreateOrConnectWithoutUniversiteInput | RessourceCreateOrConnectWithoutUniversiteInput[]
    createMany?: RessourceCreateManyUniversiteInputEnvelope
    connect?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
  }

  export type ConventionInteruniversitaireCreateNestedManyWithoutUniversite1Input = {
    create?: XOR<ConventionInteruniversitaireCreateWithoutUniversite1Input, ConventionInteruniversitaireUncheckedCreateWithoutUniversite1Input> | ConventionInteruniversitaireCreateWithoutUniversite1Input[] | ConventionInteruniversitaireUncheckedCreateWithoutUniversite1Input[]
    connectOrCreate?: ConventionInteruniversitaireCreateOrConnectWithoutUniversite1Input | ConventionInteruniversitaireCreateOrConnectWithoutUniversite1Input[]
    createMany?: ConventionInteruniversitaireCreateManyUniversite1InputEnvelope
    connect?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
  }

  export type ConventionInteruniversitaireCreateNestedManyWithoutUniversite2Input = {
    create?: XOR<ConventionInteruniversitaireCreateWithoutUniversite2Input, ConventionInteruniversitaireUncheckedCreateWithoutUniversite2Input> | ConventionInteruniversitaireCreateWithoutUniversite2Input[] | ConventionInteruniversitaireUncheckedCreateWithoutUniversite2Input[]
    connectOrCreate?: ConventionInteruniversitaireCreateOrConnectWithoutUniversite2Input | ConventionInteruniversitaireCreateOrConnectWithoutUniversite2Input[]
    createMany?: ConventionInteruniversitaireCreateManyUniversite2InputEnvelope
    connect?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
  }

  export type StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteSourceRelInput = {
    create?: XOR<StatistiqueInteruniversitaireCreateWithoutUniversiteSourceRelInput, StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteSourceRelInput> | StatistiqueInteruniversitaireCreateWithoutUniversiteSourceRelInput[] | StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteSourceRelInput[]
    connectOrCreate?: StatistiqueInteruniversitaireCreateOrConnectWithoutUniversiteSourceRelInput | StatistiqueInteruniversitaireCreateOrConnectWithoutUniversiteSourceRelInput[]
    createMany?: StatistiqueInteruniversitaireCreateManyUniversiteSourceRelInputEnvelope
    connect?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
  }

  export type StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteDestinationRelInput = {
    create?: XOR<StatistiqueInteruniversitaireCreateWithoutUniversiteDestinationRelInput, StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteDestinationRelInput> | StatistiqueInteruniversitaireCreateWithoutUniversiteDestinationRelInput[] | StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteDestinationRelInput[]
    connectOrCreate?: StatistiqueInteruniversitaireCreateOrConnectWithoutUniversiteDestinationRelInput | StatistiqueInteruniversitaireCreateOrConnectWithoutUniversiteDestinationRelInput[]
    createMany?: StatistiqueInteruniversitaireCreateManyUniversiteDestinationRelInputEnvelope
    connect?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
  }

  export type ReservationCreateNestedManyWithoutUniversiteEmprunteurRelInput = {
    create?: XOR<ReservationCreateWithoutUniversiteEmprunteurRelInput, ReservationUncheckedCreateWithoutUniversiteEmprunteurRelInput> | ReservationCreateWithoutUniversiteEmprunteurRelInput[] | ReservationUncheckedCreateWithoutUniversiteEmprunteurRelInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutUniversiteEmprunteurRelInput | ReservationCreateOrConnectWithoutUniversiteEmprunteurRelInput[]
    createMany?: ReservationCreateManyUniversiteEmprunteurRelInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type EmpruntCreateNestedManyWithoutUniversiteEmprunteurRelInput = {
    create?: XOR<EmpruntCreateWithoutUniversiteEmprunteurRelInput, EmpruntUncheckedCreateWithoutUniversiteEmprunteurRelInput> | EmpruntCreateWithoutUniversiteEmprunteurRelInput[] | EmpruntUncheckedCreateWithoutUniversiteEmprunteurRelInput[]
    connectOrCreate?: EmpruntCreateOrConnectWithoutUniversiteEmprunteurRelInput | EmpruntCreateOrConnectWithoutUniversiteEmprunteurRelInput[]
    createMany?: EmpruntCreateManyUniversiteEmprunteurRelInputEnvelope
    connect?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
  }

  export type RecommandationCreateNestedManyWithoutUniversiteSourceRelInput = {
    create?: XOR<RecommandationCreateWithoutUniversiteSourceRelInput, RecommandationUncheckedCreateWithoutUniversiteSourceRelInput> | RecommandationCreateWithoutUniversiteSourceRelInput[] | RecommandationUncheckedCreateWithoutUniversiteSourceRelInput[]
    connectOrCreate?: RecommandationCreateOrConnectWithoutUniversiteSourceRelInput | RecommandationCreateOrConnectWithoutUniversiteSourceRelInput[]
    createMany?: RecommandationCreateManyUniversiteSourceRelInputEnvelope
    connect?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
  }

  export type StatistiqueBibliothequeCreateNestedManyWithoutUniversiteInput = {
    create?: XOR<StatistiqueBibliothequeCreateWithoutUniversiteInput, StatistiqueBibliothequeUncheckedCreateWithoutUniversiteInput> | StatistiqueBibliothequeCreateWithoutUniversiteInput[] | StatistiqueBibliothequeUncheckedCreateWithoutUniversiteInput[]
    connectOrCreate?: StatistiqueBibliothequeCreateOrConnectWithoutUniversiteInput | StatistiqueBibliothequeCreateOrConnectWithoutUniversiteInput[]
    createMany?: StatistiqueBibliothequeCreateManyUniversiteInputEnvelope
    connect?: StatistiqueBibliothequeWhereUniqueInput | StatistiqueBibliothequeWhereUniqueInput[]
  }

  export type PartageUniversiteCreateNestedManyWithoutUniversiteSourceRelInput = {
    create?: XOR<PartageUniversiteCreateWithoutUniversiteSourceRelInput, PartageUniversiteUncheckedCreateWithoutUniversiteSourceRelInput> | PartageUniversiteCreateWithoutUniversiteSourceRelInput[] | PartageUniversiteUncheckedCreateWithoutUniversiteSourceRelInput[]
    connectOrCreate?: PartageUniversiteCreateOrConnectWithoutUniversiteSourceRelInput | PartageUniversiteCreateOrConnectWithoutUniversiteSourceRelInput[]
    createMany?: PartageUniversiteCreateManyUniversiteSourceRelInputEnvelope
    connect?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
  }

  export type PartageUniversiteCreateNestedManyWithoutUniversiteDestinationRelInput = {
    create?: XOR<PartageUniversiteCreateWithoutUniversiteDestinationRelInput, PartageUniversiteUncheckedCreateWithoutUniversiteDestinationRelInput> | PartageUniversiteCreateWithoutUniversiteDestinationRelInput[] | PartageUniversiteUncheckedCreateWithoutUniversiteDestinationRelInput[]
    connectOrCreate?: PartageUniversiteCreateOrConnectWithoutUniversiteDestinationRelInput | PartageUniversiteCreateOrConnectWithoutUniversiteDestinationRelInput[]
    createMany?: PartageUniversiteCreateManyUniversiteDestinationRelInputEnvelope
    connect?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
  }

  export type TransactionBlockchainCreateNestedManyWithoutUniversiteOrigineRelInput = {
    create?: XOR<TransactionBlockchainCreateWithoutUniversiteOrigineRelInput, TransactionBlockchainUncheckedCreateWithoutUniversiteOrigineRelInput> | TransactionBlockchainCreateWithoutUniversiteOrigineRelInput[] | TransactionBlockchainUncheckedCreateWithoutUniversiteOrigineRelInput[]
    connectOrCreate?: TransactionBlockchainCreateOrConnectWithoutUniversiteOrigineRelInput | TransactionBlockchainCreateOrConnectWithoutUniversiteOrigineRelInput[]
    createMany?: TransactionBlockchainCreateManyUniversiteOrigineRelInputEnvelope
    connect?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
  }

  export type TransactionBlockchainCreateNestedManyWithoutUniversiteDestinationRelInput = {
    create?: XOR<TransactionBlockchainCreateWithoutUniversiteDestinationRelInput, TransactionBlockchainUncheckedCreateWithoutUniversiteDestinationRelInput> | TransactionBlockchainCreateWithoutUniversiteDestinationRelInput[] | TransactionBlockchainUncheckedCreateWithoutUniversiteDestinationRelInput[]
    connectOrCreate?: TransactionBlockchainCreateOrConnectWithoutUniversiteDestinationRelInput | TransactionBlockchainCreateOrConnectWithoutUniversiteDestinationRelInput[]
    createMany?: TransactionBlockchainCreateManyUniversiteDestinationRelInputEnvelope
    connect?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
  }

  export type HistoriqueAccesCreateNestedManyWithoutUniversiteSrcRelInput = {
    create?: XOR<HistoriqueAccesCreateWithoutUniversiteSrcRelInput, HistoriqueAccesUncheckedCreateWithoutUniversiteSrcRelInput> | HistoriqueAccesCreateWithoutUniversiteSrcRelInput[] | HistoriqueAccesUncheckedCreateWithoutUniversiteSrcRelInput[]
    connectOrCreate?: HistoriqueAccesCreateOrConnectWithoutUniversiteSrcRelInput | HistoriqueAccesCreateOrConnectWithoutUniversiteSrcRelInput[]
    createMany?: HistoriqueAccesCreateManyUniversiteSrcRelInputEnvelope
    connect?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutUniversiteInput = {
    create?: XOR<UserCreateWithoutUniversiteInput, UserUncheckedCreateWithoutUniversiteInput> | UserCreateWithoutUniversiteInput[] | UserUncheckedCreateWithoutUniversiteInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUniversiteInput | UserCreateOrConnectWithoutUniversiteInput[]
    createMany?: UserCreateManyUniversiteInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type RessourceUncheckedCreateNestedManyWithoutUniversiteInput = {
    create?: XOR<RessourceCreateWithoutUniversiteInput, RessourceUncheckedCreateWithoutUniversiteInput> | RessourceCreateWithoutUniversiteInput[] | RessourceUncheckedCreateWithoutUniversiteInput[]
    connectOrCreate?: RessourceCreateOrConnectWithoutUniversiteInput | RessourceCreateOrConnectWithoutUniversiteInput[]
    createMany?: RessourceCreateManyUniversiteInputEnvelope
    connect?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
  }

  export type ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite1Input = {
    create?: XOR<ConventionInteruniversitaireCreateWithoutUniversite1Input, ConventionInteruniversitaireUncheckedCreateWithoutUniversite1Input> | ConventionInteruniversitaireCreateWithoutUniversite1Input[] | ConventionInteruniversitaireUncheckedCreateWithoutUniversite1Input[]
    connectOrCreate?: ConventionInteruniversitaireCreateOrConnectWithoutUniversite1Input | ConventionInteruniversitaireCreateOrConnectWithoutUniversite1Input[]
    createMany?: ConventionInteruniversitaireCreateManyUniversite1InputEnvelope
    connect?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
  }

  export type ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite2Input = {
    create?: XOR<ConventionInteruniversitaireCreateWithoutUniversite2Input, ConventionInteruniversitaireUncheckedCreateWithoutUniversite2Input> | ConventionInteruniversitaireCreateWithoutUniversite2Input[] | ConventionInteruniversitaireUncheckedCreateWithoutUniversite2Input[]
    connectOrCreate?: ConventionInteruniversitaireCreateOrConnectWithoutUniversite2Input | ConventionInteruniversitaireCreateOrConnectWithoutUniversite2Input[]
    createMany?: ConventionInteruniversitaireCreateManyUniversite2InputEnvelope
    connect?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
  }

  export type StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteSourceRelInput = {
    create?: XOR<StatistiqueInteruniversitaireCreateWithoutUniversiteSourceRelInput, StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteSourceRelInput> | StatistiqueInteruniversitaireCreateWithoutUniversiteSourceRelInput[] | StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteSourceRelInput[]
    connectOrCreate?: StatistiqueInteruniversitaireCreateOrConnectWithoutUniversiteSourceRelInput | StatistiqueInteruniversitaireCreateOrConnectWithoutUniversiteSourceRelInput[]
    createMany?: StatistiqueInteruniversitaireCreateManyUniversiteSourceRelInputEnvelope
    connect?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
  }

  export type StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput = {
    create?: XOR<StatistiqueInteruniversitaireCreateWithoutUniversiteDestinationRelInput, StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteDestinationRelInput> | StatistiqueInteruniversitaireCreateWithoutUniversiteDestinationRelInput[] | StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteDestinationRelInput[]
    connectOrCreate?: StatistiqueInteruniversitaireCreateOrConnectWithoutUniversiteDestinationRelInput | StatistiqueInteruniversitaireCreateOrConnectWithoutUniversiteDestinationRelInput[]
    createMany?: StatistiqueInteruniversitaireCreateManyUniversiteDestinationRelInputEnvelope
    connect?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
  }

  export type ReservationUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput = {
    create?: XOR<ReservationCreateWithoutUniversiteEmprunteurRelInput, ReservationUncheckedCreateWithoutUniversiteEmprunteurRelInput> | ReservationCreateWithoutUniversiteEmprunteurRelInput[] | ReservationUncheckedCreateWithoutUniversiteEmprunteurRelInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutUniversiteEmprunteurRelInput | ReservationCreateOrConnectWithoutUniversiteEmprunteurRelInput[]
    createMany?: ReservationCreateManyUniversiteEmprunteurRelInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type EmpruntUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput = {
    create?: XOR<EmpruntCreateWithoutUniversiteEmprunteurRelInput, EmpruntUncheckedCreateWithoutUniversiteEmprunteurRelInput> | EmpruntCreateWithoutUniversiteEmprunteurRelInput[] | EmpruntUncheckedCreateWithoutUniversiteEmprunteurRelInput[]
    connectOrCreate?: EmpruntCreateOrConnectWithoutUniversiteEmprunteurRelInput | EmpruntCreateOrConnectWithoutUniversiteEmprunteurRelInput[]
    createMany?: EmpruntCreateManyUniversiteEmprunteurRelInputEnvelope
    connect?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
  }

  export type RecommandationUncheckedCreateNestedManyWithoutUniversiteSourceRelInput = {
    create?: XOR<RecommandationCreateWithoutUniversiteSourceRelInput, RecommandationUncheckedCreateWithoutUniversiteSourceRelInput> | RecommandationCreateWithoutUniversiteSourceRelInput[] | RecommandationUncheckedCreateWithoutUniversiteSourceRelInput[]
    connectOrCreate?: RecommandationCreateOrConnectWithoutUniversiteSourceRelInput | RecommandationCreateOrConnectWithoutUniversiteSourceRelInput[]
    createMany?: RecommandationCreateManyUniversiteSourceRelInputEnvelope
    connect?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
  }

  export type StatistiqueBibliothequeUncheckedCreateNestedManyWithoutUniversiteInput = {
    create?: XOR<StatistiqueBibliothequeCreateWithoutUniversiteInput, StatistiqueBibliothequeUncheckedCreateWithoutUniversiteInput> | StatistiqueBibliothequeCreateWithoutUniversiteInput[] | StatistiqueBibliothequeUncheckedCreateWithoutUniversiteInput[]
    connectOrCreate?: StatistiqueBibliothequeCreateOrConnectWithoutUniversiteInput | StatistiqueBibliothequeCreateOrConnectWithoutUniversiteInput[]
    createMany?: StatistiqueBibliothequeCreateManyUniversiteInputEnvelope
    connect?: StatistiqueBibliothequeWhereUniqueInput | StatistiqueBibliothequeWhereUniqueInput[]
  }

  export type PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteSourceRelInput = {
    create?: XOR<PartageUniversiteCreateWithoutUniversiteSourceRelInput, PartageUniversiteUncheckedCreateWithoutUniversiteSourceRelInput> | PartageUniversiteCreateWithoutUniversiteSourceRelInput[] | PartageUniversiteUncheckedCreateWithoutUniversiteSourceRelInput[]
    connectOrCreate?: PartageUniversiteCreateOrConnectWithoutUniversiteSourceRelInput | PartageUniversiteCreateOrConnectWithoutUniversiteSourceRelInput[]
    createMany?: PartageUniversiteCreateManyUniversiteSourceRelInputEnvelope
    connect?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
  }

  export type PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput = {
    create?: XOR<PartageUniversiteCreateWithoutUniversiteDestinationRelInput, PartageUniversiteUncheckedCreateWithoutUniversiteDestinationRelInput> | PartageUniversiteCreateWithoutUniversiteDestinationRelInput[] | PartageUniversiteUncheckedCreateWithoutUniversiteDestinationRelInput[]
    connectOrCreate?: PartageUniversiteCreateOrConnectWithoutUniversiteDestinationRelInput | PartageUniversiteCreateOrConnectWithoutUniversiteDestinationRelInput[]
    createMany?: PartageUniversiteCreateManyUniversiteDestinationRelInputEnvelope
    connect?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
  }

  export type TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteOrigineRelInput = {
    create?: XOR<TransactionBlockchainCreateWithoutUniversiteOrigineRelInput, TransactionBlockchainUncheckedCreateWithoutUniversiteOrigineRelInput> | TransactionBlockchainCreateWithoutUniversiteOrigineRelInput[] | TransactionBlockchainUncheckedCreateWithoutUniversiteOrigineRelInput[]
    connectOrCreate?: TransactionBlockchainCreateOrConnectWithoutUniversiteOrigineRelInput | TransactionBlockchainCreateOrConnectWithoutUniversiteOrigineRelInput[]
    createMany?: TransactionBlockchainCreateManyUniversiteOrigineRelInputEnvelope
    connect?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
  }

  export type TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput = {
    create?: XOR<TransactionBlockchainCreateWithoutUniversiteDestinationRelInput, TransactionBlockchainUncheckedCreateWithoutUniversiteDestinationRelInput> | TransactionBlockchainCreateWithoutUniversiteDestinationRelInput[] | TransactionBlockchainUncheckedCreateWithoutUniversiteDestinationRelInput[]
    connectOrCreate?: TransactionBlockchainCreateOrConnectWithoutUniversiteDestinationRelInput | TransactionBlockchainCreateOrConnectWithoutUniversiteDestinationRelInput[]
    createMany?: TransactionBlockchainCreateManyUniversiteDestinationRelInputEnvelope
    connect?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
  }

  export type HistoriqueAccesUncheckedCreateNestedManyWithoutUniversiteSrcRelInput = {
    create?: XOR<HistoriqueAccesCreateWithoutUniversiteSrcRelInput, HistoriqueAccesUncheckedCreateWithoutUniversiteSrcRelInput> | HistoriqueAccesCreateWithoutUniversiteSrcRelInput[] | HistoriqueAccesUncheckedCreateWithoutUniversiteSrcRelInput[]
    connectOrCreate?: HistoriqueAccesCreateOrConnectWithoutUniversiteSrcRelInput | HistoriqueAccesCreateOrConnectWithoutUniversiteSrcRelInput[]
    createMany?: HistoriqueAccesCreateManyUniversiteSrcRelInputEnvelope
    connect?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
  }

  export type UserUpdateManyWithoutUniversiteNestedInput = {
    create?: XOR<UserCreateWithoutUniversiteInput, UserUncheckedCreateWithoutUniversiteInput> | UserCreateWithoutUniversiteInput[] | UserUncheckedCreateWithoutUniversiteInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUniversiteInput | UserCreateOrConnectWithoutUniversiteInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutUniversiteInput | UserUpsertWithWhereUniqueWithoutUniversiteInput[]
    createMany?: UserCreateManyUniversiteInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutUniversiteInput | UserUpdateWithWhereUniqueWithoutUniversiteInput[]
    updateMany?: UserUpdateManyWithWhereWithoutUniversiteInput | UserUpdateManyWithWhereWithoutUniversiteInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type RessourceUpdateManyWithoutUniversiteNestedInput = {
    create?: XOR<RessourceCreateWithoutUniversiteInput, RessourceUncheckedCreateWithoutUniversiteInput> | RessourceCreateWithoutUniversiteInput[] | RessourceUncheckedCreateWithoutUniversiteInput[]
    connectOrCreate?: RessourceCreateOrConnectWithoutUniversiteInput | RessourceCreateOrConnectWithoutUniversiteInput[]
    upsert?: RessourceUpsertWithWhereUniqueWithoutUniversiteInput | RessourceUpsertWithWhereUniqueWithoutUniversiteInput[]
    createMany?: RessourceCreateManyUniversiteInputEnvelope
    set?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
    disconnect?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
    delete?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
    connect?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
    update?: RessourceUpdateWithWhereUniqueWithoutUniversiteInput | RessourceUpdateWithWhereUniqueWithoutUniversiteInput[]
    updateMany?: RessourceUpdateManyWithWhereWithoutUniversiteInput | RessourceUpdateManyWithWhereWithoutUniversiteInput[]
    deleteMany?: RessourceScalarWhereInput | RessourceScalarWhereInput[]
  }

  export type ConventionInteruniversitaireUpdateManyWithoutUniversite1NestedInput = {
    create?: XOR<ConventionInteruniversitaireCreateWithoutUniversite1Input, ConventionInteruniversitaireUncheckedCreateWithoutUniversite1Input> | ConventionInteruniversitaireCreateWithoutUniversite1Input[] | ConventionInteruniversitaireUncheckedCreateWithoutUniversite1Input[]
    connectOrCreate?: ConventionInteruniversitaireCreateOrConnectWithoutUniversite1Input | ConventionInteruniversitaireCreateOrConnectWithoutUniversite1Input[]
    upsert?: ConventionInteruniversitaireUpsertWithWhereUniqueWithoutUniversite1Input | ConventionInteruniversitaireUpsertWithWhereUniqueWithoutUniversite1Input[]
    createMany?: ConventionInteruniversitaireCreateManyUniversite1InputEnvelope
    set?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
    disconnect?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
    delete?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
    connect?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
    update?: ConventionInteruniversitaireUpdateWithWhereUniqueWithoutUniversite1Input | ConventionInteruniversitaireUpdateWithWhereUniqueWithoutUniversite1Input[]
    updateMany?: ConventionInteruniversitaireUpdateManyWithWhereWithoutUniversite1Input | ConventionInteruniversitaireUpdateManyWithWhereWithoutUniversite1Input[]
    deleteMany?: ConventionInteruniversitaireScalarWhereInput | ConventionInteruniversitaireScalarWhereInput[]
  }

  export type ConventionInteruniversitaireUpdateManyWithoutUniversite2NestedInput = {
    create?: XOR<ConventionInteruniversitaireCreateWithoutUniversite2Input, ConventionInteruniversitaireUncheckedCreateWithoutUniversite2Input> | ConventionInteruniversitaireCreateWithoutUniversite2Input[] | ConventionInteruniversitaireUncheckedCreateWithoutUniversite2Input[]
    connectOrCreate?: ConventionInteruniversitaireCreateOrConnectWithoutUniversite2Input | ConventionInteruniversitaireCreateOrConnectWithoutUniversite2Input[]
    upsert?: ConventionInteruniversitaireUpsertWithWhereUniqueWithoutUniversite2Input | ConventionInteruniversitaireUpsertWithWhereUniqueWithoutUniversite2Input[]
    createMany?: ConventionInteruniversitaireCreateManyUniversite2InputEnvelope
    set?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
    disconnect?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
    delete?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
    connect?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
    update?: ConventionInteruniversitaireUpdateWithWhereUniqueWithoutUniversite2Input | ConventionInteruniversitaireUpdateWithWhereUniqueWithoutUniversite2Input[]
    updateMany?: ConventionInteruniversitaireUpdateManyWithWhereWithoutUniversite2Input | ConventionInteruniversitaireUpdateManyWithWhereWithoutUniversite2Input[]
    deleteMany?: ConventionInteruniversitaireScalarWhereInput | ConventionInteruniversitaireScalarWhereInput[]
  }

  export type StatistiqueInteruniversitaireUpdateManyWithoutUniversiteSourceRelNestedInput = {
    create?: XOR<StatistiqueInteruniversitaireCreateWithoutUniversiteSourceRelInput, StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteSourceRelInput> | StatistiqueInteruniversitaireCreateWithoutUniversiteSourceRelInput[] | StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteSourceRelInput[]
    connectOrCreate?: StatistiqueInteruniversitaireCreateOrConnectWithoutUniversiteSourceRelInput | StatistiqueInteruniversitaireCreateOrConnectWithoutUniversiteSourceRelInput[]
    upsert?: StatistiqueInteruniversitaireUpsertWithWhereUniqueWithoutUniversiteSourceRelInput | StatistiqueInteruniversitaireUpsertWithWhereUniqueWithoutUniversiteSourceRelInput[]
    createMany?: StatistiqueInteruniversitaireCreateManyUniversiteSourceRelInputEnvelope
    set?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
    disconnect?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
    delete?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
    connect?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
    update?: StatistiqueInteruniversitaireUpdateWithWhereUniqueWithoutUniversiteSourceRelInput | StatistiqueInteruniversitaireUpdateWithWhereUniqueWithoutUniversiteSourceRelInput[]
    updateMany?: StatistiqueInteruniversitaireUpdateManyWithWhereWithoutUniversiteSourceRelInput | StatistiqueInteruniversitaireUpdateManyWithWhereWithoutUniversiteSourceRelInput[]
    deleteMany?: StatistiqueInteruniversitaireScalarWhereInput | StatistiqueInteruniversitaireScalarWhereInput[]
  }

  export type StatistiqueInteruniversitaireUpdateManyWithoutUniversiteDestinationRelNestedInput = {
    create?: XOR<StatistiqueInteruniversitaireCreateWithoutUniversiteDestinationRelInput, StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteDestinationRelInput> | StatistiqueInteruniversitaireCreateWithoutUniversiteDestinationRelInput[] | StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteDestinationRelInput[]
    connectOrCreate?: StatistiqueInteruniversitaireCreateOrConnectWithoutUniversiteDestinationRelInput | StatistiqueInteruniversitaireCreateOrConnectWithoutUniversiteDestinationRelInput[]
    upsert?: StatistiqueInteruniversitaireUpsertWithWhereUniqueWithoutUniversiteDestinationRelInput | StatistiqueInteruniversitaireUpsertWithWhereUniqueWithoutUniversiteDestinationRelInput[]
    createMany?: StatistiqueInteruniversitaireCreateManyUniversiteDestinationRelInputEnvelope
    set?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
    disconnect?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
    delete?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
    connect?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
    update?: StatistiqueInteruniversitaireUpdateWithWhereUniqueWithoutUniversiteDestinationRelInput | StatistiqueInteruniversitaireUpdateWithWhereUniqueWithoutUniversiteDestinationRelInput[]
    updateMany?: StatistiqueInteruniversitaireUpdateManyWithWhereWithoutUniversiteDestinationRelInput | StatistiqueInteruniversitaireUpdateManyWithWhereWithoutUniversiteDestinationRelInput[]
    deleteMany?: StatistiqueInteruniversitaireScalarWhereInput | StatistiqueInteruniversitaireScalarWhereInput[]
  }

  export type ReservationUpdateManyWithoutUniversiteEmprunteurRelNestedInput = {
    create?: XOR<ReservationCreateWithoutUniversiteEmprunteurRelInput, ReservationUncheckedCreateWithoutUniversiteEmprunteurRelInput> | ReservationCreateWithoutUniversiteEmprunteurRelInput[] | ReservationUncheckedCreateWithoutUniversiteEmprunteurRelInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutUniversiteEmprunteurRelInput | ReservationCreateOrConnectWithoutUniversiteEmprunteurRelInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutUniversiteEmprunteurRelInput | ReservationUpsertWithWhereUniqueWithoutUniversiteEmprunteurRelInput[]
    createMany?: ReservationCreateManyUniversiteEmprunteurRelInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutUniversiteEmprunteurRelInput | ReservationUpdateWithWhereUniqueWithoutUniversiteEmprunteurRelInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutUniversiteEmprunteurRelInput | ReservationUpdateManyWithWhereWithoutUniversiteEmprunteurRelInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type EmpruntUpdateManyWithoutUniversiteEmprunteurRelNestedInput = {
    create?: XOR<EmpruntCreateWithoutUniversiteEmprunteurRelInput, EmpruntUncheckedCreateWithoutUniversiteEmprunteurRelInput> | EmpruntCreateWithoutUniversiteEmprunteurRelInput[] | EmpruntUncheckedCreateWithoutUniversiteEmprunteurRelInput[]
    connectOrCreate?: EmpruntCreateOrConnectWithoutUniversiteEmprunteurRelInput | EmpruntCreateOrConnectWithoutUniversiteEmprunteurRelInput[]
    upsert?: EmpruntUpsertWithWhereUniqueWithoutUniversiteEmprunteurRelInput | EmpruntUpsertWithWhereUniqueWithoutUniversiteEmprunteurRelInput[]
    createMany?: EmpruntCreateManyUniversiteEmprunteurRelInputEnvelope
    set?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    disconnect?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    delete?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    connect?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    update?: EmpruntUpdateWithWhereUniqueWithoutUniversiteEmprunteurRelInput | EmpruntUpdateWithWhereUniqueWithoutUniversiteEmprunteurRelInput[]
    updateMany?: EmpruntUpdateManyWithWhereWithoutUniversiteEmprunteurRelInput | EmpruntUpdateManyWithWhereWithoutUniversiteEmprunteurRelInput[]
    deleteMany?: EmpruntScalarWhereInput | EmpruntScalarWhereInput[]
  }

  export type RecommandationUpdateManyWithoutUniversiteSourceRelNestedInput = {
    create?: XOR<RecommandationCreateWithoutUniversiteSourceRelInput, RecommandationUncheckedCreateWithoutUniversiteSourceRelInput> | RecommandationCreateWithoutUniversiteSourceRelInput[] | RecommandationUncheckedCreateWithoutUniversiteSourceRelInput[]
    connectOrCreate?: RecommandationCreateOrConnectWithoutUniversiteSourceRelInput | RecommandationCreateOrConnectWithoutUniversiteSourceRelInput[]
    upsert?: RecommandationUpsertWithWhereUniqueWithoutUniversiteSourceRelInput | RecommandationUpsertWithWhereUniqueWithoutUniversiteSourceRelInput[]
    createMany?: RecommandationCreateManyUniversiteSourceRelInputEnvelope
    set?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    disconnect?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    delete?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    connect?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    update?: RecommandationUpdateWithWhereUniqueWithoutUniversiteSourceRelInput | RecommandationUpdateWithWhereUniqueWithoutUniversiteSourceRelInput[]
    updateMany?: RecommandationUpdateManyWithWhereWithoutUniversiteSourceRelInput | RecommandationUpdateManyWithWhereWithoutUniversiteSourceRelInput[]
    deleteMany?: RecommandationScalarWhereInput | RecommandationScalarWhereInput[]
  }

  export type StatistiqueBibliothequeUpdateManyWithoutUniversiteNestedInput = {
    create?: XOR<StatistiqueBibliothequeCreateWithoutUniversiteInput, StatistiqueBibliothequeUncheckedCreateWithoutUniversiteInput> | StatistiqueBibliothequeCreateWithoutUniversiteInput[] | StatistiqueBibliothequeUncheckedCreateWithoutUniversiteInput[]
    connectOrCreate?: StatistiqueBibliothequeCreateOrConnectWithoutUniversiteInput | StatistiqueBibliothequeCreateOrConnectWithoutUniversiteInput[]
    upsert?: StatistiqueBibliothequeUpsertWithWhereUniqueWithoutUniversiteInput | StatistiqueBibliothequeUpsertWithWhereUniqueWithoutUniversiteInput[]
    createMany?: StatistiqueBibliothequeCreateManyUniversiteInputEnvelope
    set?: StatistiqueBibliothequeWhereUniqueInput | StatistiqueBibliothequeWhereUniqueInput[]
    disconnect?: StatistiqueBibliothequeWhereUniqueInput | StatistiqueBibliothequeWhereUniqueInput[]
    delete?: StatistiqueBibliothequeWhereUniqueInput | StatistiqueBibliothequeWhereUniqueInput[]
    connect?: StatistiqueBibliothequeWhereUniqueInput | StatistiqueBibliothequeWhereUniqueInput[]
    update?: StatistiqueBibliothequeUpdateWithWhereUniqueWithoutUniversiteInput | StatistiqueBibliothequeUpdateWithWhereUniqueWithoutUniversiteInput[]
    updateMany?: StatistiqueBibliothequeUpdateManyWithWhereWithoutUniversiteInput | StatistiqueBibliothequeUpdateManyWithWhereWithoutUniversiteInput[]
    deleteMany?: StatistiqueBibliothequeScalarWhereInput | StatistiqueBibliothequeScalarWhereInput[]
  }

  export type PartageUniversiteUpdateManyWithoutUniversiteSourceRelNestedInput = {
    create?: XOR<PartageUniversiteCreateWithoutUniversiteSourceRelInput, PartageUniversiteUncheckedCreateWithoutUniversiteSourceRelInput> | PartageUniversiteCreateWithoutUniversiteSourceRelInput[] | PartageUniversiteUncheckedCreateWithoutUniversiteSourceRelInput[]
    connectOrCreate?: PartageUniversiteCreateOrConnectWithoutUniversiteSourceRelInput | PartageUniversiteCreateOrConnectWithoutUniversiteSourceRelInput[]
    upsert?: PartageUniversiteUpsertWithWhereUniqueWithoutUniversiteSourceRelInput | PartageUniversiteUpsertWithWhereUniqueWithoutUniversiteSourceRelInput[]
    createMany?: PartageUniversiteCreateManyUniversiteSourceRelInputEnvelope
    set?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    disconnect?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    delete?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    connect?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    update?: PartageUniversiteUpdateWithWhereUniqueWithoutUniversiteSourceRelInput | PartageUniversiteUpdateWithWhereUniqueWithoutUniversiteSourceRelInput[]
    updateMany?: PartageUniversiteUpdateManyWithWhereWithoutUniversiteSourceRelInput | PartageUniversiteUpdateManyWithWhereWithoutUniversiteSourceRelInput[]
    deleteMany?: PartageUniversiteScalarWhereInput | PartageUniversiteScalarWhereInput[]
  }

  export type PartageUniversiteUpdateManyWithoutUniversiteDestinationRelNestedInput = {
    create?: XOR<PartageUniversiteCreateWithoutUniversiteDestinationRelInput, PartageUniversiteUncheckedCreateWithoutUniversiteDestinationRelInput> | PartageUniversiteCreateWithoutUniversiteDestinationRelInput[] | PartageUniversiteUncheckedCreateWithoutUniversiteDestinationRelInput[]
    connectOrCreate?: PartageUniversiteCreateOrConnectWithoutUniversiteDestinationRelInput | PartageUniversiteCreateOrConnectWithoutUniversiteDestinationRelInput[]
    upsert?: PartageUniversiteUpsertWithWhereUniqueWithoutUniversiteDestinationRelInput | PartageUniversiteUpsertWithWhereUniqueWithoutUniversiteDestinationRelInput[]
    createMany?: PartageUniversiteCreateManyUniversiteDestinationRelInputEnvelope
    set?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    disconnect?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    delete?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    connect?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    update?: PartageUniversiteUpdateWithWhereUniqueWithoutUniversiteDestinationRelInput | PartageUniversiteUpdateWithWhereUniqueWithoutUniversiteDestinationRelInput[]
    updateMany?: PartageUniversiteUpdateManyWithWhereWithoutUniversiteDestinationRelInput | PartageUniversiteUpdateManyWithWhereWithoutUniversiteDestinationRelInput[]
    deleteMany?: PartageUniversiteScalarWhereInput | PartageUniversiteScalarWhereInput[]
  }

  export type TransactionBlockchainUpdateManyWithoutUniversiteOrigineRelNestedInput = {
    create?: XOR<TransactionBlockchainCreateWithoutUniversiteOrigineRelInput, TransactionBlockchainUncheckedCreateWithoutUniversiteOrigineRelInput> | TransactionBlockchainCreateWithoutUniversiteOrigineRelInput[] | TransactionBlockchainUncheckedCreateWithoutUniversiteOrigineRelInput[]
    connectOrCreate?: TransactionBlockchainCreateOrConnectWithoutUniversiteOrigineRelInput | TransactionBlockchainCreateOrConnectWithoutUniversiteOrigineRelInput[]
    upsert?: TransactionBlockchainUpsertWithWhereUniqueWithoutUniversiteOrigineRelInput | TransactionBlockchainUpsertWithWhereUniqueWithoutUniversiteOrigineRelInput[]
    createMany?: TransactionBlockchainCreateManyUniversiteOrigineRelInputEnvelope
    set?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    disconnect?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    delete?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    connect?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    update?: TransactionBlockchainUpdateWithWhereUniqueWithoutUniversiteOrigineRelInput | TransactionBlockchainUpdateWithWhereUniqueWithoutUniversiteOrigineRelInput[]
    updateMany?: TransactionBlockchainUpdateManyWithWhereWithoutUniversiteOrigineRelInput | TransactionBlockchainUpdateManyWithWhereWithoutUniversiteOrigineRelInput[]
    deleteMany?: TransactionBlockchainScalarWhereInput | TransactionBlockchainScalarWhereInput[]
  }

  export type TransactionBlockchainUpdateManyWithoutUniversiteDestinationRelNestedInput = {
    create?: XOR<TransactionBlockchainCreateWithoutUniversiteDestinationRelInput, TransactionBlockchainUncheckedCreateWithoutUniversiteDestinationRelInput> | TransactionBlockchainCreateWithoutUniversiteDestinationRelInput[] | TransactionBlockchainUncheckedCreateWithoutUniversiteDestinationRelInput[]
    connectOrCreate?: TransactionBlockchainCreateOrConnectWithoutUniversiteDestinationRelInput | TransactionBlockchainCreateOrConnectWithoutUniversiteDestinationRelInput[]
    upsert?: TransactionBlockchainUpsertWithWhereUniqueWithoutUniversiteDestinationRelInput | TransactionBlockchainUpsertWithWhereUniqueWithoutUniversiteDestinationRelInput[]
    createMany?: TransactionBlockchainCreateManyUniversiteDestinationRelInputEnvelope
    set?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    disconnect?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    delete?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    connect?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    update?: TransactionBlockchainUpdateWithWhereUniqueWithoutUniversiteDestinationRelInput | TransactionBlockchainUpdateWithWhereUniqueWithoutUniversiteDestinationRelInput[]
    updateMany?: TransactionBlockchainUpdateManyWithWhereWithoutUniversiteDestinationRelInput | TransactionBlockchainUpdateManyWithWhereWithoutUniversiteDestinationRelInput[]
    deleteMany?: TransactionBlockchainScalarWhereInput | TransactionBlockchainScalarWhereInput[]
  }

  export type HistoriqueAccesUpdateManyWithoutUniversiteSrcRelNestedInput = {
    create?: XOR<HistoriqueAccesCreateWithoutUniversiteSrcRelInput, HistoriqueAccesUncheckedCreateWithoutUniversiteSrcRelInput> | HistoriqueAccesCreateWithoutUniversiteSrcRelInput[] | HistoriqueAccesUncheckedCreateWithoutUniversiteSrcRelInput[]
    connectOrCreate?: HistoriqueAccesCreateOrConnectWithoutUniversiteSrcRelInput | HistoriqueAccesCreateOrConnectWithoutUniversiteSrcRelInput[]
    upsert?: HistoriqueAccesUpsertWithWhereUniqueWithoutUniversiteSrcRelInput | HistoriqueAccesUpsertWithWhereUniqueWithoutUniversiteSrcRelInput[]
    createMany?: HistoriqueAccesCreateManyUniversiteSrcRelInputEnvelope
    set?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    disconnect?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    delete?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    connect?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    update?: HistoriqueAccesUpdateWithWhereUniqueWithoutUniversiteSrcRelInput | HistoriqueAccesUpdateWithWhereUniqueWithoutUniversiteSrcRelInput[]
    updateMany?: HistoriqueAccesUpdateManyWithWhereWithoutUniversiteSrcRelInput | HistoriqueAccesUpdateManyWithWhereWithoutUniversiteSrcRelInput[]
    deleteMany?: HistoriqueAccesScalarWhereInput | HistoriqueAccesScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutUniversiteNestedInput = {
    create?: XOR<UserCreateWithoutUniversiteInput, UserUncheckedCreateWithoutUniversiteInput> | UserCreateWithoutUniversiteInput[] | UserUncheckedCreateWithoutUniversiteInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUniversiteInput | UserCreateOrConnectWithoutUniversiteInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutUniversiteInput | UserUpsertWithWhereUniqueWithoutUniversiteInput[]
    createMany?: UserCreateManyUniversiteInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutUniversiteInput | UserUpdateWithWhereUniqueWithoutUniversiteInput[]
    updateMany?: UserUpdateManyWithWhereWithoutUniversiteInput | UserUpdateManyWithWhereWithoutUniversiteInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type RessourceUncheckedUpdateManyWithoutUniversiteNestedInput = {
    create?: XOR<RessourceCreateWithoutUniversiteInput, RessourceUncheckedCreateWithoutUniversiteInput> | RessourceCreateWithoutUniversiteInput[] | RessourceUncheckedCreateWithoutUniversiteInput[]
    connectOrCreate?: RessourceCreateOrConnectWithoutUniversiteInput | RessourceCreateOrConnectWithoutUniversiteInput[]
    upsert?: RessourceUpsertWithWhereUniqueWithoutUniversiteInput | RessourceUpsertWithWhereUniqueWithoutUniversiteInput[]
    createMany?: RessourceCreateManyUniversiteInputEnvelope
    set?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
    disconnect?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
    delete?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
    connect?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
    update?: RessourceUpdateWithWhereUniqueWithoutUniversiteInput | RessourceUpdateWithWhereUniqueWithoutUniversiteInput[]
    updateMany?: RessourceUpdateManyWithWhereWithoutUniversiteInput | RessourceUpdateManyWithWhereWithoutUniversiteInput[]
    deleteMany?: RessourceScalarWhereInput | RessourceScalarWhereInput[]
  }

  export type ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite1NestedInput = {
    create?: XOR<ConventionInteruniversitaireCreateWithoutUniversite1Input, ConventionInteruniversitaireUncheckedCreateWithoutUniversite1Input> | ConventionInteruniversitaireCreateWithoutUniversite1Input[] | ConventionInteruniversitaireUncheckedCreateWithoutUniversite1Input[]
    connectOrCreate?: ConventionInteruniversitaireCreateOrConnectWithoutUniversite1Input | ConventionInteruniversitaireCreateOrConnectWithoutUniversite1Input[]
    upsert?: ConventionInteruniversitaireUpsertWithWhereUniqueWithoutUniversite1Input | ConventionInteruniversitaireUpsertWithWhereUniqueWithoutUniversite1Input[]
    createMany?: ConventionInteruniversitaireCreateManyUniversite1InputEnvelope
    set?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
    disconnect?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
    delete?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
    connect?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
    update?: ConventionInteruniversitaireUpdateWithWhereUniqueWithoutUniversite1Input | ConventionInteruniversitaireUpdateWithWhereUniqueWithoutUniversite1Input[]
    updateMany?: ConventionInteruniversitaireUpdateManyWithWhereWithoutUniversite1Input | ConventionInteruniversitaireUpdateManyWithWhereWithoutUniversite1Input[]
    deleteMany?: ConventionInteruniversitaireScalarWhereInput | ConventionInteruniversitaireScalarWhereInput[]
  }

  export type ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite2NestedInput = {
    create?: XOR<ConventionInteruniversitaireCreateWithoutUniversite2Input, ConventionInteruniversitaireUncheckedCreateWithoutUniversite2Input> | ConventionInteruniversitaireCreateWithoutUniversite2Input[] | ConventionInteruniversitaireUncheckedCreateWithoutUniversite2Input[]
    connectOrCreate?: ConventionInteruniversitaireCreateOrConnectWithoutUniversite2Input | ConventionInteruniversitaireCreateOrConnectWithoutUniversite2Input[]
    upsert?: ConventionInteruniversitaireUpsertWithWhereUniqueWithoutUniversite2Input | ConventionInteruniversitaireUpsertWithWhereUniqueWithoutUniversite2Input[]
    createMany?: ConventionInteruniversitaireCreateManyUniversite2InputEnvelope
    set?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
    disconnect?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
    delete?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
    connect?: ConventionInteruniversitaireWhereUniqueInput | ConventionInteruniversitaireWhereUniqueInput[]
    update?: ConventionInteruniversitaireUpdateWithWhereUniqueWithoutUniversite2Input | ConventionInteruniversitaireUpdateWithWhereUniqueWithoutUniversite2Input[]
    updateMany?: ConventionInteruniversitaireUpdateManyWithWhereWithoutUniversite2Input | ConventionInteruniversitaireUpdateManyWithWhereWithoutUniversite2Input[]
    deleteMany?: ConventionInteruniversitaireScalarWhereInput | ConventionInteruniversitaireScalarWhereInput[]
  }

  export type StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput = {
    create?: XOR<StatistiqueInteruniversitaireCreateWithoutUniversiteSourceRelInput, StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteSourceRelInput> | StatistiqueInteruniversitaireCreateWithoutUniversiteSourceRelInput[] | StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteSourceRelInput[]
    connectOrCreate?: StatistiqueInteruniversitaireCreateOrConnectWithoutUniversiteSourceRelInput | StatistiqueInteruniversitaireCreateOrConnectWithoutUniversiteSourceRelInput[]
    upsert?: StatistiqueInteruniversitaireUpsertWithWhereUniqueWithoutUniversiteSourceRelInput | StatistiqueInteruniversitaireUpsertWithWhereUniqueWithoutUniversiteSourceRelInput[]
    createMany?: StatistiqueInteruniversitaireCreateManyUniversiteSourceRelInputEnvelope
    set?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
    disconnect?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
    delete?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
    connect?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
    update?: StatistiqueInteruniversitaireUpdateWithWhereUniqueWithoutUniversiteSourceRelInput | StatistiqueInteruniversitaireUpdateWithWhereUniqueWithoutUniversiteSourceRelInput[]
    updateMany?: StatistiqueInteruniversitaireUpdateManyWithWhereWithoutUniversiteSourceRelInput | StatistiqueInteruniversitaireUpdateManyWithWhereWithoutUniversiteSourceRelInput[]
    deleteMany?: StatistiqueInteruniversitaireScalarWhereInput | StatistiqueInteruniversitaireScalarWhereInput[]
  }

  export type StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput = {
    create?: XOR<StatistiqueInteruniversitaireCreateWithoutUniversiteDestinationRelInput, StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteDestinationRelInput> | StatistiqueInteruniversitaireCreateWithoutUniversiteDestinationRelInput[] | StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteDestinationRelInput[]
    connectOrCreate?: StatistiqueInteruniversitaireCreateOrConnectWithoutUniversiteDestinationRelInput | StatistiqueInteruniversitaireCreateOrConnectWithoutUniversiteDestinationRelInput[]
    upsert?: StatistiqueInteruniversitaireUpsertWithWhereUniqueWithoutUniversiteDestinationRelInput | StatistiqueInteruniversitaireUpsertWithWhereUniqueWithoutUniversiteDestinationRelInput[]
    createMany?: StatistiqueInteruniversitaireCreateManyUniversiteDestinationRelInputEnvelope
    set?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
    disconnect?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
    delete?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
    connect?: StatistiqueInteruniversitaireWhereUniqueInput | StatistiqueInteruniversitaireWhereUniqueInput[]
    update?: StatistiqueInteruniversitaireUpdateWithWhereUniqueWithoutUniversiteDestinationRelInput | StatistiqueInteruniversitaireUpdateWithWhereUniqueWithoutUniversiteDestinationRelInput[]
    updateMany?: StatistiqueInteruniversitaireUpdateManyWithWhereWithoutUniversiteDestinationRelInput | StatistiqueInteruniversitaireUpdateManyWithWhereWithoutUniversiteDestinationRelInput[]
    deleteMany?: StatistiqueInteruniversitaireScalarWhereInput | StatistiqueInteruniversitaireScalarWhereInput[]
  }

  export type ReservationUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput = {
    create?: XOR<ReservationCreateWithoutUniversiteEmprunteurRelInput, ReservationUncheckedCreateWithoutUniversiteEmprunteurRelInput> | ReservationCreateWithoutUniversiteEmprunteurRelInput[] | ReservationUncheckedCreateWithoutUniversiteEmprunteurRelInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutUniversiteEmprunteurRelInput | ReservationCreateOrConnectWithoutUniversiteEmprunteurRelInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutUniversiteEmprunteurRelInput | ReservationUpsertWithWhereUniqueWithoutUniversiteEmprunteurRelInput[]
    createMany?: ReservationCreateManyUniversiteEmprunteurRelInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutUniversiteEmprunteurRelInput | ReservationUpdateWithWhereUniqueWithoutUniversiteEmprunteurRelInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutUniversiteEmprunteurRelInput | ReservationUpdateManyWithWhereWithoutUniversiteEmprunteurRelInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type EmpruntUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput = {
    create?: XOR<EmpruntCreateWithoutUniversiteEmprunteurRelInput, EmpruntUncheckedCreateWithoutUniversiteEmprunteurRelInput> | EmpruntCreateWithoutUniversiteEmprunteurRelInput[] | EmpruntUncheckedCreateWithoutUniversiteEmprunteurRelInput[]
    connectOrCreate?: EmpruntCreateOrConnectWithoutUniversiteEmprunteurRelInput | EmpruntCreateOrConnectWithoutUniversiteEmprunteurRelInput[]
    upsert?: EmpruntUpsertWithWhereUniqueWithoutUniversiteEmprunteurRelInput | EmpruntUpsertWithWhereUniqueWithoutUniversiteEmprunteurRelInput[]
    createMany?: EmpruntCreateManyUniversiteEmprunteurRelInputEnvelope
    set?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    disconnect?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    delete?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    connect?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    update?: EmpruntUpdateWithWhereUniqueWithoutUniversiteEmprunteurRelInput | EmpruntUpdateWithWhereUniqueWithoutUniversiteEmprunteurRelInput[]
    updateMany?: EmpruntUpdateManyWithWhereWithoutUniversiteEmprunteurRelInput | EmpruntUpdateManyWithWhereWithoutUniversiteEmprunteurRelInput[]
    deleteMany?: EmpruntScalarWhereInput | EmpruntScalarWhereInput[]
  }

  export type RecommandationUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput = {
    create?: XOR<RecommandationCreateWithoutUniversiteSourceRelInput, RecommandationUncheckedCreateWithoutUniversiteSourceRelInput> | RecommandationCreateWithoutUniversiteSourceRelInput[] | RecommandationUncheckedCreateWithoutUniversiteSourceRelInput[]
    connectOrCreate?: RecommandationCreateOrConnectWithoutUniversiteSourceRelInput | RecommandationCreateOrConnectWithoutUniversiteSourceRelInput[]
    upsert?: RecommandationUpsertWithWhereUniqueWithoutUniversiteSourceRelInput | RecommandationUpsertWithWhereUniqueWithoutUniversiteSourceRelInput[]
    createMany?: RecommandationCreateManyUniversiteSourceRelInputEnvelope
    set?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    disconnect?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    delete?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    connect?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    update?: RecommandationUpdateWithWhereUniqueWithoutUniversiteSourceRelInput | RecommandationUpdateWithWhereUniqueWithoutUniversiteSourceRelInput[]
    updateMany?: RecommandationUpdateManyWithWhereWithoutUniversiteSourceRelInput | RecommandationUpdateManyWithWhereWithoutUniversiteSourceRelInput[]
    deleteMany?: RecommandationScalarWhereInput | RecommandationScalarWhereInput[]
  }

  export type StatistiqueBibliothequeUncheckedUpdateManyWithoutUniversiteNestedInput = {
    create?: XOR<StatistiqueBibliothequeCreateWithoutUniversiteInput, StatistiqueBibliothequeUncheckedCreateWithoutUniversiteInput> | StatistiqueBibliothequeCreateWithoutUniversiteInput[] | StatistiqueBibliothequeUncheckedCreateWithoutUniversiteInput[]
    connectOrCreate?: StatistiqueBibliothequeCreateOrConnectWithoutUniversiteInput | StatistiqueBibliothequeCreateOrConnectWithoutUniversiteInput[]
    upsert?: StatistiqueBibliothequeUpsertWithWhereUniqueWithoutUniversiteInput | StatistiqueBibliothequeUpsertWithWhereUniqueWithoutUniversiteInput[]
    createMany?: StatistiqueBibliothequeCreateManyUniversiteInputEnvelope
    set?: StatistiqueBibliothequeWhereUniqueInput | StatistiqueBibliothequeWhereUniqueInput[]
    disconnect?: StatistiqueBibliothequeWhereUniqueInput | StatistiqueBibliothequeWhereUniqueInput[]
    delete?: StatistiqueBibliothequeWhereUniqueInput | StatistiqueBibliothequeWhereUniqueInput[]
    connect?: StatistiqueBibliothequeWhereUniqueInput | StatistiqueBibliothequeWhereUniqueInput[]
    update?: StatistiqueBibliothequeUpdateWithWhereUniqueWithoutUniversiteInput | StatistiqueBibliothequeUpdateWithWhereUniqueWithoutUniversiteInput[]
    updateMany?: StatistiqueBibliothequeUpdateManyWithWhereWithoutUniversiteInput | StatistiqueBibliothequeUpdateManyWithWhereWithoutUniversiteInput[]
    deleteMany?: StatistiqueBibliothequeScalarWhereInput | StatistiqueBibliothequeScalarWhereInput[]
  }

  export type PartageUniversiteUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput = {
    create?: XOR<PartageUniversiteCreateWithoutUniversiteSourceRelInput, PartageUniversiteUncheckedCreateWithoutUniversiteSourceRelInput> | PartageUniversiteCreateWithoutUniversiteSourceRelInput[] | PartageUniversiteUncheckedCreateWithoutUniversiteSourceRelInput[]
    connectOrCreate?: PartageUniversiteCreateOrConnectWithoutUniversiteSourceRelInput | PartageUniversiteCreateOrConnectWithoutUniversiteSourceRelInput[]
    upsert?: PartageUniversiteUpsertWithWhereUniqueWithoutUniversiteSourceRelInput | PartageUniversiteUpsertWithWhereUniqueWithoutUniversiteSourceRelInput[]
    createMany?: PartageUniversiteCreateManyUniversiteSourceRelInputEnvelope
    set?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    disconnect?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    delete?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    connect?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    update?: PartageUniversiteUpdateWithWhereUniqueWithoutUniversiteSourceRelInput | PartageUniversiteUpdateWithWhereUniqueWithoutUniversiteSourceRelInput[]
    updateMany?: PartageUniversiteUpdateManyWithWhereWithoutUniversiteSourceRelInput | PartageUniversiteUpdateManyWithWhereWithoutUniversiteSourceRelInput[]
    deleteMany?: PartageUniversiteScalarWhereInput | PartageUniversiteScalarWhereInput[]
  }

  export type PartageUniversiteUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput = {
    create?: XOR<PartageUniversiteCreateWithoutUniversiteDestinationRelInput, PartageUniversiteUncheckedCreateWithoutUniversiteDestinationRelInput> | PartageUniversiteCreateWithoutUniversiteDestinationRelInput[] | PartageUniversiteUncheckedCreateWithoutUniversiteDestinationRelInput[]
    connectOrCreate?: PartageUniversiteCreateOrConnectWithoutUniversiteDestinationRelInput | PartageUniversiteCreateOrConnectWithoutUniversiteDestinationRelInput[]
    upsert?: PartageUniversiteUpsertWithWhereUniqueWithoutUniversiteDestinationRelInput | PartageUniversiteUpsertWithWhereUniqueWithoutUniversiteDestinationRelInput[]
    createMany?: PartageUniversiteCreateManyUniversiteDestinationRelInputEnvelope
    set?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    disconnect?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    delete?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    connect?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    update?: PartageUniversiteUpdateWithWhereUniqueWithoutUniversiteDestinationRelInput | PartageUniversiteUpdateWithWhereUniqueWithoutUniversiteDestinationRelInput[]
    updateMany?: PartageUniversiteUpdateManyWithWhereWithoutUniversiteDestinationRelInput | PartageUniversiteUpdateManyWithWhereWithoutUniversiteDestinationRelInput[]
    deleteMany?: PartageUniversiteScalarWhereInput | PartageUniversiteScalarWhereInput[]
  }

  export type TransactionBlockchainUncheckedUpdateManyWithoutUniversiteOrigineRelNestedInput = {
    create?: XOR<TransactionBlockchainCreateWithoutUniversiteOrigineRelInput, TransactionBlockchainUncheckedCreateWithoutUniversiteOrigineRelInput> | TransactionBlockchainCreateWithoutUniversiteOrigineRelInput[] | TransactionBlockchainUncheckedCreateWithoutUniversiteOrigineRelInput[]
    connectOrCreate?: TransactionBlockchainCreateOrConnectWithoutUniversiteOrigineRelInput | TransactionBlockchainCreateOrConnectWithoutUniversiteOrigineRelInput[]
    upsert?: TransactionBlockchainUpsertWithWhereUniqueWithoutUniversiteOrigineRelInput | TransactionBlockchainUpsertWithWhereUniqueWithoutUniversiteOrigineRelInput[]
    createMany?: TransactionBlockchainCreateManyUniversiteOrigineRelInputEnvelope
    set?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    disconnect?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    delete?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    connect?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    update?: TransactionBlockchainUpdateWithWhereUniqueWithoutUniversiteOrigineRelInput | TransactionBlockchainUpdateWithWhereUniqueWithoutUniversiteOrigineRelInput[]
    updateMany?: TransactionBlockchainUpdateManyWithWhereWithoutUniversiteOrigineRelInput | TransactionBlockchainUpdateManyWithWhereWithoutUniversiteOrigineRelInput[]
    deleteMany?: TransactionBlockchainScalarWhereInput | TransactionBlockchainScalarWhereInput[]
  }

  export type TransactionBlockchainUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput = {
    create?: XOR<TransactionBlockchainCreateWithoutUniversiteDestinationRelInput, TransactionBlockchainUncheckedCreateWithoutUniversiteDestinationRelInput> | TransactionBlockchainCreateWithoutUniversiteDestinationRelInput[] | TransactionBlockchainUncheckedCreateWithoutUniversiteDestinationRelInput[]
    connectOrCreate?: TransactionBlockchainCreateOrConnectWithoutUniversiteDestinationRelInput | TransactionBlockchainCreateOrConnectWithoutUniversiteDestinationRelInput[]
    upsert?: TransactionBlockchainUpsertWithWhereUniqueWithoutUniversiteDestinationRelInput | TransactionBlockchainUpsertWithWhereUniqueWithoutUniversiteDestinationRelInput[]
    createMany?: TransactionBlockchainCreateManyUniversiteDestinationRelInputEnvelope
    set?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    disconnect?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    delete?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    connect?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    update?: TransactionBlockchainUpdateWithWhereUniqueWithoutUniversiteDestinationRelInput | TransactionBlockchainUpdateWithWhereUniqueWithoutUniversiteDestinationRelInput[]
    updateMany?: TransactionBlockchainUpdateManyWithWhereWithoutUniversiteDestinationRelInput | TransactionBlockchainUpdateManyWithWhereWithoutUniversiteDestinationRelInput[]
    deleteMany?: TransactionBlockchainScalarWhereInput | TransactionBlockchainScalarWhereInput[]
  }

  export type HistoriqueAccesUncheckedUpdateManyWithoutUniversiteSrcRelNestedInput = {
    create?: XOR<HistoriqueAccesCreateWithoutUniversiteSrcRelInput, HistoriqueAccesUncheckedCreateWithoutUniversiteSrcRelInput> | HistoriqueAccesCreateWithoutUniversiteSrcRelInput[] | HistoriqueAccesUncheckedCreateWithoutUniversiteSrcRelInput[]
    connectOrCreate?: HistoriqueAccesCreateOrConnectWithoutUniversiteSrcRelInput | HistoriqueAccesCreateOrConnectWithoutUniversiteSrcRelInput[]
    upsert?: HistoriqueAccesUpsertWithWhereUniqueWithoutUniversiteSrcRelInput | HistoriqueAccesUpsertWithWhereUniqueWithoutUniversiteSrcRelInput[]
    createMany?: HistoriqueAccesCreateManyUniversiteSrcRelInputEnvelope
    set?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    disconnect?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    delete?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    connect?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    update?: HistoriqueAccesUpdateWithWhereUniqueWithoutUniversiteSrcRelInput | HistoriqueAccesUpdateWithWhereUniqueWithoutUniversiteSrcRelInput[]
    updateMany?: HistoriqueAccesUpdateManyWithWhereWithoutUniversiteSrcRelInput | HistoriqueAccesUpdateManyWithWhereWithoutUniversiteSrcRelInput[]
    deleteMany?: HistoriqueAccesScalarWhereInput | HistoriqueAccesScalarWhereInput[]
  }

  export type UniversiteCreateNestedOneWithoutUsersInput = {
    create?: XOR<UniversiteCreateWithoutUsersInput, UniversiteUncheckedCreateWithoutUsersInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutUsersInput
    connect?: UniversiteWhereUniqueInput
  }

  export type RessourceCreateNestedManyWithoutAuteurInput = {
    create?: XOR<RessourceCreateWithoutAuteurInput, RessourceUncheckedCreateWithoutAuteurInput> | RessourceCreateWithoutAuteurInput[] | RessourceUncheckedCreateWithoutAuteurInput[]
    connectOrCreate?: RessourceCreateOrConnectWithoutAuteurInput | RessourceCreateOrConnectWithoutAuteurInput[]
    createMany?: RessourceCreateManyAuteurInputEnvelope
    connect?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
  }

  export type FavoriCreateNestedManyWithoutUserInput = {
    create?: XOR<FavoriCreateWithoutUserInput, FavoriUncheckedCreateWithoutUserInput> | FavoriCreateWithoutUserInput[] | FavoriUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriCreateOrConnectWithoutUserInput | FavoriCreateOrConnectWithoutUserInput[]
    createMany?: FavoriCreateManyUserInputEnvelope
    connect?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
  }

  export type CommentaireCreateNestedManyWithoutUserInput = {
    create?: XOR<CommentaireCreateWithoutUserInput, CommentaireUncheckedCreateWithoutUserInput> | CommentaireCreateWithoutUserInput[] | CommentaireUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommentaireCreateOrConnectWithoutUserInput | CommentaireCreateOrConnectWithoutUserInput[]
    createMany?: CommentaireCreateManyUserInputEnvelope
    connect?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
  }

  export type NotationCreateNestedManyWithoutUserInput = {
    create?: XOR<NotationCreateWithoutUserInput, NotationUncheckedCreateWithoutUserInput> | NotationCreateWithoutUserInput[] | NotationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotationCreateOrConnectWithoutUserInput | NotationCreateOrConnectWithoutUserInput[]
    createMany?: NotationCreateManyUserInputEnvelope
    connect?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
  }

  export type HistoriqueAccesCreateNestedManyWithoutUserInput = {
    create?: XOR<HistoriqueAccesCreateWithoutUserInput, HistoriqueAccesUncheckedCreateWithoutUserInput> | HistoriqueAccesCreateWithoutUserInput[] | HistoriqueAccesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: HistoriqueAccesCreateOrConnectWithoutUserInput | HistoriqueAccesCreateOrConnectWithoutUserInput[]
    createMany?: HistoriqueAccesCreateManyUserInputEnvelope
    connect?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
  }

  export type CollectionCreateNestedManyWithoutUserInput = {
    create?: XOR<CollectionCreateWithoutUserInput, CollectionUncheckedCreateWithoutUserInput> | CollectionCreateWithoutUserInput[] | CollectionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutUserInput | CollectionCreateOrConnectWithoutUserInput[]
    createMany?: CollectionCreateManyUserInputEnvelope
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
  }

  export type ReservationCreateNestedManyWithoutUserInput = {
    create?: XOR<ReservationCreateWithoutUserInput, ReservationUncheckedCreateWithoutUserInput> | ReservationCreateWithoutUserInput[] | ReservationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutUserInput | ReservationCreateOrConnectWithoutUserInput[]
    createMany?: ReservationCreateManyUserInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type EmpruntCreateNestedManyWithoutUserInput = {
    create?: XOR<EmpruntCreateWithoutUserInput, EmpruntUncheckedCreateWithoutUserInput> | EmpruntCreateWithoutUserInput[] | EmpruntUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EmpruntCreateOrConnectWithoutUserInput | EmpruntCreateOrConnectWithoutUserInput[]
    createMany?: EmpruntCreateManyUserInputEnvelope
    connect?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
  }

  export type RecommandationCreateNestedManyWithoutUserInput = {
    create?: XOR<RecommandationCreateWithoutUserInput, RecommandationUncheckedCreateWithoutUserInput> | RecommandationCreateWithoutUserInput[] | RecommandationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RecommandationCreateOrConnectWithoutUserInput | RecommandationCreateOrConnectWithoutUserInput[]
    createMany?: RecommandationCreateManyUserInputEnvelope
    connect?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
  }

  export type JournalAuditCreateNestedManyWithoutUserInput = {
    create?: XOR<JournalAuditCreateWithoutUserInput, JournalAuditUncheckedCreateWithoutUserInput> | JournalAuditCreateWithoutUserInput[] | JournalAuditUncheckedCreateWithoutUserInput[]
    connectOrCreate?: JournalAuditCreateOrConnectWithoutUserInput | JournalAuditCreateOrConnectWithoutUserInput[]
    createMany?: JournalAuditCreateManyUserInputEnvelope
    connect?: JournalAuditWhereUniqueInput | JournalAuditWhereUniqueInput[]
  }

  export type DonneesRecommandationCreateNestedManyWithoutUserInput = {
    create?: XOR<DonneesRecommandationCreateWithoutUserInput, DonneesRecommandationUncheckedCreateWithoutUserInput> | DonneesRecommandationCreateWithoutUserInput[] | DonneesRecommandationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DonneesRecommandationCreateOrConnectWithoutUserInput | DonneesRecommandationCreateOrConnectWithoutUserInput[]
    createMany?: DonneesRecommandationCreateManyUserInputEnvelope
    connect?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type RessourceUncheckedCreateNestedManyWithoutAuteurInput = {
    create?: XOR<RessourceCreateWithoutAuteurInput, RessourceUncheckedCreateWithoutAuteurInput> | RessourceCreateWithoutAuteurInput[] | RessourceUncheckedCreateWithoutAuteurInput[]
    connectOrCreate?: RessourceCreateOrConnectWithoutAuteurInput | RessourceCreateOrConnectWithoutAuteurInput[]
    createMany?: RessourceCreateManyAuteurInputEnvelope
    connect?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
  }

  export type FavoriUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<FavoriCreateWithoutUserInput, FavoriUncheckedCreateWithoutUserInput> | FavoriCreateWithoutUserInput[] | FavoriUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriCreateOrConnectWithoutUserInput | FavoriCreateOrConnectWithoutUserInput[]
    createMany?: FavoriCreateManyUserInputEnvelope
    connect?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
  }

  export type CommentaireUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CommentaireCreateWithoutUserInput, CommentaireUncheckedCreateWithoutUserInput> | CommentaireCreateWithoutUserInput[] | CommentaireUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommentaireCreateOrConnectWithoutUserInput | CommentaireCreateOrConnectWithoutUserInput[]
    createMany?: CommentaireCreateManyUserInputEnvelope
    connect?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
  }

  export type NotationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<NotationCreateWithoutUserInput, NotationUncheckedCreateWithoutUserInput> | NotationCreateWithoutUserInput[] | NotationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotationCreateOrConnectWithoutUserInput | NotationCreateOrConnectWithoutUserInput[]
    createMany?: NotationCreateManyUserInputEnvelope
    connect?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
  }

  export type HistoriqueAccesUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<HistoriqueAccesCreateWithoutUserInput, HistoriqueAccesUncheckedCreateWithoutUserInput> | HistoriqueAccesCreateWithoutUserInput[] | HistoriqueAccesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: HistoriqueAccesCreateOrConnectWithoutUserInput | HistoriqueAccesCreateOrConnectWithoutUserInput[]
    createMany?: HistoriqueAccesCreateManyUserInputEnvelope
    connect?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
  }

  export type CollectionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CollectionCreateWithoutUserInput, CollectionUncheckedCreateWithoutUserInput> | CollectionCreateWithoutUserInput[] | CollectionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutUserInput | CollectionCreateOrConnectWithoutUserInput[]
    createMany?: CollectionCreateManyUserInputEnvelope
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
  }

  export type ReservationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ReservationCreateWithoutUserInput, ReservationUncheckedCreateWithoutUserInput> | ReservationCreateWithoutUserInput[] | ReservationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutUserInput | ReservationCreateOrConnectWithoutUserInput[]
    createMany?: ReservationCreateManyUserInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type EmpruntUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<EmpruntCreateWithoutUserInput, EmpruntUncheckedCreateWithoutUserInput> | EmpruntCreateWithoutUserInput[] | EmpruntUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EmpruntCreateOrConnectWithoutUserInput | EmpruntCreateOrConnectWithoutUserInput[]
    createMany?: EmpruntCreateManyUserInputEnvelope
    connect?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
  }

  export type RecommandationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<RecommandationCreateWithoutUserInput, RecommandationUncheckedCreateWithoutUserInput> | RecommandationCreateWithoutUserInput[] | RecommandationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RecommandationCreateOrConnectWithoutUserInput | RecommandationCreateOrConnectWithoutUserInput[]
    createMany?: RecommandationCreateManyUserInputEnvelope
    connect?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
  }

  export type JournalAuditUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<JournalAuditCreateWithoutUserInput, JournalAuditUncheckedCreateWithoutUserInput> | JournalAuditCreateWithoutUserInput[] | JournalAuditUncheckedCreateWithoutUserInput[]
    connectOrCreate?: JournalAuditCreateOrConnectWithoutUserInput | JournalAuditCreateOrConnectWithoutUserInput[]
    createMany?: JournalAuditCreateManyUserInputEnvelope
    connect?: JournalAuditWhereUniqueInput | JournalAuditWhereUniqueInput[]
  }

  export type DonneesRecommandationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<DonneesRecommandationCreateWithoutUserInput, DonneesRecommandationUncheckedCreateWithoutUserInput> | DonneesRecommandationCreateWithoutUserInput[] | DonneesRecommandationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DonneesRecommandationCreateOrConnectWithoutUserInput | DonneesRecommandationCreateOrConnectWithoutUserInput[]
    createMany?: DonneesRecommandationCreateManyUserInputEnvelope
    connect?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type EnumRoleUserFieldUpdateOperationsInput = {
    set?: $Enums.RoleUser
  }

  export type EnumFrequenceRecommandationFieldUpdateOperationsInput = {
    set?: $Enums.FrequenceRecommandation
  }

  export type UniversiteUpdateOneRequiredWithoutUsersNestedInput = {
    create?: XOR<UniversiteCreateWithoutUsersInput, UniversiteUncheckedCreateWithoutUsersInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutUsersInput
    upsert?: UniversiteUpsertWithoutUsersInput
    connect?: UniversiteWhereUniqueInput
    update?: XOR<XOR<UniversiteUpdateToOneWithWhereWithoutUsersInput, UniversiteUpdateWithoutUsersInput>, UniversiteUncheckedUpdateWithoutUsersInput>
  }

  export type RessourceUpdateManyWithoutAuteurNestedInput = {
    create?: XOR<RessourceCreateWithoutAuteurInput, RessourceUncheckedCreateWithoutAuteurInput> | RessourceCreateWithoutAuteurInput[] | RessourceUncheckedCreateWithoutAuteurInput[]
    connectOrCreate?: RessourceCreateOrConnectWithoutAuteurInput | RessourceCreateOrConnectWithoutAuteurInput[]
    upsert?: RessourceUpsertWithWhereUniqueWithoutAuteurInput | RessourceUpsertWithWhereUniqueWithoutAuteurInput[]
    createMany?: RessourceCreateManyAuteurInputEnvelope
    set?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
    disconnect?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
    delete?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
    connect?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
    update?: RessourceUpdateWithWhereUniqueWithoutAuteurInput | RessourceUpdateWithWhereUniqueWithoutAuteurInput[]
    updateMany?: RessourceUpdateManyWithWhereWithoutAuteurInput | RessourceUpdateManyWithWhereWithoutAuteurInput[]
    deleteMany?: RessourceScalarWhereInput | RessourceScalarWhereInput[]
  }

  export type FavoriUpdateManyWithoutUserNestedInput = {
    create?: XOR<FavoriCreateWithoutUserInput, FavoriUncheckedCreateWithoutUserInput> | FavoriCreateWithoutUserInput[] | FavoriUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriCreateOrConnectWithoutUserInput | FavoriCreateOrConnectWithoutUserInput[]
    upsert?: FavoriUpsertWithWhereUniqueWithoutUserInput | FavoriUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FavoriCreateManyUserInputEnvelope
    set?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
    disconnect?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
    delete?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
    connect?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
    update?: FavoriUpdateWithWhereUniqueWithoutUserInput | FavoriUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FavoriUpdateManyWithWhereWithoutUserInput | FavoriUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FavoriScalarWhereInput | FavoriScalarWhereInput[]
  }

  export type CommentaireUpdateManyWithoutUserNestedInput = {
    create?: XOR<CommentaireCreateWithoutUserInput, CommentaireUncheckedCreateWithoutUserInput> | CommentaireCreateWithoutUserInput[] | CommentaireUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommentaireCreateOrConnectWithoutUserInput | CommentaireCreateOrConnectWithoutUserInput[]
    upsert?: CommentaireUpsertWithWhereUniqueWithoutUserInput | CommentaireUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CommentaireCreateManyUserInputEnvelope
    set?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
    disconnect?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
    delete?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
    connect?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
    update?: CommentaireUpdateWithWhereUniqueWithoutUserInput | CommentaireUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CommentaireUpdateManyWithWhereWithoutUserInput | CommentaireUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CommentaireScalarWhereInput | CommentaireScalarWhereInput[]
  }

  export type NotationUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotationCreateWithoutUserInput, NotationUncheckedCreateWithoutUserInput> | NotationCreateWithoutUserInput[] | NotationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotationCreateOrConnectWithoutUserInput | NotationCreateOrConnectWithoutUserInput[]
    upsert?: NotationUpsertWithWhereUniqueWithoutUserInput | NotationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotationCreateManyUserInputEnvelope
    set?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
    disconnect?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
    delete?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
    connect?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
    update?: NotationUpdateWithWhereUniqueWithoutUserInput | NotationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotationUpdateManyWithWhereWithoutUserInput | NotationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotationScalarWhereInput | NotationScalarWhereInput[]
  }

  export type HistoriqueAccesUpdateManyWithoutUserNestedInput = {
    create?: XOR<HistoriqueAccesCreateWithoutUserInput, HistoriqueAccesUncheckedCreateWithoutUserInput> | HistoriqueAccesCreateWithoutUserInput[] | HistoriqueAccesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: HistoriqueAccesCreateOrConnectWithoutUserInput | HistoriqueAccesCreateOrConnectWithoutUserInput[]
    upsert?: HistoriqueAccesUpsertWithWhereUniqueWithoutUserInput | HistoriqueAccesUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: HistoriqueAccesCreateManyUserInputEnvelope
    set?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    disconnect?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    delete?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    connect?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    update?: HistoriqueAccesUpdateWithWhereUniqueWithoutUserInput | HistoriqueAccesUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: HistoriqueAccesUpdateManyWithWhereWithoutUserInput | HistoriqueAccesUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: HistoriqueAccesScalarWhereInput | HistoriqueAccesScalarWhereInput[]
  }

  export type CollectionUpdateManyWithoutUserNestedInput = {
    create?: XOR<CollectionCreateWithoutUserInput, CollectionUncheckedCreateWithoutUserInput> | CollectionCreateWithoutUserInput[] | CollectionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutUserInput | CollectionCreateOrConnectWithoutUserInput[]
    upsert?: CollectionUpsertWithWhereUniqueWithoutUserInput | CollectionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CollectionCreateManyUserInputEnvelope
    set?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    disconnect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    delete?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    update?: CollectionUpdateWithWhereUniqueWithoutUserInput | CollectionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CollectionUpdateManyWithWhereWithoutUserInput | CollectionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CollectionScalarWhereInput | CollectionScalarWhereInput[]
  }

  export type ReservationUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReservationCreateWithoutUserInput, ReservationUncheckedCreateWithoutUserInput> | ReservationCreateWithoutUserInput[] | ReservationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutUserInput | ReservationCreateOrConnectWithoutUserInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutUserInput | ReservationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReservationCreateManyUserInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutUserInput | ReservationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutUserInput | ReservationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type EmpruntUpdateManyWithoutUserNestedInput = {
    create?: XOR<EmpruntCreateWithoutUserInput, EmpruntUncheckedCreateWithoutUserInput> | EmpruntCreateWithoutUserInput[] | EmpruntUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EmpruntCreateOrConnectWithoutUserInput | EmpruntCreateOrConnectWithoutUserInput[]
    upsert?: EmpruntUpsertWithWhereUniqueWithoutUserInput | EmpruntUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: EmpruntCreateManyUserInputEnvelope
    set?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    disconnect?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    delete?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    connect?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    update?: EmpruntUpdateWithWhereUniqueWithoutUserInput | EmpruntUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: EmpruntUpdateManyWithWhereWithoutUserInput | EmpruntUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: EmpruntScalarWhereInput | EmpruntScalarWhereInput[]
  }

  export type RecommandationUpdateManyWithoutUserNestedInput = {
    create?: XOR<RecommandationCreateWithoutUserInput, RecommandationUncheckedCreateWithoutUserInput> | RecommandationCreateWithoutUserInput[] | RecommandationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RecommandationCreateOrConnectWithoutUserInput | RecommandationCreateOrConnectWithoutUserInput[]
    upsert?: RecommandationUpsertWithWhereUniqueWithoutUserInput | RecommandationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RecommandationCreateManyUserInputEnvelope
    set?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    disconnect?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    delete?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    connect?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    update?: RecommandationUpdateWithWhereUniqueWithoutUserInput | RecommandationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RecommandationUpdateManyWithWhereWithoutUserInput | RecommandationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RecommandationScalarWhereInput | RecommandationScalarWhereInput[]
  }

  export type JournalAuditUpdateManyWithoutUserNestedInput = {
    create?: XOR<JournalAuditCreateWithoutUserInput, JournalAuditUncheckedCreateWithoutUserInput> | JournalAuditCreateWithoutUserInput[] | JournalAuditUncheckedCreateWithoutUserInput[]
    connectOrCreate?: JournalAuditCreateOrConnectWithoutUserInput | JournalAuditCreateOrConnectWithoutUserInput[]
    upsert?: JournalAuditUpsertWithWhereUniqueWithoutUserInput | JournalAuditUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: JournalAuditCreateManyUserInputEnvelope
    set?: JournalAuditWhereUniqueInput | JournalAuditWhereUniqueInput[]
    disconnect?: JournalAuditWhereUniqueInput | JournalAuditWhereUniqueInput[]
    delete?: JournalAuditWhereUniqueInput | JournalAuditWhereUniqueInput[]
    connect?: JournalAuditWhereUniqueInput | JournalAuditWhereUniqueInput[]
    update?: JournalAuditUpdateWithWhereUniqueWithoutUserInput | JournalAuditUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: JournalAuditUpdateManyWithWhereWithoutUserInput | JournalAuditUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: JournalAuditScalarWhereInput | JournalAuditScalarWhereInput[]
  }

  export type DonneesRecommandationUpdateManyWithoutUserNestedInput = {
    create?: XOR<DonneesRecommandationCreateWithoutUserInput, DonneesRecommandationUncheckedCreateWithoutUserInput> | DonneesRecommandationCreateWithoutUserInput[] | DonneesRecommandationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DonneesRecommandationCreateOrConnectWithoutUserInput | DonneesRecommandationCreateOrConnectWithoutUserInput[]
    upsert?: DonneesRecommandationUpsertWithWhereUniqueWithoutUserInput | DonneesRecommandationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DonneesRecommandationCreateManyUserInputEnvelope
    set?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
    disconnect?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
    delete?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
    connect?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
    update?: DonneesRecommandationUpdateWithWhereUniqueWithoutUserInput | DonneesRecommandationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DonneesRecommandationUpdateManyWithWhereWithoutUserInput | DonneesRecommandationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DonneesRecommandationScalarWhereInput | DonneesRecommandationScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type RessourceUncheckedUpdateManyWithoutAuteurNestedInput = {
    create?: XOR<RessourceCreateWithoutAuteurInput, RessourceUncheckedCreateWithoutAuteurInput> | RessourceCreateWithoutAuteurInput[] | RessourceUncheckedCreateWithoutAuteurInput[]
    connectOrCreate?: RessourceCreateOrConnectWithoutAuteurInput | RessourceCreateOrConnectWithoutAuteurInput[]
    upsert?: RessourceUpsertWithWhereUniqueWithoutAuteurInput | RessourceUpsertWithWhereUniqueWithoutAuteurInput[]
    createMany?: RessourceCreateManyAuteurInputEnvelope
    set?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
    disconnect?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
    delete?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
    connect?: RessourceWhereUniqueInput | RessourceWhereUniqueInput[]
    update?: RessourceUpdateWithWhereUniqueWithoutAuteurInput | RessourceUpdateWithWhereUniqueWithoutAuteurInput[]
    updateMany?: RessourceUpdateManyWithWhereWithoutAuteurInput | RessourceUpdateManyWithWhereWithoutAuteurInput[]
    deleteMany?: RessourceScalarWhereInput | RessourceScalarWhereInput[]
  }

  export type FavoriUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<FavoriCreateWithoutUserInput, FavoriUncheckedCreateWithoutUserInput> | FavoriCreateWithoutUserInput[] | FavoriUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriCreateOrConnectWithoutUserInput | FavoriCreateOrConnectWithoutUserInput[]
    upsert?: FavoriUpsertWithWhereUniqueWithoutUserInput | FavoriUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FavoriCreateManyUserInputEnvelope
    set?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
    disconnect?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
    delete?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
    connect?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
    update?: FavoriUpdateWithWhereUniqueWithoutUserInput | FavoriUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FavoriUpdateManyWithWhereWithoutUserInput | FavoriUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FavoriScalarWhereInput | FavoriScalarWhereInput[]
  }

  export type CommentaireUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CommentaireCreateWithoutUserInput, CommentaireUncheckedCreateWithoutUserInput> | CommentaireCreateWithoutUserInput[] | CommentaireUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommentaireCreateOrConnectWithoutUserInput | CommentaireCreateOrConnectWithoutUserInput[]
    upsert?: CommentaireUpsertWithWhereUniqueWithoutUserInput | CommentaireUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CommentaireCreateManyUserInputEnvelope
    set?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
    disconnect?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
    delete?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
    connect?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
    update?: CommentaireUpdateWithWhereUniqueWithoutUserInput | CommentaireUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CommentaireUpdateManyWithWhereWithoutUserInput | CommentaireUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CommentaireScalarWhereInput | CommentaireScalarWhereInput[]
  }

  export type NotationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotationCreateWithoutUserInput, NotationUncheckedCreateWithoutUserInput> | NotationCreateWithoutUserInput[] | NotationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotationCreateOrConnectWithoutUserInput | NotationCreateOrConnectWithoutUserInput[]
    upsert?: NotationUpsertWithWhereUniqueWithoutUserInput | NotationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotationCreateManyUserInputEnvelope
    set?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
    disconnect?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
    delete?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
    connect?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
    update?: NotationUpdateWithWhereUniqueWithoutUserInput | NotationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotationUpdateManyWithWhereWithoutUserInput | NotationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotationScalarWhereInput | NotationScalarWhereInput[]
  }

  export type HistoriqueAccesUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<HistoriqueAccesCreateWithoutUserInput, HistoriqueAccesUncheckedCreateWithoutUserInput> | HistoriqueAccesCreateWithoutUserInput[] | HistoriqueAccesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: HistoriqueAccesCreateOrConnectWithoutUserInput | HistoriqueAccesCreateOrConnectWithoutUserInput[]
    upsert?: HistoriqueAccesUpsertWithWhereUniqueWithoutUserInput | HistoriqueAccesUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: HistoriqueAccesCreateManyUserInputEnvelope
    set?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    disconnect?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    delete?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    connect?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    update?: HistoriqueAccesUpdateWithWhereUniqueWithoutUserInput | HistoriqueAccesUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: HistoriqueAccesUpdateManyWithWhereWithoutUserInput | HistoriqueAccesUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: HistoriqueAccesScalarWhereInput | HistoriqueAccesScalarWhereInput[]
  }

  export type CollectionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CollectionCreateWithoutUserInput, CollectionUncheckedCreateWithoutUserInput> | CollectionCreateWithoutUserInput[] | CollectionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutUserInput | CollectionCreateOrConnectWithoutUserInput[]
    upsert?: CollectionUpsertWithWhereUniqueWithoutUserInput | CollectionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CollectionCreateManyUserInputEnvelope
    set?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    disconnect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    delete?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    update?: CollectionUpdateWithWhereUniqueWithoutUserInput | CollectionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CollectionUpdateManyWithWhereWithoutUserInput | CollectionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CollectionScalarWhereInput | CollectionScalarWhereInput[]
  }

  export type ReservationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReservationCreateWithoutUserInput, ReservationUncheckedCreateWithoutUserInput> | ReservationCreateWithoutUserInput[] | ReservationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutUserInput | ReservationCreateOrConnectWithoutUserInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutUserInput | ReservationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReservationCreateManyUserInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutUserInput | ReservationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutUserInput | ReservationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type EmpruntUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<EmpruntCreateWithoutUserInput, EmpruntUncheckedCreateWithoutUserInput> | EmpruntCreateWithoutUserInput[] | EmpruntUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EmpruntCreateOrConnectWithoutUserInput | EmpruntCreateOrConnectWithoutUserInput[]
    upsert?: EmpruntUpsertWithWhereUniqueWithoutUserInput | EmpruntUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: EmpruntCreateManyUserInputEnvelope
    set?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    disconnect?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    delete?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    connect?: EmpruntWhereUniqueInput | EmpruntWhereUniqueInput[]
    update?: EmpruntUpdateWithWhereUniqueWithoutUserInput | EmpruntUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: EmpruntUpdateManyWithWhereWithoutUserInput | EmpruntUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: EmpruntScalarWhereInput | EmpruntScalarWhereInput[]
  }

  export type RecommandationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<RecommandationCreateWithoutUserInput, RecommandationUncheckedCreateWithoutUserInput> | RecommandationCreateWithoutUserInput[] | RecommandationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RecommandationCreateOrConnectWithoutUserInput | RecommandationCreateOrConnectWithoutUserInput[]
    upsert?: RecommandationUpsertWithWhereUniqueWithoutUserInput | RecommandationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RecommandationCreateManyUserInputEnvelope
    set?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    disconnect?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    delete?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    connect?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    update?: RecommandationUpdateWithWhereUniqueWithoutUserInput | RecommandationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RecommandationUpdateManyWithWhereWithoutUserInput | RecommandationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RecommandationScalarWhereInput | RecommandationScalarWhereInput[]
  }

  export type JournalAuditUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<JournalAuditCreateWithoutUserInput, JournalAuditUncheckedCreateWithoutUserInput> | JournalAuditCreateWithoutUserInput[] | JournalAuditUncheckedCreateWithoutUserInput[]
    connectOrCreate?: JournalAuditCreateOrConnectWithoutUserInput | JournalAuditCreateOrConnectWithoutUserInput[]
    upsert?: JournalAuditUpsertWithWhereUniqueWithoutUserInput | JournalAuditUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: JournalAuditCreateManyUserInputEnvelope
    set?: JournalAuditWhereUniqueInput | JournalAuditWhereUniqueInput[]
    disconnect?: JournalAuditWhereUniqueInput | JournalAuditWhereUniqueInput[]
    delete?: JournalAuditWhereUniqueInput | JournalAuditWhereUniqueInput[]
    connect?: JournalAuditWhereUniqueInput | JournalAuditWhereUniqueInput[]
    update?: JournalAuditUpdateWithWhereUniqueWithoutUserInput | JournalAuditUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: JournalAuditUpdateManyWithWhereWithoutUserInput | JournalAuditUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: JournalAuditScalarWhereInput | JournalAuditScalarWhereInput[]
  }

  export type DonneesRecommandationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<DonneesRecommandationCreateWithoutUserInput, DonneesRecommandationUncheckedCreateWithoutUserInput> | DonneesRecommandationCreateWithoutUserInput[] | DonneesRecommandationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DonneesRecommandationCreateOrConnectWithoutUserInput | DonneesRecommandationCreateOrConnectWithoutUserInput[]
    upsert?: DonneesRecommandationUpsertWithWhereUniqueWithoutUserInput | DonneesRecommandationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DonneesRecommandationCreateManyUserInputEnvelope
    set?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
    disconnect?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
    delete?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
    connect?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
    update?: DonneesRecommandationUpdateWithWhereUniqueWithoutUserInput | DonneesRecommandationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DonneesRecommandationUpdateManyWithWhereWithoutUserInput | DonneesRecommandationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DonneesRecommandationScalarWhereInput | DonneesRecommandationScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutFavorisInput = {
    create?: XOR<UserCreateWithoutFavorisInput, UserUncheckedCreateWithoutFavorisInput>
    connectOrCreate?: UserCreateOrConnectWithoutFavorisInput
    connect?: UserWhereUniqueInput
  }

  export type RessourceCreateNestedOneWithoutFavorisInput = {
    create?: XOR<RessourceCreateWithoutFavorisInput, RessourceUncheckedCreateWithoutFavorisInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutFavorisInput
    connect?: RessourceWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutFavorisNestedInput = {
    create?: XOR<UserCreateWithoutFavorisInput, UserUncheckedCreateWithoutFavorisInput>
    connectOrCreate?: UserCreateOrConnectWithoutFavorisInput
    upsert?: UserUpsertWithoutFavorisInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFavorisInput, UserUpdateWithoutFavorisInput>, UserUncheckedUpdateWithoutFavorisInput>
  }

  export type RessourceUpdateOneRequiredWithoutFavorisNestedInput = {
    create?: XOR<RessourceCreateWithoutFavorisInput, RessourceUncheckedCreateWithoutFavorisInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutFavorisInput
    upsert?: RessourceUpsertWithoutFavorisInput
    connect?: RessourceWhereUniqueInput
    update?: XOR<XOR<RessourceUpdateToOneWithWhereWithoutFavorisInput, RessourceUpdateWithoutFavorisInput>, RessourceUncheckedUpdateWithoutFavorisInput>
  }

  export type UserCreateNestedOneWithoutCommentairesInput = {
    create?: XOR<UserCreateWithoutCommentairesInput, UserUncheckedCreateWithoutCommentairesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCommentairesInput
    connect?: UserWhereUniqueInput
  }

  export type RessourceCreateNestedOneWithoutCommentairesInput = {
    create?: XOR<RessourceCreateWithoutCommentairesInput, RessourceUncheckedCreateWithoutCommentairesInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutCommentairesInput
    connect?: RessourceWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutCommentairesNestedInput = {
    create?: XOR<UserCreateWithoutCommentairesInput, UserUncheckedCreateWithoutCommentairesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCommentairesInput
    upsert?: UserUpsertWithoutCommentairesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCommentairesInput, UserUpdateWithoutCommentairesInput>, UserUncheckedUpdateWithoutCommentairesInput>
  }

  export type RessourceUpdateOneRequiredWithoutCommentairesNestedInput = {
    create?: XOR<RessourceCreateWithoutCommentairesInput, RessourceUncheckedCreateWithoutCommentairesInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutCommentairesInput
    upsert?: RessourceUpsertWithoutCommentairesInput
    connect?: RessourceWhereUniqueInput
    update?: XOR<XOR<RessourceUpdateToOneWithWhereWithoutCommentairesInput, RessourceUpdateWithoutCommentairesInput>, RessourceUncheckedUpdateWithoutCommentairesInput>
  }

  export type UserCreateNestedOneWithoutNotationsInput = {
    create?: XOR<UserCreateWithoutNotationsInput, UserUncheckedCreateWithoutNotationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotationsInput
    connect?: UserWhereUniqueInput
  }

  export type RessourceCreateNestedOneWithoutNotationsInput = {
    create?: XOR<RessourceCreateWithoutNotationsInput, RessourceUncheckedCreateWithoutNotationsInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutNotationsInput
    connect?: RessourceWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutNotationsNestedInput = {
    create?: XOR<UserCreateWithoutNotationsInput, UserUncheckedCreateWithoutNotationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotationsInput
    upsert?: UserUpsertWithoutNotationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotationsInput, UserUpdateWithoutNotationsInput>, UserUncheckedUpdateWithoutNotationsInput>
  }

  export type RessourceUpdateOneRequiredWithoutNotationsNestedInput = {
    create?: XOR<RessourceCreateWithoutNotationsInput, RessourceUncheckedCreateWithoutNotationsInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutNotationsInput
    upsert?: RessourceUpsertWithoutNotationsInput
    connect?: RessourceWhereUniqueInput
    update?: XOR<XOR<RessourceUpdateToOneWithWhereWithoutNotationsInput, RessourceUpdateWithoutNotationsInput>, RessourceUncheckedUpdateWithoutNotationsInput>
  }

  export type UserCreateNestedOneWithoutHistoriquesInput = {
    create?: XOR<UserCreateWithoutHistoriquesInput, UserUncheckedCreateWithoutHistoriquesInput>
    connectOrCreate?: UserCreateOrConnectWithoutHistoriquesInput
    connect?: UserWhereUniqueInput
  }

  export type RessourceCreateNestedOneWithoutHistoriquesInput = {
    create?: XOR<RessourceCreateWithoutHistoriquesInput, RessourceUncheckedCreateWithoutHistoriquesInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutHistoriquesInput
    connect?: RessourceWhereUniqueInput
  }

  export type UniversiteCreateNestedOneWithoutHistoriqueAccesInput = {
    create?: XOR<UniversiteCreateWithoutHistoriqueAccesInput, UniversiteUncheckedCreateWithoutHistoriqueAccesInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutHistoriqueAccesInput
    connect?: UniversiteWhereUniqueInput
  }

  export type EnumTypeAccesFieldUpdateOperationsInput = {
    set?: $Enums.TypeAcces
  }

  export type UserUpdateOneRequiredWithoutHistoriquesNestedInput = {
    create?: XOR<UserCreateWithoutHistoriquesInput, UserUncheckedCreateWithoutHistoriquesInput>
    connectOrCreate?: UserCreateOrConnectWithoutHistoriquesInput
    upsert?: UserUpsertWithoutHistoriquesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutHistoriquesInput, UserUpdateWithoutHistoriquesInput>, UserUncheckedUpdateWithoutHistoriquesInput>
  }

  export type RessourceUpdateOneRequiredWithoutHistoriquesNestedInput = {
    create?: XOR<RessourceCreateWithoutHistoriquesInput, RessourceUncheckedCreateWithoutHistoriquesInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutHistoriquesInput
    upsert?: RessourceUpsertWithoutHistoriquesInput
    connect?: RessourceWhereUniqueInput
    update?: XOR<XOR<RessourceUpdateToOneWithWhereWithoutHistoriquesInput, RessourceUpdateWithoutHistoriquesInput>, RessourceUncheckedUpdateWithoutHistoriquesInput>
  }

  export type UniversiteUpdateOneWithoutHistoriqueAccesNestedInput = {
    create?: XOR<UniversiteCreateWithoutHistoriqueAccesInput, UniversiteUncheckedCreateWithoutHistoriqueAccesInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutHistoriqueAccesInput
    upsert?: UniversiteUpsertWithoutHistoriqueAccesInput
    disconnect?: UniversiteWhereInput | boolean
    delete?: UniversiteWhereInput | boolean
    connect?: UniversiteWhereUniqueInput
    update?: XOR<XOR<UniversiteUpdateToOneWithWhereWithoutHistoriqueAccesInput, UniversiteUpdateWithoutHistoriqueAccesInput>, UniversiteUncheckedUpdateWithoutHistoriqueAccesInput>
  }

  export type UserCreateNestedOneWithoutDonneesRecommandationInput = {
    create?: XOR<UserCreateWithoutDonneesRecommandationInput, UserUncheckedCreateWithoutDonneesRecommandationInput>
    connectOrCreate?: UserCreateOrConnectWithoutDonneesRecommandationInput
    connect?: UserWhereUniqueInput
  }

  export type RessourceCreateNestedOneWithoutDonneesRecommandationInput = {
    create?: XOR<RessourceCreateWithoutDonneesRecommandationInput, RessourceUncheckedCreateWithoutDonneesRecommandationInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutDonneesRecommandationInput
    connect?: RessourceWhereUniqueInput
  }

  export type EnumTypeInteractionFieldUpdateOperationsInput = {
    set?: $Enums.TypeInteraction
  }

  export type UserUpdateOneRequiredWithoutDonneesRecommandationNestedInput = {
    create?: XOR<UserCreateWithoutDonneesRecommandationInput, UserUncheckedCreateWithoutDonneesRecommandationInput>
    connectOrCreate?: UserCreateOrConnectWithoutDonneesRecommandationInput
    upsert?: UserUpsertWithoutDonneesRecommandationInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDonneesRecommandationInput, UserUpdateWithoutDonneesRecommandationInput>, UserUncheckedUpdateWithoutDonneesRecommandationInput>
  }

  export type RessourceUpdateOneRequiredWithoutDonneesRecommandationNestedInput = {
    create?: XOR<RessourceCreateWithoutDonneesRecommandationInput, RessourceUncheckedCreateWithoutDonneesRecommandationInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutDonneesRecommandationInput
    upsert?: RessourceUpsertWithoutDonneesRecommandationInput
    connect?: RessourceWhereUniqueInput
    update?: XOR<XOR<RessourceUpdateToOneWithWhereWithoutDonneesRecommandationInput, RessourceUpdateWithoutDonneesRecommandationInput>, RessourceUncheckedUpdateWithoutDonneesRecommandationInput>
  }

  export type UserCreateNestedOneWithoutCollectionsInput = {
    create?: XOR<UserCreateWithoutCollectionsInput, UserUncheckedCreateWithoutCollectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCollectionsInput
    connect?: UserWhereUniqueInput
  }

  export type CollectionRessourceCreateNestedManyWithoutCollectionInput = {
    create?: XOR<CollectionRessourceCreateWithoutCollectionInput, CollectionRessourceUncheckedCreateWithoutCollectionInput> | CollectionRessourceCreateWithoutCollectionInput[] | CollectionRessourceUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: CollectionRessourceCreateOrConnectWithoutCollectionInput | CollectionRessourceCreateOrConnectWithoutCollectionInput[]
    createMany?: CollectionRessourceCreateManyCollectionInputEnvelope
    connect?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
  }

  export type CollectionRessourceUncheckedCreateNestedManyWithoutCollectionInput = {
    create?: XOR<CollectionRessourceCreateWithoutCollectionInput, CollectionRessourceUncheckedCreateWithoutCollectionInput> | CollectionRessourceCreateWithoutCollectionInput[] | CollectionRessourceUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: CollectionRessourceCreateOrConnectWithoutCollectionInput | CollectionRessourceCreateOrConnectWithoutCollectionInput[]
    createMany?: CollectionRessourceCreateManyCollectionInputEnvelope
    connect?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutCollectionsNestedInput = {
    create?: XOR<UserCreateWithoutCollectionsInput, UserUncheckedCreateWithoutCollectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCollectionsInput
    upsert?: UserUpsertWithoutCollectionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCollectionsInput, UserUpdateWithoutCollectionsInput>, UserUncheckedUpdateWithoutCollectionsInput>
  }

  export type CollectionRessourceUpdateManyWithoutCollectionNestedInput = {
    create?: XOR<CollectionRessourceCreateWithoutCollectionInput, CollectionRessourceUncheckedCreateWithoutCollectionInput> | CollectionRessourceCreateWithoutCollectionInput[] | CollectionRessourceUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: CollectionRessourceCreateOrConnectWithoutCollectionInput | CollectionRessourceCreateOrConnectWithoutCollectionInput[]
    upsert?: CollectionRessourceUpsertWithWhereUniqueWithoutCollectionInput | CollectionRessourceUpsertWithWhereUniqueWithoutCollectionInput[]
    createMany?: CollectionRessourceCreateManyCollectionInputEnvelope
    set?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
    disconnect?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
    delete?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
    connect?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
    update?: CollectionRessourceUpdateWithWhereUniqueWithoutCollectionInput | CollectionRessourceUpdateWithWhereUniqueWithoutCollectionInput[]
    updateMany?: CollectionRessourceUpdateManyWithWhereWithoutCollectionInput | CollectionRessourceUpdateManyWithWhereWithoutCollectionInput[]
    deleteMany?: CollectionRessourceScalarWhereInput | CollectionRessourceScalarWhereInput[]
  }

  export type CollectionRessourceUncheckedUpdateManyWithoutCollectionNestedInput = {
    create?: XOR<CollectionRessourceCreateWithoutCollectionInput, CollectionRessourceUncheckedCreateWithoutCollectionInput> | CollectionRessourceCreateWithoutCollectionInput[] | CollectionRessourceUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: CollectionRessourceCreateOrConnectWithoutCollectionInput | CollectionRessourceCreateOrConnectWithoutCollectionInput[]
    upsert?: CollectionRessourceUpsertWithWhereUniqueWithoutCollectionInput | CollectionRessourceUpsertWithWhereUniqueWithoutCollectionInput[]
    createMany?: CollectionRessourceCreateManyCollectionInputEnvelope
    set?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
    disconnect?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
    delete?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
    connect?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
    update?: CollectionRessourceUpdateWithWhereUniqueWithoutCollectionInput | CollectionRessourceUpdateWithWhereUniqueWithoutCollectionInput[]
    updateMany?: CollectionRessourceUpdateManyWithWhereWithoutCollectionInput | CollectionRessourceUpdateManyWithWhereWithoutCollectionInput[]
    deleteMany?: CollectionRessourceScalarWhereInput | CollectionRessourceScalarWhereInput[]
  }

  export type CollectionCreateNestedOneWithoutRessourcesInput = {
    create?: XOR<CollectionCreateWithoutRessourcesInput, CollectionUncheckedCreateWithoutRessourcesInput>
    connectOrCreate?: CollectionCreateOrConnectWithoutRessourcesInput
    connect?: CollectionWhereUniqueInput
  }

  export type RessourceCreateNestedOneWithoutCollectionsInput = {
    create?: XOR<RessourceCreateWithoutCollectionsInput, RessourceUncheckedCreateWithoutCollectionsInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutCollectionsInput
    connect?: RessourceWhereUniqueInput
  }

  export type CollectionUpdateOneRequiredWithoutRessourcesNestedInput = {
    create?: XOR<CollectionCreateWithoutRessourcesInput, CollectionUncheckedCreateWithoutRessourcesInput>
    connectOrCreate?: CollectionCreateOrConnectWithoutRessourcesInput
    upsert?: CollectionUpsertWithoutRessourcesInput
    connect?: CollectionWhereUniqueInput
    update?: XOR<XOR<CollectionUpdateToOneWithWhereWithoutRessourcesInput, CollectionUpdateWithoutRessourcesInput>, CollectionUncheckedUpdateWithoutRessourcesInput>
  }

  export type RessourceUpdateOneRequiredWithoutCollectionsNestedInput = {
    create?: XOR<RessourceCreateWithoutCollectionsInput, RessourceUncheckedCreateWithoutCollectionsInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutCollectionsInput
    upsert?: RessourceUpsertWithoutCollectionsInput
    connect?: RessourceWhereUniqueInput
    update?: XOR<XOR<RessourceUpdateToOneWithWhereWithoutCollectionsInput, RessourceUpdateWithoutCollectionsInput>, RessourceUncheckedUpdateWithoutCollectionsInput>
  }

  export type RessourceCreateNestedOneWithoutPartagesInput = {
    create?: XOR<RessourceCreateWithoutPartagesInput, RessourceUncheckedCreateWithoutPartagesInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutPartagesInput
    connect?: RessourceWhereUniqueInput
  }

  export type UniversiteCreateNestedOneWithoutPartagesSourceInput = {
    create?: XOR<UniversiteCreateWithoutPartagesSourceInput, UniversiteUncheckedCreateWithoutPartagesSourceInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutPartagesSourceInput
    connect?: UniversiteWhereUniqueInput
  }

  export type UniversiteCreateNestedOneWithoutPartagesDestinationInput = {
    create?: XOR<UniversiteCreateWithoutPartagesDestinationInput, UniversiteUncheckedCreateWithoutPartagesDestinationInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutPartagesDestinationInput
    connect?: UniversiteWhereUniqueInput
  }

  export type RessourceUpdateOneRequiredWithoutPartagesNestedInput = {
    create?: XOR<RessourceCreateWithoutPartagesInput, RessourceUncheckedCreateWithoutPartagesInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutPartagesInput
    upsert?: RessourceUpsertWithoutPartagesInput
    connect?: RessourceWhereUniqueInput
    update?: XOR<XOR<RessourceUpdateToOneWithWhereWithoutPartagesInput, RessourceUpdateWithoutPartagesInput>, RessourceUncheckedUpdateWithoutPartagesInput>
  }

  export type UniversiteUpdateOneRequiredWithoutPartagesSourceNestedInput = {
    create?: XOR<UniversiteCreateWithoutPartagesSourceInput, UniversiteUncheckedCreateWithoutPartagesSourceInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutPartagesSourceInput
    upsert?: UniversiteUpsertWithoutPartagesSourceInput
    connect?: UniversiteWhereUniqueInput
    update?: XOR<XOR<UniversiteUpdateToOneWithWhereWithoutPartagesSourceInput, UniversiteUpdateWithoutPartagesSourceInput>, UniversiteUncheckedUpdateWithoutPartagesSourceInput>
  }

  export type UniversiteUpdateOneRequiredWithoutPartagesDestinationNestedInput = {
    create?: XOR<UniversiteCreateWithoutPartagesDestinationInput, UniversiteUncheckedCreateWithoutPartagesDestinationInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutPartagesDestinationInput
    upsert?: UniversiteUpsertWithoutPartagesDestinationInput
    connect?: UniversiteWhereUniqueInput
    update?: XOR<XOR<UniversiteUpdateToOneWithWhereWithoutPartagesDestinationInput, UniversiteUpdateWithoutPartagesDestinationInput>, UniversiteUncheckedUpdateWithoutPartagesDestinationInput>
  }

  export type RessourceCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<RessourceCreateWithoutTransactionsInput, RessourceUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutTransactionsInput
    connect?: RessourceWhereUniqueInput
  }

  export type UniversiteCreateNestedOneWithoutTransactionsOrigineInput = {
    create?: XOR<UniversiteCreateWithoutTransactionsOrigineInput, UniversiteUncheckedCreateWithoutTransactionsOrigineInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutTransactionsOrigineInput
    connect?: UniversiteWhereUniqueInput
  }

  export type UniversiteCreateNestedOneWithoutTransactionsDestinationInput = {
    create?: XOR<UniversiteCreateWithoutTransactionsDestinationInput, UniversiteUncheckedCreateWithoutTransactionsDestinationInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutTransactionsDestinationInput
    connect?: UniversiteWhereUniqueInput
  }

  export type EnumTypeTransactionFieldUpdateOperationsInput = {
    set?: $Enums.TypeTransaction
  }

  export type EnumStatutTransactionFieldUpdateOperationsInput = {
    set?: $Enums.StatutTransaction
  }

  export type RessourceUpdateOneWithoutTransactionsNestedInput = {
    create?: XOR<RessourceCreateWithoutTransactionsInput, RessourceUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutTransactionsInput
    upsert?: RessourceUpsertWithoutTransactionsInput
    disconnect?: RessourceWhereInput | boolean
    delete?: RessourceWhereInput | boolean
    connect?: RessourceWhereUniqueInput
    update?: XOR<XOR<RessourceUpdateToOneWithWhereWithoutTransactionsInput, RessourceUpdateWithoutTransactionsInput>, RessourceUncheckedUpdateWithoutTransactionsInput>
  }

  export type UniversiteUpdateOneRequiredWithoutTransactionsOrigineNestedInput = {
    create?: XOR<UniversiteCreateWithoutTransactionsOrigineInput, UniversiteUncheckedCreateWithoutTransactionsOrigineInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutTransactionsOrigineInput
    upsert?: UniversiteUpsertWithoutTransactionsOrigineInput
    connect?: UniversiteWhereUniqueInput
    update?: XOR<XOR<UniversiteUpdateToOneWithWhereWithoutTransactionsOrigineInput, UniversiteUpdateWithoutTransactionsOrigineInput>, UniversiteUncheckedUpdateWithoutTransactionsOrigineInput>
  }

  export type UniversiteUpdateOneWithoutTransactionsDestinationNestedInput = {
    create?: XOR<UniversiteCreateWithoutTransactionsDestinationInput, UniversiteUncheckedCreateWithoutTransactionsDestinationInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutTransactionsDestinationInput
    upsert?: UniversiteUpsertWithoutTransactionsDestinationInput
    disconnect?: UniversiteWhereInput | boolean
    delete?: UniversiteWhereInput | boolean
    connect?: UniversiteWhereUniqueInput
    update?: XOR<XOR<UniversiteUpdateToOneWithWhereWithoutTransactionsDestinationInput, UniversiteUpdateWithoutTransactionsDestinationInput>, UniversiteUncheckedUpdateWithoutTransactionsDestinationInput>
  }

  export type UserCreateNestedOneWithoutContributionsInput = {
    create?: XOR<UserCreateWithoutContributionsInput, UserUncheckedCreateWithoutContributionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutContributionsInput
    connect?: UserWhereUniqueInput
  }

  export type UniversiteCreateNestedOneWithoutRessourcesInput = {
    create?: XOR<UniversiteCreateWithoutRessourcesInput, UniversiteUncheckedCreateWithoutRessourcesInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutRessourcesInput
    connect?: UniversiteWhereUniqueInput
  }

  export type FavoriCreateNestedManyWithoutRessourceInput = {
    create?: XOR<FavoriCreateWithoutRessourceInput, FavoriUncheckedCreateWithoutRessourceInput> | FavoriCreateWithoutRessourceInput[] | FavoriUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: FavoriCreateOrConnectWithoutRessourceInput | FavoriCreateOrConnectWithoutRessourceInput[]
    createMany?: FavoriCreateManyRessourceInputEnvelope
    connect?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
  }

  export type CommentaireCreateNestedManyWithoutRessourceInput = {
    create?: XOR<CommentaireCreateWithoutRessourceInput, CommentaireUncheckedCreateWithoutRessourceInput> | CommentaireCreateWithoutRessourceInput[] | CommentaireUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: CommentaireCreateOrConnectWithoutRessourceInput | CommentaireCreateOrConnectWithoutRessourceInput[]
    createMany?: CommentaireCreateManyRessourceInputEnvelope
    connect?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
  }

  export type NotationCreateNestedManyWithoutRessourceInput = {
    create?: XOR<NotationCreateWithoutRessourceInput, NotationUncheckedCreateWithoutRessourceInput> | NotationCreateWithoutRessourceInput[] | NotationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: NotationCreateOrConnectWithoutRessourceInput | NotationCreateOrConnectWithoutRessourceInput[]
    createMany?: NotationCreateManyRessourceInputEnvelope
    connect?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
  }

  export type HistoriqueAccesCreateNestedManyWithoutRessourceInput = {
    create?: XOR<HistoriqueAccesCreateWithoutRessourceInput, HistoriqueAccesUncheckedCreateWithoutRessourceInput> | HistoriqueAccesCreateWithoutRessourceInput[] | HistoriqueAccesUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: HistoriqueAccesCreateOrConnectWithoutRessourceInput | HistoriqueAccesCreateOrConnectWithoutRessourceInput[]
    createMany?: HistoriqueAccesCreateManyRessourceInputEnvelope
    connect?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
  }

  export type CollectionRessourceCreateNestedManyWithoutRessourceInput = {
    create?: XOR<CollectionRessourceCreateWithoutRessourceInput, CollectionRessourceUncheckedCreateWithoutRessourceInput> | CollectionRessourceCreateWithoutRessourceInput[] | CollectionRessourceUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: CollectionRessourceCreateOrConnectWithoutRessourceInput | CollectionRessourceCreateOrConnectWithoutRessourceInput[]
    createMany?: CollectionRessourceCreateManyRessourceInputEnvelope
    connect?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
  }

  export type PartageUniversiteCreateNestedManyWithoutRessourceInput = {
    create?: XOR<PartageUniversiteCreateWithoutRessourceInput, PartageUniversiteUncheckedCreateWithoutRessourceInput> | PartageUniversiteCreateWithoutRessourceInput[] | PartageUniversiteUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: PartageUniversiteCreateOrConnectWithoutRessourceInput | PartageUniversiteCreateOrConnectWithoutRessourceInput[]
    createMany?: PartageUniversiteCreateManyRessourceInputEnvelope
    connect?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
  }

  export type ExemplairePhysiqueCreateNestedManyWithoutRessourceInput = {
    create?: XOR<ExemplairePhysiqueCreateWithoutRessourceInput, ExemplairePhysiqueUncheckedCreateWithoutRessourceInput> | ExemplairePhysiqueCreateWithoutRessourceInput[] | ExemplairePhysiqueUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: ExemplairePhysiqueCreateOrConnectWithoutRessourceInput | ExemplairePhysiqueCreateOrConnectWithoutRessourceInput[]
    createMany?: ExemplairePhysiqueCreateManyRessourceInputEnvelope
    connect?: ExemplairePhysiqueWhereUniqueInput | ExemplairePhysiqueWhereUniqueInput[]
  }

  export type ReservationCreateNestedManyWithoutRessourceInput = {
    create?: XOR<ReservationCreateWithoutRessourceInput, ReservationUncheckedCreateWithoutRessourceInput> | ReservationCreateWithoutRessourceInput[] | ReservationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutRessourceInput | ReservationCreateOrConnectWithoutRessourceInput[]
    createMany?: ReservationCreateManyRessourceInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type RecommandationCreateNestedManyWithoutRessourceInput = {
    create?: XOR<RecommandationCreateWithoutRessourceInput, RecommandationUncheckedCreateWithoutRessourceInput> | RecommandationCreateWithoutRessourceInput[] | RecommandationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: RecommandationCreateOrConnectWithoutRessourceInput | RecommandationCreateOrConnectWithoutRessourceInput[]
    createMany?: RecommandationCreateManyRessourceInputEnvelope
    connect?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
  }

  export type DonneesRecommandationCreateNestedManyWithoutRessourceInput = {
    create?: XOR<DonneesRecommandationCreateWithoutRessourceInput, DonneesRecommandationUncheckedCreateWithoutRessourceInput> | DonneesRecommandationCreateWithoutRessourceInput[] | DonneesRecommandationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: DonneesRecommandationCreateOrConnectWithoutRessourceInput | DonneesRecommandationCreateOrConnectWithoutRessourceInput[]
    createMany?: DonneesRecommandationCreateManyRessourceInputEnvelope
    connect?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
  }

  export type TransactionBlockchainCreateNestedManyWithoutRessourceInput = {
    create?: XOR<TransactionBlockchainCreateWithoutRessourceInput, TransactionBlockchainUncheckedCreateWithoutRessourceInput> | TransactionBlockchainCreateWithoutRessourceInput[] | TransactionBlockchainUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: TransactionBlockchainCreateOrConnectWithoutRessourceInput | TransactionBlockchainCreateOrConnectWithoutRessourceInput[]
    createMany?: TransactionBlockchainCreateManyRessourceInputEnvelope
    connect?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutRessourceInput = {
    create?: XOR<NotificationCreateWithoutRessourceInput, NotificationUncheckedCreateWithoutRessourceInput> | NotificationCreateWithoutRessourceInput[] | NotificationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRessourceInput | NotificationCreateOrConnectWithoutRessourceInput[]
    createMany?: NotificationCreateManyRessourceInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type FavoriUncheckedCreateNestedManyWithoutRessourceInput = {
    create?: XOR<FavoriCreateWithoutRessourceInput, FavoriUncheckedCreateWithoutRessourceInput> | FavoriCreateWithoutRessourceInput[] | FavoriUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: FavoriCreateOrConnectWithoutRessourceInput | FavoriCreateOrConnectWithoutRessourceInput[]
    createMany?: FavoriCreateManyRessourceInputEnvelope
    connect?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
  }

  export type CommentaireUncheckedCreateNestedManyWithoutRessourceInput = {
    create?: XOR<CommentaireCreateWithoutRessourceInput, CommentaireUncheckedCreateWithoutRessourceInput> | CommentaireCreateWithoutRessourceInput[] | CommentaireUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: CommentaireCreateOrConnectWithoutRessourceInput | CommentaireCreateOrConnectWithoutRessourceInput[]
    createMany?: CommentaireCreateManyRessourceInputEnvelope
    connect?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
  }

  export type NotationUncheckedCreateNestedManyWithoutRessourceInput = {
    create?: XOR<NotationCreateWithoutRessourceInput, NotationUncheckedCreateWithoutRessourceInput> | NotationCreateWithoutRessourceInput[] | NotationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: NotationCreateOrConnectWithoutRessourceInput | NotationCreateOrConnectWithoutRessourceInput[]
    createMany?: NotationCreateManyRessourceInputEnvelope
    connect?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
  }

  export type HistoriqueAccesUncheckedCreateNestedManyWithoutRessourceInput = {
    create?: XOR<HistoriqueAccesCreateWithoutRessourceInput, HistoriqueAccesUncheckedCreateWithoutRessourceInput> | HistoriqueAccesCreateWithoutRessourceInput[] | HistoriqueAccesUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: HistoriqueAccesCreateOrConnectWithoutRessourceInput | HistoriqueAccesCreateOrConnectWithoutRessourceInput[]
    createMany?: HistoriqueAccesCreateManyRessourceInputEnvelope
    connect?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
  }

  export type CollectionRessourceUncheckedCreateNestedManyWithoutRessourceInput = {
    create?: XOR<CollectionRessourceCreateWithoutRessourceInput, CollectionRessourceUncheckedCreateWithoutRessourceInput> | CollectionRessourceCreateWithoutRessourceInput[] | CollectionRessourceUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: CollectionRessourceCreateOrConnectWithoutRessourceInput | CollectionRessourceCreateOrConnectWithoutRessourceInput[]
    createMany?: CollectionRessourceCreateManyRessourceInputEnvelope
    connect?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
  }

  export type PartageUniversiteUncheckedCreateNestedManyWithoutRessourceInput = {
    create?: XOR<PartageUniversiteCreateWithoutRessourceInput, PartageUniversiteUncheckedCreateWithoutRessourceInput> | PartageUniversiteCreateWithoutRessourceInput[] | PartageUniversiteUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: PartageUniversiteCreateOrConnectWithoutRessourceInput | PartageUniversiteCreateOrConnectWithoutRessourceInput[]
    createMany?: PartageUniversiteCreateManyRessourceInputEnvelope
    connect?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
  }

  export type ExemplairePhysiqueUncheckedCreateNestedManyWithoutRessourceInput = {
    create?: XOR<ExemplairePhysiqueCreateWithoutRessourceInput, ExemplairePhysiqueUncheckedCreateWithoutRessourceInput> | ExemplairePhysiqueCreateWithoutRessourceInput[] | ExemplairePhysiqueUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: ExemplairePhysiqueCreateOrConnectWithoutRessourceInput | ExemplairePhysiqueCreateOrConnectWithoutRessourceInput[]
    createMany?: ExemplairePhysiqueCreateManyRessourceInputEnvelope
    connect?: ExemplairePhysiqueWhereUniqueInput | ExemplairePhysiqueWhereUniqueInput[]
  }

  export type ReservationUncheckedCreateNestedManyWithoutRessourceInput = {
    create?: XOR<ReservationCreateWithoutRessourceInput, ReservationUncheckedCreateWithoutRessourceInput> | ReservationCreateWithoutRessourceInput[] | ReservationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutRessourceInput | ReservationCreateOrConnectWithoutRessourceInput[]
    createMany?: ReservationCreateManyRessourceInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type RecommandationUncheckedCreateNestedManyWithoutRessourceInput = {
    create?: XOR<RecommandationCreateWithoutRessourceInput, RecommandationUncheckedCreateWithoutRessourceInput> | RecommandationCreateWithoutRessourceInput[] | RecommandationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: RecommandationCreateOrConnectWithoutRessourceInput | RecommandationCreateOrConnectWithoutRessourceInput[]
    createMany?: RecommandationCreateManyRessourceInputEnvelope
    connect?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
  }

  export type DonneesRecommandationUncheckedCreateNestedManyWithoutRessourceInput = {
    create?: XOR<DonneesRecommandationCreateWithoutRessourceInput, DonneesRecommandationUncheckedCreateWithoutRessourceInput> | DonneesRecommandationCreateWithoutRessourceInput[] | DonneesRecommandationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: DonneesRecommandationCreateOrConnectWithoutRessourceInput | DonneesRecommandationCreateOrConnectWithoutRessourceInput[]
    createMany?: DonneesRecommandationCreateManyRessourceInputEnvelope
    connect?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
  }

  export type TransactionBlockchainUncheckedCreateNestedManyWithoutRessourceInput = {
    create?: XOR<TransactionBlockchainCreateWithoutRessourceInput, TransactionBlockchainUncheckedCreateWithoutRessourceInput> | TransactionBlockchainCreateWithoutRessourceInput[] | TransactionBlockchainUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: TransactionBlockchainCreateOrConnectWithoutRessourceInput | TransactionBlockchainCreateOrConnectWithoutRessourceInput[]
    createMany?: TransactionBlockchainCreateManyRessourceInputEnvelope
    connect?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutRessourceInput = {
    create?: XOR<NotificationCreateWithoutRessourceInput, NotificationUncheckedCreateWithoutRessourceInput> | NotificationCreateWithoutRessourceInput[] | NotificationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRessourceInput | NotificationCreateOrConnectWithoutRessourceInput[]
    createMany?: NotificationCreateManyRessourceInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type EnumTypeRessourceFieldUpdateOperationsInput = {
    set?: $Enums.TypeRessource
  }

  export type EnumNiveauAccesFieldUpdateOperationsInput = {
    set?: $Enums.NiveauAcces
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableEnumCategorieBiblioFieldUpdateOperationsInput = {
    set?: $Enums.CategorieBiblio | null
  }

  export type UserUpdateOneWithoutContributionsNestedInput = {
    create?: XOR<UserCreateWithoutContributionsInput, UserUncheckedCreateWithoutContributionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutContributionsInput
    upsert?: UserUpsertWithoutContributionsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutContributionsInput, UserUpdateWithoutContributionsInput>, UserUncheckedUpdateWithoutContributionsInput>
  }

  export type UniversiteUpdateOneRequiredWithoutRessourcesNestedInput = {
    create?: XOR<UniversiteCreateWithoutRessourcesInput, UniversiteUncheckedCreateWithoutRessourcesInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutRessourcesInput
    upsert?: UniversiteUpsertWithoutRessourcesInput
    connect?: UniversiteWhereUniqueInput
    update?: XOR<XOR<UniversiteUpdateToOneWithWhereWithoutRessourcesInput, UniversiteUpdateWithoutRessourcesInput>, UniversiteUncheckedUpdateWithoutRessourcesInput>
  }

  export type FavoriUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<FavoriCreateWithoutRessourceInput, FavoriUncheckedCreateWithoutRessourceInput> | FavoriCreateWithoutRessourceInput[] | FavoriUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: FavoriCreateOrConnectWithoutRessourceInput | FavoriCreateOrConnectWithoutRessourceInput[]
    upsert?: FavoriUpsertWithWhereUniqueWithoutRessourceInput | FavoriUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: FavoriCreateManyRessourceInputEnvelope
    set?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
    disconnect?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
    delete?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
    connect?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
    update?: FavoriUpdateWithWhereUniqueWithoutRessourceInput | FavoriUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: FavoriUpdateManyWithWhereWithoutRessourceInput | FavoriUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: FavoriScalarWhereInput | FavoriScalarWhereInput[]
  }

  export type CommentaireUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<CommentaireCreateWithoutRessourceInput, CommentaireUncheckedCreateWithoutRessourceInput> | CommentaireCreateWithoutRessourceInput[] | CommentaireUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: CommentaireCreateOrConnectWithoutRessourceInput | CommentaireCreateOrConnectWithoutRessourceInput[]
    upsert?: CommentaireUpsertWithWhereUniqueWithoutRessourceInput | CommentaireUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: CommentaireCreateManyRessourceInputEnvelope
    set?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
    disconnect?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
    delete?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
    connect?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
    update?: CommentaireUpdateWithWhereUniqueWithoutRessourceInput | CommentaireUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: CommentaireUpdateManyWithWhereWithoutRessourceInput | CommentaireUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: CommentaireScalarWhereInput | CommentaireScalarWhereInput[]
  }

  export type NotationUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<NotationCreateWithoutRessourceInput, NotationUncheckedCreateWithoutRessourceInput> | NotationCreateWithoutRessourceInput[] | NotationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: NotationCreateOrConnectWithoutRessourceInput | NotationCreateOrConnectWithoutRessourceInput[]
    upsert?: NotationUpsertWithWhereUniqueWithoutRessourceInput | NotationUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: NotationCreateManyRessourceInputEnvelope
    set?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
    disconnect?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
    delete?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
    connect?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
    update?: NotationUpdateWithWhereUniqueWithoutRessourceInput | NotationUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: NotationUpdateManyWithWhereWithoutRessourceInput | NotationUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: NotationScalarWhereInput | NotationScalarWhereInput[]
  }

  export type HistoriqueAccesUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<HistoriqueAccesCreateWithoutRessourceInput, HistoriqueAccesUncheckedCreateWithoutRessourceInput> | HistoriqueAccesCreateWithoutRessourceInput[] | HistoriqueAccesUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: HistoriqueAccesCreateOrConnectWithoutRessourceInput | HistoriqueAccesCreateOrConnectWithoutRessourceInput[]
    upsert?: HistoriqueAccesUpsertWithWhereUniqueWithoutRessourceInput | HistoriqueAccesUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: HistoriqueAccesCreateManyRessourceInputEnvelope
    set?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    disconnect?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    delete?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    connect?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    update?: HistoriqueAccesUpdateWithWhereUniqueWithoutRessourceInput | HistoriqueAccesUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: HistoriqueAccesUpdateManyWithWhereWithoutRessourceInput | HistoriqueAccesUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: HistoriqueAccesScalarWhereInput | HistoriqueAccesScalarWhereInput[]
  }

  export type CollectionRessourceUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<CollectionRessourceCreateWithoutRessourceInput, CollectionRessourceUncheckedCreateWithoutRessourceInput> | CollectionRessourceCreateWithoutRessourceInput[] | CollectionRessourceUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: CollectionRessourceCreateOrConnectWithoutRessourceInput | CollectionRessourceCreateOrConnectWithoutRessourceInput[]
    upsert?: CollectionRessourceUpsertWithWhereUniqueWithoutRessourceInput | CollectionRessourceUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: CollectionRessourceCreateManyRessourceInputEnvelope
    set?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
    disconnect?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
    delete?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
    connect?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
    update?: CollectionRessourceUpdateWithWhereUniqueWithoutRessourceInput | CollectionRessourceUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: CollectionRessourceUpdateManyWithWhereWithoutRessourceInput | CollectionRessourceUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: CollectionRessourceScalarWhereInput | CollectionRessourceScalarWhereInput[]
  }

  export type PartageUniversiteUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<PartageUniversiteCreateWithoutRessourceInput, PartageUniversiteUncheckedCreateWithoutRessourceInput> | PartageUniversiteCreateWithoutRessourceInput[] | PartageUniversiteUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: PartageUniversiteCreateOrConnectWithoutRessourceInput | PartageUniversiteCreateOrConnectWithoutRessourceInput[]
    upsert?: PartageUniversiteUpsertWithWhereUniqueWithoutRessourceInput | PartageUniversiteUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: PartageUniversiteCreateManyRessourceInputEnvelope
    set?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    disconnect?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    delete?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    connect?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    update?: PartageUniversiteUpdateWithWhereUniqueWithoutRessourceInput | PartageUniversiteUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: PartageUniversiteUpdateManyWithWhereWithoutRessourceInput | PartageUniversiteUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: PartageUniversiteScalarWhereInput | PartageUniversiteScalarWhereInput[]
  }

  export type ExemplairePhysiqueUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<ExemplairePhysiqueCreateWithoutRessourceInput, ExemplairePhysiqueUncheckedCreateWithoutRessourceInput> | ExemplairePhysiqueCreateWithoutRessourceInput[] | ExemplairePhysiqueUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: ExemplairePhysiqueCreateOrConnectWithoutRessourceInput | ExemplairePhysiqueCreateOrConnectWithoutRessourceInput[]
    upsert?: ExemplairePhysiqueUpsertWithWhereUniqueWithoutRessourceInput | ExemplairePhysiqueUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: ExemplairePhysiqueCreateManyRessourceInputEnvelope
    set?: ExemplairePhysiqueWhereUniqueInput | ExemplairePhysiqueWhereUniqueInput[]
    disconnect?: ExemplairePhysiqueWhereUniqueInput | ExemplairePhysiqueWhereUniqueInput[]
    delete?: ExemplairePhysiqueWhereUniqueInput | ExemplairePhysiqueWhereUniqueInput[]
    connect?: ExemplairePhysiqueWhereUniqueInput | ExemplairePhysiqueWhereUniqueInput[]
    update?: ExemplairePhysiqueUpdateWithWhereUniqueWithoutRessourceInput | ExemplairePhysiqueUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: ExemplairePhysiqueUpdateManyWithWhereWithoutRessourceInput | ExemplairePhysiqueUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: ExemplairePhysiqueScalarWhereInput | ExemplairePhysiqueScalarWhereInput[]
  }

  export type ReservationUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<ReservationCreateWithoutRessourceInput, ReservationUncheckedCreateWithoutRessourceInput> | ReservationCreateWithoutRessourceInput[] | ReservationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutRessourceInput | ReservationCreateOrConnectWithoutRessourceInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutRessourceInput | ReservationUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: ReservationCreateManyRessourceInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutRessourceInput | ReservationUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutRessourceInput | ReservationUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type RecommandationUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<RecommandationCreateWithoutRessourceInput, RecommandationUncheckedCreateWithoutRessourceInput> | RecommandationCreateWithoutRessourceInput[] | RecommandationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: RecommandationCreateOrConnectWithoutRessourceInput | RecommandationCreateOrConnectWithoutRessourceInput[]
    upsert?: RecommandationUpsertWithWhereUniqueWithoutRessourceInput | RecommandationUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: RecommandationCreateManyRessourceInputEnvelope
    set?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    disconnect?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    delete?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    connect?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    update?: RecommandationUpdateWithWhereUniqueWithoutRessourceInput | RecommandationUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: RecommandationUpdateManyWithWhereWithoutRessourceInput | RecommandationUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: RecommandationScalarWhereInput | RecommandationScalarWhereInput[]
  }

  export type DonneesRecommandationUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<DonneesRecommandationCreateWithoutRessourceInput, DonneesRecommandationUncheckedCreateWithoutRessourceInput> | DonneesRecommandationCreateWithoutRessourceInput[] | DonneesRecommandationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: DonneesRecommandationCreateOrConnectWithoutRessourceInput | DonneesRecommandationCreateOrConnectWithoutRessourceInput[]
    upsert?: DonneesRecommandationUpsertWithWhereUniqueWithoutRessourceInput | DonneesRecommandationUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: DonneesRecommandationCreateManyRessourceInputEnvelope
    set?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
    disconnect?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
    delete?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
    connect?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
    update?: DonneesRecommandationUpdateWithWhereUniqueWithoutRessourceInput | DonneesRecommandationUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: DonneesRecommandationUpdateManyWithWhereWithoutRessourceInput | DonneesRecommandationUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: DonneesRecommandationScalarWhereInput | DonneesRecommandationScalarWhereInput[]
  }

  export type TransactionBlockchainUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<TransactionBlockchainCreateWithoutRessourceInput, TransactionBlockchainUncheckedCreateWithoutRessourceInput> | TransactionBlockchainCreateWithoutRessourceInput[] | TransactionBlockchainUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: TransactionBlockchainCreateOrConnectWithoutRessourceInput | TransactionBlockchainCreateOrConnectWithoutRessourceInput[]
    upsert?: TransactionBlockchainUpsertWithWhereUniqueWithoutRessourceInput | TransactionBlockchainUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: TransactionBlockchainCreateManyRessourceInputEnvelope
    set?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    disconnect?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    delete?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    connect?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    update?: TransactionBlockchainUpdateWithWhereUniqueWithoutRessourceInput | TransactionBlockchainUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: TransactionBlockchainUpdateManyWithWhereWithoutRessourceInput | TransactionBlockchainUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: TransactionBlockchainScalarWhereInput | TransactionBlockchainScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<NotificationCreateWithoutRessourceInput, NotificationUncheckedCreateWithoutRessourceInput> | NotificationCreateWithoutRessourceInput[] | NotificationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRessourceInput | NotificationCreateOrConnectWithoutRessourceInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutRessourceInput | NotificationUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: NotificationCreateManyRessourceInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutRessourceInput | NotificationUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutRessourceInput | NotificationUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type FavoriUncheckedUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<FavoriCreateWithoutRessourceInput, FavoriUncheckedCreateWithoutRessourceInput> | FavoriCreateWithoutRessourceInput[] | FavoriUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: FavoriCreateOrConnectWithoutRessourceInput | FavoriCreateOrConnectWithoutRessourceInput[]
    upsert?: FavoriUpsertWithWhereUniqueWithoutRessourceInput | FavoriUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: FavoriCreateManyRessourceInputEnvelope
    set?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
    disconnect?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
    delete?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
    connect?: FavoriWhereUniqueInput | FavoriWhereUniqueInput[]
    update?: FavoriUpdateWithWhereUniqueWithoutRessourceInput | FavoriUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: FavoriUpdateManyWithWhereWithoutRessourceInput | FavoriUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: FavoriScalarWhereInput | FavoriScalarWhereInput[]
  }

  export type CommentaireUncheckedUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<CommentaireCreateWithoutRessourceInput, CommentaireUncheckedCreateWithoutRessourceInput> | CommentaireCreateWithoutRessourceInput[] | CommentaireUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: CommentaireCreateOrConnectWithoutRessourceInput | CommentaireCreateOrConnectWithoutRessourceInput[]
    upsert?: CommentaireUpsertWithWhereUniqueWithoutRessourceInput | CommentaireUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: CommentaireCreateManyRessourceInputEnvelope
    set?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
    disconnect?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
    delete?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
    connect?: CommentaireWhereUniqueInput | CommentaireWhereUniqueInput[]
    update?: CommentaireUpdateWithWhereUniqueWithoutRessourceInput | CommentaireUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: CommentaireUpdateManyWithWhereWithoutRessourceInput | CommentaireUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: CommentaireScalarWhereInput | CommentaireScalarWhereInput[]
  }

  export type NotationUncheckedUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<NotationCreateWithoutRessourceInput, NotationUncheckedCreateWithoutRessourceInput> | NotationCreateWithoutRessourceInput[] | NotationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: NotationCreateOrConnectWithoutRessourceInput | NotationCreateOrConnectWithoutRessourceInput[]
    upsert?: NotationUpsertWithWhereUniqueWithoutRessourceInput | NotationUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: NotationCreateManyRessourceInputEnvelope
    set?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
    disconnect?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
    delete?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
    connect?: NotationWhereUniqueInput | NotationWhereUniqueInput[]
    update?: NotationUpdateWithWhereUniqueWithoutRessourceInput | NotationUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: NotationUpdateManyWithWhereWithoutRessourceInput | NotationUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: NotationScalarWhereInput | NotationScalarWhereInput[]
  }

  export type HistoriqueAccesUncheckedUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<HistoriqueAccesCreateWithoutRessourceInput, HistoriqueAccesUncheckedCreateWithoutRessourceInput> | HistoriqueAccesCreateWithoutRessourceInput[] | HistoriqueAccesUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: HistoriqueAccesCreateOrConnectWithoutRessourceInput | HistoriqueAccesCreateOrConnectWithoutRessourceInput[]
    upsert?: HistoriqueAccesUpsertWithWhereUniqueWithoutRessourceInput | HistoriqueAccesUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: HistoriqueAccesCreateManyRessourceInputEnvelope
    set?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    disconnect?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    delete?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    connect?: HistoriqueAccesWhereUniqueInput | HistoriqueAccesWhereUniqueInput[]
    update?: HistoriqueAccesUpdateWithWhereUniqueWithoutRessourceInput | HistoriqueAccesUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: HistoriqueAccesUpdateManyWithWhereWithoutRessourceInput | HistoriqueAccesUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: HistoriqueAccesScalarWhereInput | HistoriqueAccesScalarWhereInput[]
  }

  export type CollectionRessourceUncheckedUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<CollectionRessourceCreateWithoutRessourceInput, CollectionRessourceUncheckedCreateWithoutRessourceInput> | CollectionRessourceCreateWithoutRessourceInput[] | CollectionRessourceUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: CollectionRessourceCreateOrConnectWithoutRessourceInput | CollectionRessourceCreateOrConnectWithoutRessourceInput[]
    upsert?: CollectionRessourceUpsertWithWhereUniqueWithoutRessourceInput | CollectionRessourceUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: CollectionRessourceCreateManyRessourceInputEnvelope
    set?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
    disconnect?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
    delete?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
    connect?: CollectionRessourceWhereUniqueInput | CollectionRessourceWhereUniqueInput[]
    update?: CollectionRessourceUpdateWithWhereUniqueWithoutRessourceInput | CollectionRessourceUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: CollectionRessourceUpdateManyWithWhereWithoutRessourceInput | CollectionRessourceUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: CollectionRessourceScalarWhereInput | CollectionRessourceScalarWhereInput[]
  }

  export type PartageUniversiteUncheckedUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<PartageUniversiteCreateWithoutRessourceInput, PartageUniversiteUncheckedCreateWithoutRessourceInput> | PartageUniversiteCreateWithoutRessourceInput[] | PartageUniversiteUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: PartageUniversiteCreateOrConnectWithoutRessourceInput | PartageUniversiteCreateOrConnectWithoutRessourceInput[]
    upsert?: PartageUniversiteUpsertWithWhereUniqueWithoutRessourceInput | PartageUniversiteUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: PartageUniversiteCreateManyRessourceInputEnvelope
    set?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    disconnect?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    delete?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    connect?: PartageUniversiteWhereUniqueInput | PartageUniversiteWhereUniqueInput[]
    update?: PartageUniversiteUpdateWithWhereUniqueWithoutRessourceInput | PartageUniversiteUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: PartageUniversiteUpdateManyWithWhereWithoutRessourceInput | PartageUniversiteUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: PartageUniversiteScalarWhereInput | PartageUniversiteScalarWhereInput[]
  }

  export type ExemplairePhysiqueUncheckedUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<ExemplairePhysiqueCreateWithoutRessourceInput, ExemplairePhysiqueUncheckedCreateWithoutRessourceInput> | ExemplairePhysiqueCreateWithoutRessourceInput[] | ExemplairePhysiqueUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: ExemplairePhysiqueCreateOrConnectWithoutRessourceInput | ExemplairePhysiqueCreateOrConnectWithoutRessourceInput[]
    upsert?: ExemplairePhysiqueUpsertWithWhereUniqueWithoutRessourceInput | ExemplairePhysiqueUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: ExemplairePhysiqueCreateManyRessourceInputEnvelope
    set?: ExemplairePhysiqueWhereUniqueInput | ExemplairePhysiqueWhereUniqueInput[]
    disconnect?: ExemplairePhysiqueWhereUniqueInput | ExemplairePhysiqueWhereUniqueInput[]
    delete?: ExemplairePhysiqueWhereUniqueInput | ExemplairePhysiqueWhereUniqueInput[]
    connect?: ExemplairePhysiqueWhereUniqueInput | ExemplairePhysiqueWhereUniqueInput[]
    update?: ExemplairePhysiqueUpdateWithWhereUniqueWithoutRessourceInput | ExemplairePhysiqueUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: ExemplairePhysiqueUpdateManyWithWhereWithoutRessourceInput | ExemplairePhysiqueUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: ExemplairePhysiqueScalarWhereInput | ExemplairePhysiqueScalarWhereInput[]
  }

  export type ReservationUncheckedUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<ReservationCreateWithoutRessourceInput, ReservationUncheckedCreateWithoutRessourceInput> | ReservationCreateWithoutRessourceInput[] | ReservationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutRessourceInput | ReservationCreateOrConnectWithoutRessourceInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutRessourceInput | ReservationUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: ReservationCreateManyRessourceInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutRessourceInput | ReservationUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutRessourceInput | ReservationUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type RecommandationUncheckedUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<RecommandationCreateWithoutRessourceInput, RecommandationUncheckedCreateWithoutRessourceInput> | RecommandationCreateWithoutRessourceInput[] | RecommandationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: RecommandationCreateOrConnectWithoutRessourceInput | RecommandationCreateOrConnectWithoutRessourceInput[]
    upsert?: RecommandationUpsertWithWhereUniqueWithoutRessourceInput | RecommandationUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: RecommandationCreateManyRessourceInputEnvelope
    set?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    disconnect?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    delete?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    connect?: RecommandationWhereUniqueInput | RecommandationWhereUniqueInput[]
    update?: RecommandationUpdateWithWhereUniqueWithoutRessourceInput | RecommandationUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: RecommandationUpdateManyWithWhereWithoutRessourceInput | RecommandationUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: RecommandationScalarWhereInput | RecommandationScalarWhereInput[]
  }

  export type DonneesRecommandationUncheckedUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<DonneesRecommandationCreateWithoutRessourceInput, DonneesRecommandationUncheckedCreateWithoutRessourceInput> | DonneesRecommandationCreateWithoutRessourceInput[] | DonneesRecommandationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: DonneesRecommandationCreateOrConnectWithoutRessourceInput | DonneesRecommandationCreateOrConnectWithoutRessourceInput[]
    upsert?: DonneesRecommandationUpsertWithWhereUniqueWithoutRessourceInput | DonneesRecommandationUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: DonneesRecommandationCreateManyRessourceInputEnvelope
    set?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
    disconnect?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
    delete?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
    connect?: DonneesRecommandationWhereUniqueInput | DonneesRecommandationWhereUniqueInput[]
    update?: DonneesRecommandationUpdateWithWhereUniqueWithoutRessourceInput | DonneesRecommandationUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: DonneesRecommandationUpdateManyWithWhereWithoutRessourceInput | DonneesRecommandationUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: DonneesRecommandationScalarWhereInput | DonneesRecommandationScalarWhereInput[]
  }

  export type TransactionBlockchainUncheckedUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<TransactionBlockchainCreateWithoutRessourceInput, TransactionBlockchainUncheckedCreateWithoutRessourceInput> | TransactionBlockchainCreateWithoutRessourceInput[] | TransactionBlockchainUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: TransactionBlockchainCreateOrConnectWithoutRessourceInput | TransactionBlockchainCreateOrConnectWithoutRessourceInput[]
    upsert?: TransactionBlockchainUpsertWithWhereUniqueWithoutRessourceInput | TransactionBlockchainUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: TransactionBlockchainCreateManyRessourceInputEnvelope
    set?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    disconnect?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    delete?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    connect?: TransactionBlockchainWhereUniqueInput | TransactionBlockchainWhereUniqueInput[]
    update?: TransactionBlockchainUpdateWithWhereUniqueWithoutRessourceInput | TransactionBlockchainUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: TransactionBlockchainUpdateManyWithWhereWithoutRessourceInput | TransactionBlockchainUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: TransactionBlockchainScalarWhereInput | TransactionBlockchainScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutRessourceNestedInput = {
    create?: XOR<NotificationCreateWithoutRessourceInput, NotificationUncheckedCreateWithoutRessourceInput> | NotificationCreateWithoutRessourceInput[] | NotificationUncheckedCreateWithoutRessourceInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRessourceInput | NotificationCreateOrConnectWithoutRessourceInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutRessourceInput | NotificationUpsertWithWhereUniqueWithoutRessourceInput[]
    createMany?: NotificationCreateManyRessourceInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutRessourceInput | NotificationUpdateWithWhereUniqueWithoutRessourceInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutRessourceInput | NotificationUpdateManyWithWhereWithoutRessourceInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type UniversiteCreateNestedOneWithoutStatistiquesBibliothequeInput = {
    create?: XOR<UniversiteCreateWithoutStatistiquesBibliothequeInput, UniversiteUncheckedCreateWithoutStatistiquesBibliothequeInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutStatistiquesBibliothequeInput
    connect?: UniversiteWhereUniqueInput
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UniversiteUpdateOneRequiredWithoutStatistiquesBibliothequeNestedInput = {
    create?: XOR<UniversiteCreateWithoutStatistiquesBibliothequeInput, UniversiteUncheckedCreateWithoutStatistiquesBibliothequeInput>
    connectOrCreate?: UniversiteCreateOrConnectWithoutStatistiquesBibliothequeInput
    upsert?: UniversiteUpsertWithoutStatistiquesBibliothequeInput
    connect?: UniversiteWhereUniqueInput
    update?: XOR<XOR<UniversiteUpdateToOneWithWhereWithoutStatistiquesBibliothequeInput, UniversiteUpdateWithoutStatistiquesBibliothequeInput>, UniversiteUncheckedUpdateWithoutStatistiquesBibliothequeInput>
  }

  export type UserCreateNestedOneWithoutNotificationInput = {
    create?: XOR<UserCreateWithoutNotificationInput, UserUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationInput
    connect?: UserWhereUniqueInput
  }

  export type RessourceCreateNestedOneWithoutNotificationInput = {
    create?: XOR<RessourceCreateWithoutNotificationInput, RessourceUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutNotificationInput
    connect?: RessourceWhereUniqueInput
  }

  export type EnumTypeNotificationFieldUpdateOperationsInput = {
    set?: $Enums.TypeNotification
  }

  export type UserUpdateOneRequiredWithoutNotificationNestedInput = {
    create?: XOR<UserCreateWithoutNotificationInput, UserUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationInput
    upsert?: UserUpsertWithoutNotificationInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotificationInput, UserUpdateWithoutNotificationInput>, UserUncheckedUpdateWithoutNotificationInput>
  }

  export type RessourceUpdateOneWithoutNotificationNestedInput = {
    create?: XOR<RessourceCreateWithoutNotificationInput, RessourceUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: RessourceCreateOrConnectWithoutNotificationInput
    upsert?: RessourceUpsertWithoutNotificationInput
    disconnect?: RessourceWhereInput | boolean
    delete?: RessourceWhereInput | boolean
    connect?: RessourceWhereUniqueInput
    update?: XOR<XOR<RessourceUpdateToOneWithWhereWithoutNotificationInput, RessourceUpdateWithoutNotificationInput>, RessourceUncheckedUpdateWithoutNotificationInput>
  }

  export type UserCreateNestedOneWithoutJournalAuditInput = {
    create?: XOR<UserCreateWithoutJournalAuditInput, UserUncheckedCreateWithoutJournalAuditInput>
    connectOrCreate?: UserCreateOrConnectWithoutJournalAuditInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneWithoutJournalAuditNestedInput = {
    create?: XOR<UserCreateWithoutJournalAuditInput, UserUncheckedCreateWithoutJournalAuditInput>
    connectOrCreate?: UserCreateOrConnectWithoutJournalAuditInput
    upsert?: UserUpsertWithoutJournalAuditInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutJournalAuditInput, UserUpdateWithoutJournalAuditInput>, UserUncheckedUpdateWithoutJournalAuditInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedEnumTypeConventionFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeConvention | EnumTypeConventionFieldRefInput<$PrismaModel>
    in?: $Enums.TypeConvention[]
    notIn?: $Enums.TypeConvention[]
    not?: NestedEnumTypeConventionFilter<$PrismaModel> | $Enums.TypeConvention
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumTypeConventionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeConvention | EnumTypeConventionFieldRefInput<$PrismaModel>
    in?: $Enums.TypeConvention[]
    notIn?: $Enums.TypeConvention[]
    not?: NestedEnumTypeConventionWithAggregatesFilter<$PrismaModel> | $Enums.TypeConvention
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTypeConventionFilter<$PrismaModel>
    _max?: NestedEnumTypeConventionFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumStatutReservationFilter<$PrismaModel = never> = {
    equals?: $Enums.StatutReservation | EnumStatutReservationFieldRefInput<$PrismaModel>
    in?: $Enums.StatutReservation[]
    notIn?: $Enums.StatutReservation[]
    not?: NestedEnumStatutReservationFilter<$PrismaModel> | $Enums.StatutReservation
  }

  export type NestedEnumStatutReservationWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatutReservation | EnumStatutReservationFieldRefInput<$PrismaModel>
    in?: $Enums.StatutReservation[]
    notIn?: $Enums.StatutReservation[]
    not?: NestedEnumStatutReservationWithAggregatesFilter<$PrismaModel> | $Enums.StatutReservation
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatutReservationFilter<$PrismaModel>
    _max?: NestedEnumStatutReservationFilter<$PrismaModel>
  }

  export type NestedEnumEtatExemplaireFilter<$PrismaModel = never> = {
    equals?: $Enums.EtatExemplaire | EnumEtatExemplaireFieldRefInput<$PrismaModel>
    in?: $Enums.EtatExemplaire[]
    notIn?: $Enums.EtatExemplaire[]
    not?: NestedEnumEtatExemplaireFilter<$PrismaModel> | $Enums.EtatExemplaire
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedEnumEtatExemplaireWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EtatExemplaire | EnumEtatExemplaireFieldRefInput<$PrismaModel>
    in?: $Enums.EtatExemplaire[]
    notIn?: $Enums.EtatExemplaire[]
    not?: NestedEnumEtatExemplaireWithAggregatesFilter<$PrismaModel> | $Enums.EtatExemplaire
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEtatExemplaireFilter<$PrismaModel>
    _max?: NestedEnumEtatExemplaireFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumStatutEmpruntFilter<$PrismaModel = never> = {
    equals?: $Enums.StatutEmprunt | EnumStatutEmpruntFieldRefInput<$PrismaModel>
    in?: $Enums.StatutEmprunt[]
    notIn?: $Enums.StatutEmprunt[]
    not?: NestedEnumStatutEmpruntFilter<$PrismaModel> | $Enums.StatutEmprunt
  }

  export type NestedEnumStatutEmpruntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatutEmprunt | EnumStatutEmpruntFieldRefInput<$PrismaModel>
    in?: $Enums.StatutEmprunt[]
    notIn?: $Enums.StatutEmprunt[]
    not?: NestedEnumStatutEmpruntWithAggregatesFilter<$PrismaModel> | $Enums.StatutEmprunt
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatutEmpruntFilter<$PrismaModel>
    _max?: NestedEnumStatutEmpruntFilter<$PrismaModel>
  }

  export type NestedEnumMotifRecommandationFilter<$PrismaModel = never> = {
    equals?: $Enums.MotifRecommandation | EnumMotifRecommandationFieldRefInput<$PrismaModel>
    in?: $Enums.MotifRecommandation[]
    notIn?: $Enums.MotifRecommandation[]
    not?: NestedEnumMotifRecommandationFilter<$PrismaModel> | $Enums.MotifRecommandation
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumMotifRecommandationWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MotifRecommandation | EnumMotifRecommandationFieldRefInput<$PrismaModel>
    in?: $Enums.MotifRecommandation[]
    notIn?: $Enums.MotifRecommandation[]
    not?: NestedEnumMotifRecommandationWithAggregatesFilter<$PrismaModel> | $Enums.MotifRecommandation
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMotifRecommandationFilter<$PrismaModel>
    _max?: NestedEnumMotifRecommandationFilter<$PrismaModel>
  }

  export type NestedEnumRoleUserFilter<$PrismaModel = never> = {
    equals?: $Enums.RoleUser | EnumRoleUserFieldRefInput<$PrismaModel>
    in?: $Enums.RoleUser[]
    notIn?: $Enums.RoleUser[]
    not?: NestedEnumRoleUserFilter<$PrismaModel> | $Enums.RoleUser
  }

  export type NestedEnumFrequenceRecommandationFilter<$PrismaModel = never> = {
    equals?: $Enums.FrequenceRecommandation | EnumFrequenceRecommandationFieldRefInput<$PrismaModel>
    in?: $Enums.FrequenceRecommandation[]
    notIn?: $Enums.FrequenceRecommandation[]
    not?: NestedEnumFrequenceRecommandationFilter<$PrismaModel> | $Enums.FrequenceRecommandation
  }

  export type NestedEnumRoleUserWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RoleUser | EnumRoleUserFieldRefInput<$PrismaModel>
    in?: $Enums.RoleUser[]
    notIn?: $Enums.RoleUser[]
    not?: NestedEnumRoleUserWithAggregatesFilter<$PrismaModel> | $Enums.RoleUser
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleUserFilter<$PrismaModel>
    _max?: NestedEnumRoleUserFilter<$PrismaModel>
  }

  export type NestedEnumFrequenceRecommandationWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FrequenceRecommandation | EnumFrequenceRecommandationFieldRefInput<$PrismaModel>
    in?: $Enums.FrequenceRecommandation[]
    notIn?: $Enums.FrequenceRecommandation[]
    not?: NestedEnumFrequenceRecommandationWithAggregatesFilter<$PrismaModel> | $Enums.FrequenceRecommandation
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFrequenceRecommandationFilter<$PrismaModel>
    _max?: NestedEnumFrequenceRecommandationFilter<$PrismaModel>
  }

  export type NestedEnumTypeAccesFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeAcces | EnumTypeAccesFieldRefInput<$PrismaModel>
    in?: $Enums.TypeAcces[]
    notIn?: $Enums.TypeAcces[]
    not?: NestedEnumTypeAccesFilter<$PrismaModel> | $Enums.TypeAcces
  }

  export type NestedEnumTypeAccesWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeAcces | EnumTypeAccesFieldRefInput<$PrismaModel>
    in?: $Enums.TypeAcces[]
    notIn?: $Enums.TypeAcces[]
    not?: NestedEnumTypeAccesWithAggregatesFilter<$PrismaModel> | $Enums.TypeAcces
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTypeAccesFilter<$PrismaModel>
    _max?: NestedEnumTypeAccesFilter<$PrismaModel>
  }

  export type NestedEnumTypeInteractionFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeInteraction | EnumTypeInteractionFieldRefInput<$PrismaModel>
    in?: $Enums.TypeInteraction[]
    notIn?: $Enums.TypeInteraction[]
    not?: NestedEnumTypeInteractionFilter<$PrismaModel> | $Enums.TypeInteraction
  }

  export type NestedEnumTypeInteractionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeInteraction | EnumTypeInteractionFieldRefInput<$PrismaModel>
    in?: $Enums.TypeInteraction[]
    notIn?: $Enums.TypeInteraction[]
    not?: NestedEnumTypeInteractionWithAggregatesFilter<$PrismaModel> | $Enums.TypeInteraction
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTypeInteractionFilter<$PrismaModel>
    _max?: NestedEnumTypeInteractionFilter<$PrismaModel>
  }

  export type NestedEnumTypeTransactionFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeTransaction | EnumTypeTransactionFieldRefInput<$PrismaModel>
    in?: $Enums.TypeTransaction[]
    notIn?: $Enums.TypeTransaction[]
    not?: NestedEnumTypeTransactionFilter<$PrismaModel> | $Enums.TypeTransaction
  }

  export type NestedEnumStatutTransactionFilter<$PrismaModel = never> = {
    equals?: $Enums.StatutTransaction | EnumStatutTransactionFieldRefInput<$PrismaModel>
    in?: $Enums.StatutTransaction[]
    notIn?: $Enums.StatutTransaction[]
    not?: NestedEnumStatutTransactionFilter<$PrismaModel> | $Enums.StatutTransaction
  }

  export type NestedEnumTypeTransactionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeTransaction | EnumTypeTransactionFieldRefInput<$PrismaModel>
    in?: $Enums.TypeTransaction[]
    notIn?: $Enums.TypeTransaction[]
    not?: NestedEnumTypeTransactionWithAggregatesFilter<$PrismaModel> | $Enums.TypeTransaction
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTypeTransactionFilter<$PrismaModel>
    _max?: NestedEnumTypeTransactionFilter<$PrismaModel>
  }

  export type NestedEnumStatutTransactionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatutTransaction | EnumStatutTransactionFieldRefInput<$PrismaModel>
    in?: $Enums.StatutTransaction[]
    notIn?: $Enums.StatutTransaction[]
    not?: NestedEnumStatutTransactionWithAggregatesFilter<$PrismaModel> | $Enums.StatutTransaction
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatutTransactionFilter<$PrismaModel>
    _max?: NestedEnumStatutTransactionFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumTypeRessourceFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeRessource | EnumTypeRessourceFieldRefInput<$PrismaModel>
    in?: $Enums.TypeRessource[]
    notIn?: $Enums.TypeRessource[]
    not?: NestedEnumTypeRessourceFilter<$PrismaModel> | $Enums.TypeRessource
  }

  export type NestedEnumNiveauAccesFilter<$PrismaModel = never> = {
    equals?: $Enums.NiveauAcces | EnumNiveauAccesFieldRefInput<$PrismaModel>
    in?: $Enums.NiveauAcces[]
    notIn?: $Enums.NiveauAcces[]
    not?: NestedEnumNiveauAccesFilter<$PrismaModel> | $Enums.NiveauAcces
  }

  export type NestedEnumCategorieBiblioNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.CategorieBiblio | EnumCategorieBiblioFieldRefInput<$PrismaModel> | null
    in?: $Enums.CategorieBiblio[] | null
    notIn?: $Enums.CategorieBiblio[] | null
    not?: NestedEnumCategorieBiblioNullableFilter<$PrismaModel> | $Enums.CategorieBiblio | null
  }

  export type NestedEnumTypeRessourceWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeRessource | EnumTypeRessourceFieldRefInput<$PrismaModel>
    in?: $Enums.TypeRessource[]
    notIn?: $Enums.TypeRessource[]
    not?: NestedEnumTypeRessourceWithAggregatesFilter<$PrismaModel> | $Enums.TypeRessource
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTypeRessourceFilter<$PrismaModel>
    _max?: NestedEnumTypeRessourceFilter<$PrismaModel>
  }

  export type NestedEnumNiveauAccesWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NiveauAcces | EnumNiveauAccesFieldRefInput<$PrismaModel>
    in?: $Enums.NiveauAcces[]
    notIn?: $Enums.NiveauAcces[]
    not?: NestedEnumNiveauAccesWithAggregatesFilter<$PrismaModel> | $Enums.NiveauAcces
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNiveauAccesFilter<$PrismaModel>
    _max?: NestedEnumNiveauAccesFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumCategorieBiblioNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CategorieBiblio | EnumCategorieBiblioFieldRefInput<$PrismaModel> | null
    in?: $Enums.CategorieBiblio[] | null
    notIn?: $Enums.CategorieBiblio[] | null
    not?: NestedEnumCategorieBiblioNullableWithAggregatesFilter<$PrismaModel> | $Enums.CategorieBiblio | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumCategorieBiblioNullableFilter<$PrismaModel>
    _max?: NestedEnumCategorieBiblioNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumTypeNotificationFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeNotification | EnumTypeNotificationFieldRefInput<$PrismaModel>
    in?: $Enums.TypeNotification[]
    notIn?: $Enums.TypeNotification[]
    not?: NestedEnumTypeNotificationFilter<$PrismaModel> | $Enums.TypeNotification
  }

  export type NestedEnumTypeNotificationWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeNotification | EnumTypeNotificationFieldRefInput<$PrismaModel>
    in?: $Enums.TypeNotification[]
    notIn?: $Enums.TypeNotification[]
    not?: NestedEnumTypeNotificationWithAggregatesFilter<$PrismaModel> | $Enums.TypeNotification
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTypeNotificationFilter<$PrismaModel>
    _max?: NestedEnumTypeNotificationFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type UniversiteCreateWithoutConventionsSourceInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceCreateNestedManyWithoutUniversiteInput
    conventionsDestination?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteUncheckedCreateWithoutConventionsSourceInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserUncheckedCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceUncheckedCreateNestedManyWithoutUniversiteInput
    conventionsDestination?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesUncheckedCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteCreateOrConnectWithoutConventionsSourceInput = {
    where: UniversiteWhereUniqueInput
    create: XOR<UniversiteCreateWithoutConventionsSourceInput, UniversiteUncheckedCreateWithoutConventionsSourceInput>
  }

  export type UniversiteCreateWithoutConventionsDestinationInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite1Input
    statistiquesSource?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteUncheckedCreateWithoutConventionsDestinationInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserUncheckedCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceUncheckedCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite1Input
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesUncheckedCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteCreateOrConnectWithoutConventionsDestinationInput = {
    where: UniversiteWhereUniqueInput
    create: XOR<UniversiteCreateWithoutConventionsDestinationInput, UniversiteUncheckedCreateWithoutConventionsDestinationInput>
  }

  export type UniversiteUpsertWithoutConventionsSourceInput = {
    update: XOR<UniversiteUpdateWithoutConventionsSourceInput, UniversiteUncheckedUpdateWithoutConventionsSourceInput>
    create: XOR<UniversiteCreateWithoutConventionsSourceInput, UniversiteUncheckedCreateWithoutConventionsSourceInput>
    where?: UniversiteWhereInput
  }

  export type UniversiteUpdateToOneWithWhereWithoutConventionsSourceInput = {
    where?: UniversiteWhereInput
    data: XOR<UniversiteUpdateWithoutConventionsSourceInput, UniversiteUncheckedUpdateWithoutConventionsSourceInput>
  }

  export type UniversiteUpdateWithoutConventionsSourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUpdateManyWithoutUniversiteNestedInput
    conventionsDestination?: ConventionInteruniversitaireUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUncheckedUpdateWithoutConventionsSourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUncheckedUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUncheckedUpdateManyWithoutUniversiteNestedInput
    conventionsDestination?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUncheckedUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUpsertWithoutConventionsDestinationInput = {
    update: XOR<UniversiteUpdateWithoutConventionsDestinationInput, UniversiteUncheckedUpdateWithoutConventionsDestinationInput>
    create: XOR<UniversiteCreateWithoutConventionsDestinationInput, UniversiteUncheckedCreateWithoutConventionsDestinationInput>
    where?: UniversiteWhereInput
  }

  export type UniversiteUpdateToOneWithWhereWithoutConventionsDestinationInput = {
    where?: UniversiteWhereInput
    data: XOR<UniversiteUpdateWithoutConventionsDestinationInput, UniversiteUncheckedUpdateWithoutConventionsDestinationInput>
  }

  export type UniversiteUpdateWithoutConventionsDestinationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUpdateManyWithoutUniversite1NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUncheckedUpdateWithoutConventionsDestinationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUncheckedUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUncheckedUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite1NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUncheckedUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteCreateWithoutStatistiquesSourceInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite2Input
    statistiquesDestination?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteUncheckedCreateWithoutStatistiquesSourceInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserUncheckedCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceUncheckedCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite2Input
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesUncheckedCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteCreateOrConnectWithoutStatistiquesSourceInput = {
    where: UniversiteWhereUniqueInput
    create: XOR<UniversiteCreateWithoutStatistiquesSourceInput, UniversiteUncheckedCreateWithoutStatistiquesSourceInput>
  }

  export type UniversiteCreateWithoutStatistiquesDestinationInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteSourceRelInput
    reservations?: ReservationCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteUncheckedCreateWithoutStatistiquesDestinationInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserUncheckedCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceUncheckedCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesUncheckedCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteCreateOrConnectWithoutStatistiquesDestinationInput = {
    where: UniversiteWhereUniqueInput
    create: XOR<UniversiteCreateWithoutStatistiquesDestinationInput, UniversiteUncheckedCreateWithoutStatistiquesDestinationInput>
  }

  export type UniversiteUpsertWithoutStatistiquesSourceInput = {
    update: XOR<UniversiteUpdateWithoutStatistiquesSourceInput, UniversiteUncheckedUpdateWithoutStatistiquesSourceInput>
    create: XOR<UniversiteCreateWithoutStatistiquesSourceInput, UniversiteUncheckedCreateWithoutStatistiquesSourceInput>
    where?: UniversiteWhereInput
  }

  export type UniversiteUpdateToOneWithWhereWithoutStatistiquesSourceInput = {
    where?: UniversiteWhereInput
    data: XOR<UniversiteUpdateWithoutStatistiquesSourceInput, UniversiteUncheckedUpdateWithoutStatistiquesSourceInput>
  }

  export type UniversiteUpdateWithoutStatistiquesSourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUpdateManyWithoutUniversite2NestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUncheckedUpdateWithoutStatistiquesSourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUncheckedUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUncheckedUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite2NestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUncheckedUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUpsertWithoutStatistiquesDestinationInput = {
    update: XOR<UniversiteUpdateWithoutStatistiquesDestinationInput, UniversiteUncheckedUpdateWithoutStatistiquesDestinationInput>
    create: XOR<UniversiteCreateWithoutStatistiquesDestinationInput, UniversiteUncheckedCreateWithoutStatistiquesDestinationInput>
    where?: UniversiteWhereInput
  }

  export type UniversiteUpdateToOneWithWhereWithoutStatistiquesDestinationInput = {
    where?: UniversiteWhereInput
    data: XOR<UniversiteUpdateWithoutStatistiquesDestinationInput, UniversiteUncheckedUpdateWithoutStatistiquesDestinationInput>
  }

  export type UniversiteUpdateWithoutStatistiquesDestinationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteSourceRelNestedInput
    reservations?: ReservationUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUncheckedUpdateWithoutStatistiquesDestinationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUncheckedUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUncheckedUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUncheckedUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UserCreateWithoutReservationsInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    universite: UniversiteCreateNestedOneWithoutUsersInput
    contributions?: RessourceCreateNestedManyWithoutAuteurInput
    favoris?: FavoriCreateNestedManyWithoutUserInput
    commentaires?: CommentaireCreateNestedManyWithoutUserInput
    notations?: NotationCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutUserInput
    collections?: CollectionCreateNestedManyWithoutUserInput
    emprunts?: EmpruntCreateNestedManyWithoutUserInput
    recommandations?: RecommandationCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutReservationsInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    universiteId: string
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    contributions?: RessourceUncheckedCreateNestedManyWithoutAuteurInput
    favoris?: FavoriUncheckedCreateNestedManyWithoutUserInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutUserInput
    notations?: NotationUncheckedCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutUserInput
    collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUserInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditUncheckedCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReservationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReservationsInput, UserUncheckedCreateWithoutReservationsInput>
  }

  export type RessourceCreateWithoutReservationsInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    auteur?: UserCreateNestedOneWithoutContributionsInput
    universite: UniversiteCreateNestedOneWithoutRessourcesInput
    favoris?: FavoriCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireCreateNestedManyWithoutRessourceInput
    notations?: NotationCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainCreateNestedManyWithoutRessourceInput
    Notification?: NotificationCreateNestedManyWithoutRessourceInput
  }

  export type RessourceUncheckedCreateWithoutReservationsInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    auteurId?: string | null
    universiteId: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    favoris?: FavoriUncheckedCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutRessourceInput
    notations?: NotationUncheckedCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceUncheckedCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteUncheckedCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueUncheckedCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainUncheckedCreateNestedManyWithoutRessourceInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutRessourceInput
  }

  export type RessourceCreateOrConnectWithoutReservationsInput = {
    where: RessourceWhereUniqueInput
    create: XOR<RessourceCreateWithoutReservationsInput, RessourceUncheckedCreateWithoutReservationsInput>
  }

  export type UniversiteCreateWithoutReservationsInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteDestinationRelInput
    emprunts?: EmpruntCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteUncheckedCreateWithoutReservationsInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserUncheckedCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceUncheckedCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesUncheckedCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteCreateOrConnectWithoutReservationsInput = {
    where: UniversiteWhereUniqueInput
    create: XOR<UniversiteCreateWithoutReservationsInput, UniversiteUncheckedCreateWithoutReservationsInput>
  }

  export type UserUpsertWithoutReservationsInput = {
    update: XOR<UserUpdateWithoutReservationsInput, UserUncheckedUpdateWithoutReservationsInput>
    create: XOR<UserCreateWithoutReservationsInput, UserUncheckedCreateWithoutReservationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReservationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReservationsInput, UserUncheckedUpdateWithoutReservationsInput>
  }

  export type UserUpdateWithoutReservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universite?: UniversiteUpdateOneRequiredWithoutUsersNestedInput
    contributions?: RessourceUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUpdateManyWithoutUserNestedInput
    notations?: NotationUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutUserNestedInput
    collections?: CollectionUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUpdateManyWithoutUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutReservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    universiteId?: StringFieldUpdateOperationsInput | string
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contributions?: RessourceUncheckedUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUncheckedUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutUserNestedInput
    notations?: NotationUncheckedUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutUserNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUncheckedUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type RessourceUpsertWithoutReservationsInput = {
    update: XOR<RessourceUpdateWithoutReservationsInput, RessourceUncheckedUpdateWithoutReservationsInput>
    create: XOR<RessourceCreateWithoutReservationsInput, RessourceUncheckedCreateWithoutReservationsInput>
    where?: RessourceWhereInput
  }

  export type RessourceUpdateToOneWithWhereWithoutReservationsInput = {
    where?: RessourceWhereInput
    data: XOR<RessourceUpdateWithoutReservationsInput, RessourceUncheckedUpdateWithoutReservationsInput>
  }

  export type RessourceUpdateWithoutReservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    auteur?: UserUpdateOneWithoutContributionsNestedInput
    universite?: UniversiteUpdateOneRequiredWithoutRessourcesNestedInput
    favoris?: FavoriUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUpdateManyWithoutRessourceNestedInput
    notations?: NotationUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceUncheckedUpdateWithoutReservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    auteurId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteId?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    favoris?: FavoriUncheckedUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutRessourceNestedInput
    notations?: NotationUncheckedUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUncheckedUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUncheckedUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUncheckedUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUncheckedUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutRessourceNestedInput
  }

  export type UniversiteUpsertWithoutReservationsInput = {
    update: XOR<UniversiteUpdateWithoutReservationsInput, UniversiteUncheckedUpdateWithoutReservationsInput>
    create: XOR<UniversiteCreateWithoutReservationsInput, UniversiteUncheckedCreateWithoutReservationsInput>
    where?: UniversiteWhereInput
  }

  export type UniversiteUpdateToOneWithWhereWithoutReservationsInput = {
    where?: UniversiteWhereInput
    data: XOR<UniversiteUpdateWithoutReservationsInput, UniversiteUncheckedUpdateWithoutReservationsInput>
  }

  export type UniversiteUpdateWithoutReservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteDestinationRelNestedInput
    emprunts?: EmpruntUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUncheckedUpdateWithoutReservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUncheckedUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUncheckedUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUncheckedUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type RessourceCreateWithoutExemplairesInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    auteur?: UserCreateNestedOneWithoutContributionsInput
    universite: UniversiteCreateNestedOneWithoutRessourcesInput
    favoris?: FavoriCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireCreateNestedManyWithoutRessourceInput
    notations?: NotationCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteCreateNestedManyWithoutRessourceInput
    reservations?: ReservationCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainCreateNestedManyWithoutRessourceInput
    Notification?: NotificationCreateNestedManyWithoutRessourceInput
  }

  export type RessourceUncheckedCreateWithoutExemplairesInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    auteurId?: string | null
    universiteId: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    favoris?: FavoriUncheckedCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutRessourceInput
    notations?: NotationUncheckedCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceUncheckedCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteUncheckedCreateNestedManyWithoutRessourceInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainUncheckedCreateNestedManyWithoutRessourceInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutRessourceInput
  }

  export type RessourceCreateOrConnectWithoutExemplairesInput = {
    where: RessourceWhereUniqueInput
    create: XOR<RessourceCreateWithoutExemplairesInput, RessourceUncheckedCreateWithoutExemplairesInput>
  }

  export type EmpruntCreateWithoutExemplaireInput = {
    id?: string
    dateEmprunt?: Date | string
    dateRetourPrevue: Date | string
    dateRetourEffective?: Date | string | null
    statut?: $Enums.StatutEmprunt
    commentaire?: string | null
    estEmpruntExterne?: boolean
    motifEmprunt?: string | null
    validePar?: string | null
    user: UserCreateNestedOneWithoutEmpruntsInput
    universiteEmprunteurRel: UniversiteCreateNestedOneWithoutEmpruntsInput
  }

  export type EmpruntUncheckedCreateWithoutExemplaireInput = {
    id?: string
    userId: string
    dateEmprunt?: Date | string
    dateRetourPrevue: Date | string
    dateRetourEffective?: Date | string | null
    statut?: $Enums.StatutEmprunt
    commentaire?: string | null
    universiteEmprunteur: string
    estEmpruntExterne?: boolean
    motifEmprunt?: string | null
    validePar?: string | null
  }

  export type EmpruntCreateOrConnectWithoutExemplaireInput = {
    where: EmpruntWhereUniqueInput
    create: XOR<EmpruntCreateWithoutExemplaireInput, EmpruntUncheckedCreateWithoutExemplaireInput>
  }

  export type EmpruntCreateManyExemplaireInputEnvelope = {
    data: EmpruntCreateManyExemplaireInput | EmpruntCreateManyExemplaireInput[]
    skipDuplicates?: boolean
  }

  export type RessourceUpsertWithoutExemplairesInput = {
    update: XOR<RessourceUpdateWithoutExemplairesInput, RessourceUncheckedUpdateWithoutExemplairesInput>
    create: XOR<RessourceCreateWithoutExemplairesInput, RessourceUncheckedCreateWithoutExemplairesInput>
    where?: RessourceWhereInput
  }

  export type RessourceUpdateToOneWithWhereWithoutExemplairesInput = {
    where?: RessourceWhereInput
    data: XOR<RessourceUpdateWithoutExemplairesInput, RessourceUncheckedUpdateWithoutExemplairesInput>
  }

  export type RessourceUpdateWithoutExemplairesInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    auteur?: UserUpdateOneWithoutContributionsNestedInput
    universite?: UniversiteUpdateOneRequiredWithoutRessourcesNestedInput
    favoris?: FavoriUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUpdateManyWithoutRessourceNestedInput
    notations?: NotationUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceUncheckedUpdateWithoutExemplairesInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    auteurId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteId?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    favoris?: FavoriUncheckedUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutRessourceNestedInput
    notations?: NotationUncheckedUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUncheckedUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUncheckedUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUncheckedUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutRessourceNestedInput
  }

  export type EmpruntUpsertWithWhereUniqueWithoutExemplaireInput = {
    where: EmpruntWhereUniqueInput
    update: XOR<EmpruntUpdateWithoutExemplaireInput, EmpruntUncheckedUpdateWithoutExemplaireInput>
    create: XOR<EmpruntCreateWithoutExemplaireInput, EmpruntUncheckedCreateWithoutExemplaireInput>
  }

  export type EmpruntUpdateWithWhereUniqueWithoutExemplaireInput = {
    where: EmpruntWhereUniqueInput
    data: XOR<EmpruntUpdateWithoutExemplaireInput, EmpruntUncheckedUpdateWithoutExemplaireInput>
  }

  export type EmpruntUpdateManyWithWhereWithoutExemplaireInput = {
    where: EmpruntScalarWhereInput
    data: XOR<EmpruntUpdateManyMutationInput, EmpruntUncheckedUpdateManyWithoutExemplaireInput>
  }

  export type EmpruntScalarWhereInput = {
    AND?: EmpruntScalarWhereInput | EmpruntScalarWhereInput[]
    OR?: EmpruntScalarWhereInput[]
    NOT?: EmpruntScalarWhereInput | EmpruntScalarWhereInput[]
    id?: StringFilter<"Emprunt"> | string
    exemplaireId?: StringFilter<"Emprunt"> | string
    userId?: StringFilter<"Emprunt"> | string
    dateEmprunt?: DateTimeFilter<"Emprunt"> | Date | string
    dateRetourPrevue?: DateTimeFilter<"Emprunt"> | Date | string
    dateRetourEffective?: DateTimeNullableFilter<"Emprunt"> | Date | string | null
    statut?: EnumStatutEmpruntFilter<"Emprunt"> | $Enums.StatutEmprunt
    commentaire?: StringNullableFilter<"Emprunt"> | string | null
    universiteEmprunteur?: StringFilter<"Emprunt"> | string
    estEmpruntExterne?: BoolFilter<"Emprunt"> | boolean
    motifEmprunt?: StringNullableFilter<"Emprunt"> | string | null
    validePar?: StringNullableFilter<"Emprunt"> | string | null
  }

  export type ExemplairePhysiqueCreateWithoutEmpruntsInput = {
    id?: string
    cote: string
    etat?: $Enums.EtatExemplaire
    disponible?: boolean
    localisation: string
    dateAcquisition?: Date | string | null
    estReservableExterne?: boolean | null
    estEmpruntableExterne?: boolean | null
    ressource: RessourceCreateNestedOneWithoutExemplairesInput
  }

  export type ExemplairePhysiqueUncheckedCreateWithoutEmpruntsInput = {
    id?: string
    ressourceId: string
    cote: string
    etat?: $Enums.EtatExemplaire
    disponible?: boolean
    localisation: string
    dateAcquisition?: Date | string | null
    estReservableExterne?: boolean | null
    estEmpruntableExterne?: boolean | null
  }

  export type ExemplairePhysiqueCreateOrConnectWithoutEmpruntsInput = {
    where: ExemplairePhysiqueWhereUniqueInput
    create: XOR<ExemplairePhysiqueCreateWithoutEmpruntsInput, ExemplairePhysiqueUncheckedCreateWithoutEmpruntsInput>
  }

  export type UserCreateWithoutEmpruntsInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    universite: UniversiteCreateNestedOneWithoutUsersInput
    contributions?: RessourceCreateNestedManyWithoutAuteurInput
    favoris?: FavoriCreateNestedManyWithoutUserInput
    commentaires?: CommentaireCreateNestedManyWithoutUserInput
    notations?: NotationCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutUserInput
    collections?: CollectionCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
    recommandations?: RecommandationCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutEmpruntsInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    universiteId: string
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    contributions?: RessourceUncheckedCreateNestedManyWithoutAuteurInput
    favoris?: FavoriUncheckedCreateNestedManyWithoutUserInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutUserInput
    notations?: NotationUncheckedCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutUserInput
    collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditUncheckedCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutEmpruntsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEmpruntsInput, UserUncheckedCreateWithoutEmpruntsInput>
  }

  export type UniversiteCreateWithoutEmpruntsInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteUncheckedCreateWithoutEmpruntsInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserUncheckedCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceUncheckedCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesUncheckedCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteCreateOrConnectWithoutEmpruntsInput = {
    where: UniversiteWhereUniqueInput
    create: XOR<UniversiteCreateWithoutEmpruntsInput, UniversiteUncheckedCreateWithoutEmpruntsInput>
  }

  export type ExemplairePhysiqueUpsertWithoutEmpruntsInput = {
    update: XOR<ExemplairePhysiqueUpdateWithoutEmpruntsInput, ExemplairePhysiqueUncheckedUpdateWithoutEmpruntsInput>
    create: XOR<ExemplairePhysiqueCreateWithoutEmpruntsInput, ExemplairePhysiqueUncheckedCreateWithoutEmpruntsInput>
    where?: ExemplairePhysiqueWhereInput
  }

  export type ExemplairePhysiqueUpdateToOneWithWhereWithoutEmpruntsInput = {
    where?: ExemplairePhysiqueWhereInput
    data: XOR<ExemplairePhysiqueUpdateWithoutEmpruntsInput, ExemplairePhysiqueUncheckedUpdateWithoutEmpruntsInput>
  }

  export type ExemplairePhysiqueUpdateWithoutEmpruntsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cote?: StringFieldUpdateOperationsInput | string
    etat?: EnumEtatExemplaireFieldUpdateOperationsInput | $Enums.EtatExemplaire
    disponible?: BoolFieldUpdateOperationsInput | boolean
    localisation?: StringFieldUpdateOperationsInput | string
    dateAcquisition?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estReservableExterne?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estEmpruntableExterne?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ressource?: RessourceUpdateOneRequiredWithoutExemplairesNestedInput
  }

  export type ExemplairePhysiqueUncheckedUpdateWithoutEmpruntsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    cote?: StringFieldUpdateOperationsInput | string
    etat?: EnumEtatExemplaireFieldUpdateOperationsInput | $Enums.EtatExemplaire
    disponible?: BoolFieldUpdateOperationsInput | boolean
    localisation?: StringFieldUpdateOperationsInput | string
    dateAcquisition?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estReservableExterne?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estEmpruntableExterne?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UserUpsertWithoutEmpruntsInput = {
    update: XOR<UserUpdateWithoutEmpruntsInput, UserUncheckedUpdateWithoutEmpruntsInput>
    create: XOR<UserCreateWithoutEmpruntsInput, UserUncheckedCreateWithoutEmpruntsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutEmpruntsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutEmpruntsInput, UserUncheckedUpdateWithoutEmpruntsInput>
  }

  export type UserUpdateWithoutEmpruntsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universite?: UniversiteUpdateOneRequiredWithoutUsersNestedInput
    contributions?: RessourceUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUpdateManyWithoutUserNestedInput
    notations?: NotationUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutUserNestedInput
    collections?: CollectionUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUpdateManyWithoutUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutEmpruntsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    universiteId?: StringFieldUpdateOperationsInput | string
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contributions?: RessourceUncheckedUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUncheckedUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutUserNestedInput
    notations?: NotationUncheckedUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutUserNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUncheckedUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UniversiteUpsertWithoutEmpruntsInput = {
    update: XOR<UniversiteUpdateWithoutEmpruntsInput, UniversiteUncheckedUpdateWithoutEmpruntsInput>
    create: XOR<UniversiteCreateWithoutEmpruntsInput, UniversiteUncheckedCreateWithoutEmpruntsInput>
    where?: UniversiteWhereInput
  }

  export type UniversiteUpdateToOneWithWhereWithoutEmpruntsInput = {
    where?: UniversiteWhereInput
    data: XOR<UniversiteUpdateWithoutEmpruntsInput, UniversiteUncheckedUpdateWithoutEmpruntsInput>
  }

  export type UniversiteUpdateWithoutEmpruntsInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUncheckedUpdateWithoutEmpruntsInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUncheckedUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUncheckedUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUncheckedUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UserCreateWithoutRecommandationsInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    universite: UniversiteCreateNestedOneWithoutUsersInput
    contributions?: RessourceCreateNestedManyWithoutAuteurInput
    favoris?: FavoriCreateNestedManyWithoutUserInput
    commentaires?: CommentaireCreateNestedManyWithoutUserInput
    notations?: NotationCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutUserInput
    collections?: CollectionCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
    emprunts?: EmpruntCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutRecommandationsInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    universiteId: string
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    contributions?: RessourceUncheckedCreateNestedManyWithoutAuteurInput
    favoris?: FavoriUncheckedCreateNestedManyWithoutUserInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutUserInput
    notations?: NotationUncheckedCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutUserInput
    collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditUncheckedCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutRecommandationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRecommandationsInput, UserUncheckedCreateWithoutRecommandationsInput>
  }

  export type RessourceCreateWithoutRecommandationsInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    auteur?: UserCreateNestedOneWithoutContributionsInput
    universite: UniversiteCreateNestedOneWithoutRessourcesInput
    favoris?: FavoriCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireCreateNestedManyWithoutRessourceInput
    notations?: NotationCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueCreateNestedManyWithoutRessourceInput
    reservations?: ReservationCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainCreateNestedManyWithoutRessourceInput
    Notification?: NotificationCreateNestedManyWithoutRessourceInput
  }

  export type RessourceUncheckedCreateWithoutRecommandationsInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    auteurId?: string | null
    universiteId: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    favoris?: FavoriUncheckedCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutRessourceInput
    notations?: NotationUncheckedCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceUncheckedCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteUncheckedCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueUncheckedCreateNestedManyWithoutRessourceInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainUncheckedCreateNestedManyWithoutRessourceInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutRessourceInput
  }

  export type RessourceCreateOrConnectWithoutRecommandationsInput = {
    where: RessourceWhereUniqueInput
    create: XOR<RessourceCreateWithoutRecommandationsInput, RessourceUncheckedCreateWithoutRecommandationsInput>
  }

  export type UniversiteCreateWithoutRecommandationsSourceInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntCreateNestedManyWithoutUniversiteEmprunteurRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteUncheckedCreateWithoutRecommandationsSourceInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserUncheckedCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceUncheckedCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesUncheckedCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteCreateOrConnectWithoutRecommandationsSourceInput = {
    where: UniversiteWhereUniqueInput
    create: XOR<UniversiteCreateWithoutRecommandationsSourceInput, UniversiteUncheckedCreateWithoutRecommandationsSourceInput>
  }

  export type UserUpsertWithoutRecommandationsInput = {
    update: XOR<UserUpdateWithoutRecommandationsInput, UserUncheckedUpdateWithoutRecommandationsInput>
    create: XOR<UserCreateWithoutRecommandationsInput, UserUncheckedCreateWithoutRecommandationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRecommandationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRecommandationsInput, UserUncheckedUpdateWithoutRecommandationsInput>
  }

  export type UserUpdateWithoutRecommandationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universite?: UniversiteUpdateOneRequiredWithoutUsersNestedInput
    contributions?: RessourceUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUpdateManyWithoutUserNestedInput
    notations?: NotationUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutUserNestedInput
    collections?: CollectionUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUpdateManyWithoutUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutRecommandationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    universiteId?: StringFieldUpdateOperationsInput | string
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contributions?: RessourceUncheckedUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUncheckedUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutUserNestedInput
    notations?: NotationUncheckedUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutUserNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUncheckedUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type RessourceUpsertWithoutRecommandationsInput = {
    update: XOR<RessourceUpdateWithoutRecommandationsInput, RessourceUncheckedUpdateWithoutRecommandationsInput>
    create: XOR<RessourceCreateWithoutRecommandationsInput, RessourceUncheckedCreateWithoutRecommandationsInput>
    where?: RessourceWhereInput
  }

  export type RessourceUpdateToOneWithWhereWithoutRecommandationsInput = {
    where?: RessourceWhereInput
    data: XOR<RessourceUpdateWithoutRecommandationsInput, RessourceUncheckedUpdateWithoutRecommandationsInput>
  }

  export type RessourceUpdateWithoutRecommandationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    auteur?: UserUpdateOneWithoutContributionsNestedInput
    universite?: UniversiteUpdateOneRequiredWithoutRessourcesNestedInput
    favoris?: FavoriUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUpdateManyWithoutRessourceNestedInput
    notations?: NotationUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceUncheckedUpdateWithoutRecommandationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    auteurId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteId?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    favoris?: FavoriUncheckedUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutRessourceNestedInput
    notations?: NotationUncheckedUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUncheckedUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUncheckedUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUncheckedUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUncheckedUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutRessourceNestedInput
  }

  export type UniversiteUpsertWithoutRecommandationsSourceInput = {
    update: XOR<UniversiteUpdateWithoutRecommandationsSourceInput, UniversiteUncheckedUpdateWithoutRecommandationsSourceInput>
    create: XOR<UniversiteCreateWithoutRecommandationsSourceInput, UniversiteUncheckedCreateWithoutRecommandationsSourceInput>
    where?: UniversiteWhereInput
  }

  export type UniversiteUpdateToOneWithWhereWithoutRecommandationsSourceInput = {
    where?: UniversiteWhereInput
    data: XOR<UniversiteUpdateWithoutRecommandationsSourceInput, UniversiteUncheckedUpdateWithoutRecommandationsSourceInput>
  }

  export type UniversiteUpdateWithoutRecommandationsSourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUncheckedUpdateWithoutRecommandationsSourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUncheckedUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUncheckedUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUncheckedUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UserCreateWithoutUniversiteInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    contributions?: RessourceCreateNestedManyWithoutAuteurInput
    favoris?: FavoriCreateNestedManyWithoutUserInput
    commentaires?: CommentaireCreateNestedManyWithoutUserInput
    notations?: NotationCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutUserInput
    collections?: CollectionCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
    emprunts?: EmpruntCreateNestedManyWithoutUserInput
    recommandations?: RecommandationCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUniversiteInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    contributions?: RessourceUncheckedCreateNestedManyWithoutAuteurInput
    favoris?: FavoriUncheckedCreateNestedManyWithoutUserInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutUserInput
    notations?: NotationUncheckedCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutUserInput
    collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUserInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditUncheckedCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUniversiteInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUniversiteInput, UserUncheckedCreateWithoutUniversiteInput>
  }

  export type UserCreateManyUniversiteInputEnvelope = {
    data: UserCreateManyUniversiteInput | UserCreateManyUniversiteInput[]
    skipDuplicates?: boolean
  }

  export type RessourceCreateWithoutUniversiteInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    auteur?: UserCreateNestedOneWithoutContributionsInput
    favoris?: FavoriCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireCreateNestedManyWithoutRessourceInput
    notations?: NotationCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueCreateNestedManyWithoutRessourceInput
    reservations?: ReservationCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainCreateNestedManyWithoutRessourceInput
    Notification?: NotificationCreateNestedManyWithoutRessourceInput
  }

  export type RessourceUncheckedCreateWithoutUniversiteInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    auteurId?: string | null
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    favoris?: FavoriUncheckedCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutRessourceInput
    notations?: NotationUncheckedCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceUncheckedCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteUncheckedCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueUncheckedCreateNestedManyWithoutRessourceInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainUncheckedCreateNestedManyWithoutRessourceInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutRessourceInput
  }

  export type RessourceCreateOrConnectWithoutUniversiteInput = {
    where: RessourceWhereUniqueInput
    create: XOR<RessourceCreateWithoutUniversiteInput, RessourceUncheckedCreateWithoutUniversiteInput>
  }

  export type RessourceCreateManyUniversiteInputEnvelope = {
    data: RessourceCreateManyUniversiteInput | RessourceCreateManyUniversiteInput[]
    skipDuplicates?: boolean
  }

  export type ConventionInteruniversitaireCreateWithoutUniversite1Input = {
    id?: string
    dateDebut: Date | string
    dateFin?: Date | string | null
    estActive?: boolean
    typeConvention?: $Enums.TypeConvention
    detailsConvention?: string | null
    documentsUrl?: string | null
    contactUniversite1?: string | null
    contactUniversite2?: string | null
    universite2: UniversiteCreateNestedOneWithoutConventionsDestinationInput
  }

  export type ConventionInteruniversitaireUncheckedCreateWithoutUniversite1Input = {
    id?: string
    universiteId2: string
    dateDebut: Date | string
    dateFin?: Date | string | null
    estActive?: boolean
    typeConvention?: $Enums.TypeConvention
    detailsConvention?: string | null
    documentsUrl?: string | null
    contactUniversite1?: string | null
    contactUniversite2?: string | null
  }

  export type ConventionInteruniversitaireCreateOrConnectWithoutUniversite1Input = {
    where: ConventionInteruniversitaireWhereUniqueInput
    create: XOR<ConventionInteruniversitaireCreateWithoutUniversite1Input, ConventionInteruniversitaireUncheckedCreateWithoutUniversite1Input>
  }

  export type ConventionInteruniversitaireCreateManyUniversite1InputEnvelope = {
    data: ConventionInteruniversitaireCreateManyUniversite1Input | ConventionInteruniversitaireCreateManyUniversite1Input[]
    skipDuplicates?: boolean
  }

  export type ConventionInteruniversitaireCreateWithoutUniversite2Input = {
    id?: string
    dateDebut: Date | string
    dateFin?: Date | string | null
    estActive?: boolean
    typeConvention?: $Enums.TypeConvention
    detailsConvention?: string | null
    documentsUrl?: string | null
    contactUniversite1?: string | null
    contactUniversite2?: string | null
    universite1: UniversiteCreateNestedOneWithoutConventionsSourceInput
  }

  export type ConventionInteruniversitaireUncheckedCreateWithoutUniversite2Input = {
    id?: string
    universiteId1: string
    dateDebut: Date | string
    dateFin?: Date | string | null
    estActive?: boolean
    typeConvention?: $Enums.TypeConvention
    detailsConvention?: string | null
    documentsUrl?: string | null
    contactUniversite1?: string | null
    contactUniversite2?: string | null
  }

  export type ConventionInteruniversitaireCreateOrConnectWithoutUniversite2Input = {
    where: ConventionInteruniversitaireWhereUniqueInput
    create: XOR<ConventionInteruniversitaireCreateWithoutUniversite2Input, ConventionInteruniversitaireUncheckedCreateWithoutUniversite2Input>
  }

  export type ConventionInteruniversitaireCreateManyUniversite2InputEnvelope = {
    data: ConventionInteruniversitaireCreateManyUniversite2Input | ConventionInteruniversitaireCreateManyUniversite2Input[]
    skipDuplicates?: boolean
  }

  export type StatistiqueInteruniversitaireCreateWithoutUniversiteSourceRelInput = {
    id?: string
    mois: number
    annee: number
    nbEmprunts?: number
    nbReservations?: number
    ressourcesPlusConsultees?: string | null
    domainesPlusConsultes?: string | null
    universiteDestinationRel: UniversiteCreateNestedOneWithoutStatistiquesDestinationInput
  }

  export type StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteSourceRelInput = {
    id?: string
    universiteDestination: string
    mois: number
    annee: number
    nbEmprunts?: number
    nbReservations?: number
    ressourcesPlusConsultees?: string | null
    domainesPlusConsultes?: string | null
  }

  export type StatistiqueInteruniversitaireCreateOrConnectWithoutUniversiteSourceRelInput = {
    where: StatistiqueInteruniversitaireWhereUniqueInput
    create: XOR<StatistiqueInteruniversitaireCreateWithoutUniversiteSourceRelInput, StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteSourceRelInput>
  }

  export type StatistiqueInteruniversitaireCreateManyUniversiteSourceRelInputEnvelope = {
    data: StatistiqueInteruniversitaireCreateManyUniversiteSourceRelInput | StatistiqueInteruniversitaireCreateManyUniversiteSourceRelInput[]
    skipDuplicates?: boolean
  }

  export type StatistiqueInteruniversitaireCreateWithoutUniversiteDestinationRelInput = {
    id?: string
    mois: number
    annee: number
    nbEmprunts?: number
    nbReservations?: number
    ressourcesPlusConsultees?: string | null
    domainesPlusConsultes?: string | null
    universiteSourceRel: UniversiteCreateNestedOneWithoutStatistiquesSourceInput
  }

  export type StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteDestinationRelInput = {
    id?: string
    universiteSource: string
    mois: number
    annee: number
    nbEmprunts?: number
    nbReservations?: number
    ressourcesPlusConsultees?: string | null
    domainesPlusConsultes?: string | null
  }

  export type StatistiqueInteruniversitaireCreateOrConnectWithoutUniversiteDestinationRelInput = {
    where: StatistiqueInteruniversitaireWhereUniqueInput
    create: XOR<StatistiqueInteruniversitaireCreateWithoutUniversiteDestinationRelInput, StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteDestinationRelInput>
  }

  export type StatistiqueInteruniversitaireCreateManyUniversiteDestinationRelInputEnvelope = {
    data: StatistiqueInteruniversitaireCreateManyUniversiteDestinationRelInput | StatistiqueInteruniversitaireCreateManyUniversiteDestinationRelInput[]
    skipDuplicates?: boolean
  }

  export type ReservationCreateWithoutUniversiteEmprunteurRelInput = {
    id?: string
    dateReservation?: Date | string
    dateDebut: Date | string
    dateFin: Date | string
    statut?: $Enums.StatutReservation
    commentaire?: string | null
    motifReservation?: string | null
    validePar?: string | null
    user?: UserCreateNestedOneWithoutReservationsInput
    ressource: RessourceCreateNestedOneWithoutReservationsInput
  }

  export type ReservationUncheckedCreateWithoutUniversiteEmprunteurRelInput = {
    id?: string
    userId?: string | null
    ressourceId: string
    dateReservation?: Date | string
    dateDebut: Date | string
    dateFin: Date | string
    statut?: $Enums.StatutReservation
    commentaire?: string | null
    motifReservation?: string | null
    validePar?: string | null
  }

  export type ReservationCreateOrConnectWithoutUniversiteEmprunteurRelInput = {
    where: ReservationWhereUniqueInput
    create: XOR<ReservationCreateWithoutUniversiteEmprunteurRelInput, ReservationUncheckedCreateWithoutUniversiteEmprunteurRelInput>
  }

  export type ReservationCreateManyUniversiteEmprunteurRelInputEnvelope = {
    data: ReservationCreateManyUniversiteEmprunteurRelInput | ReservationCreateManyUniversiteEmprunteurRelInput[]
    skipDuplicates?: boolean
  }

  export type EmpruntCreateWithoutUniversiteEmprunteurRelInput = {
    id?: string
    dateEmprunt?: Date | string
    dateRetourPrevue: Date | string
    dateRetourEffective?: Date | string | null
    statut?: $Enums.StatutEmprunt
    commentaire?: string | null
    estEmpruntExterne?: boolean
    motifEmprunt?: string | null
    validePar?: string | null
    exemplaire: ExemplairePhysiqueCreateNestedOneWithoutEmpruntsInput
    user: UserCreateNestedOneWithoutEmpruntsInput
  }

  export type EmpruntUncheckedCreateWithoutUniversiteEmprunteurRelInput = {
    id?: string
    exemplaireId: string
    userId: string
    dateEmprunt?: Date | string
    dateRetourPrevue: Date | string
    dateRetourEffective?: Date | string | null
    statut?: $Enums.StatutEmprunt
    commentaire?: string | null
    estEmpruntExterne?: boolean
    motifEmprunt?: string | null
    validePar?: string | null
  }

  export type EmpruntCreateOrConnectWithoutUniversiteEmprunteurRelInput = {
    where: EmpruntWhereUniqueInput
    create: XOR<EmpruntCreateWithoutUniversiteEmprunteurRelInput, EmpruntUncheckedCreateWithoutUniversiteEmprunteurRelInput>
  }

  export type EmpruntCreateManyUniversiteEmprunteurRelInputEnvelope = {
    data: EmpruntCreateManyUniversiteEmprunteurRelInput | EmpruntCreateManyUniversiteEmprunteurRelInput[]
    skipDuplicates?: boolean
  }

  export type RecommandationCreateWithoutUniversiteSourceRelInput = {
    id?: string
    dateRecommandation?: Date | string
    score: number
    motif: $Enums.MotifRecommandation
    estVue?: boolean
    estInteruniversitaire?: boolean
    user: UserCreateNestedOneWithoutRecommandationsInput
    ressource: RessourceCreateNestedOneWithoutRecommandationsInput
  }

  export type RecommandationUncheckedCreateWithoutUniversiteSourceRelInput = {
    id?: string
    userId: string
    ressourceId: string
    dateRecommandation?: Date | string
    score: number
    motif: $Enums.MotifRecommandation
    estVue?: boolean
    estInteruniversitaire?: boolean
  }

  export type RecommandationCreateOrConnectWithoutUniversiteSourceRelInput = {
    where: RecommandationWhereUniqueInput
    create: XOR<RecommandationCreateWithoutUniversiteSourceRelInput, RecommandationUncheckedCreateWithoutUniversiteSourceRelInput>
  }

  export type RecommandationCreateManyUniversiteSourceRelInputEnvelope = {
    data: RecommandationCreateManyUniversiteSourceRelInput | RecommandationCreateManyUniversiteSourceRelInput[]
    skipDuplicates?: boolean
  }

  export type StatistiqueBibliothequeCreateWithoutUniversiteInput = {
    id?: string
    mois: number
    annee: number
    nbEmprunts?: number
    nbEmpruntsExternes?: number
    nbReservations?: number
    nbReservationsExternes?: number
    nbRetardsRendu?: number
    tauxRotation?: number | null
    categoriesPlusEmpruntees?: string | null
    universitesPlusFrequentes?: string | null
  }

  export type StatistiqueBibliothequeUncheckedCreateWithoutUniversiteInput = {
    id?: string
    mois: number
    annee: number
    nbEmprunts?: number
    nbEmpruntsExternes?: number
    nbReservations?: number
    nbReservationsExternes?: number
    nbRetardsRendu?: number
    tauxRotation?: number | null
    categoriesPlusEmpruntees?: string | null
    universitesPlusFrequentes?: string | null
  }

  export type StatistiqueBibliothequeCreateOrConnectWithoutUniversiteInput = {
    where: StatistiqueBibliothequeWhereUniqueInput
    create: XOR<StatistiqueBibliothequeCreateWithoutUniversiteInput, StatistiqueBibliothequeUncheckedCreateWithoutUniversiteInput>
  }

  export type StatistiqueBibliothequeCreateManyUniversiteInputEnvelope = {
    data: StatistiqueBibliothequeCreateManyUniversiteInput | StatistiqueBibliothequeCreateManyUniversiteInput[]
    skipDuplicates?: boolean
  }

  export type PartageUniversiteCreateWithoutUniversiteSourceRelInput = {
    id?: string
    datePartage?: Date | string
    estActif?: boolean
    ressource: RessourceCreateNestedOneWithoutPartagesInput
    universiteDestinationRel: UniversiteCreateNestedOneWithoutPartagesDestinationInput
  }

  export type PartageUniversiteUncheckedCreateWithoutUniversiteSourceRelInput = {
    id?: string
    ressourceId: string
    universiteDestination: string
    datePartage?: Date | string
    estActif?: boolean
  }

  export type PartageUniversiteCreateOrConnectWithoutUniversiteSourceRelInput = {
    where: PartageUniversiteWhereUniqueInput
    create: XOR<PartageUniversiteCreateWithoutUniversiteSourceRelInput, PartageUniversiteUncheckedCreateWithoutUniversiteSourceRelInput>
  }

  export type PartageUniversiteCreateManyUniversiteSourceRelInputEnvelope = {
    data: PartageUniversiteCreateManyUniversiteSourceRelInput | PartageUniversiteCreateManyUniversiteSourceRelInput[]
    skipDuplicates?: boolean
  }

  export type PartageUniversiteCreateWithoutUniversiteDestinationRelInput = {
    id?: string
    datePartage?: Date | string
    estActif?: boolean
    ressource: RessourceCreateNestedOneWithoutPartagesInput
    universiteSourceRel: UniversiteCreateNestedOneWithoutPartagesSourceInput
  }

  export type PartageUniversiteUncheckedCreateWithoutUniversiteDestinationRelInput = {
    id?: string
    ressourceId: string
    universiteSource: string
    datePartage?: Date | string
    estActif?: boolean
  }

  export type PartageUniversiteCreateOrConnectWithoutUniversiteDestinationRelInput = {
    where: PartageUniversiteWhereUniqueInput
    create: XOR<PartageUniversiteCreateWithoutUniversiteDestinationRelInput, PartageUniversiteUncheckedCreateWithoutUniversiteDestinationRelInput>
  }

  export type PartageUniversiteCreateManyUniversiteDestinationRelInputEnvelope = {
    data: PartageUniversiteCreateManyUniversiteDestinationRelInput | PartageUniversiteCreateManyUniversiteDestinationRelInput[]
    skipDuplicates?: boolean
  }

  export type TransactionBlockchainCreateWithoutUniversiteOrigineRelInput = {
    id?: string
    referenceBlockchain: string
    typeTransaction: $Enums.TypeTransaction
    dateTransaction?: Date | string
    statut: $Enums.StatutTransaction
    hashTransaction: string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
    ressource?: RessourceCreateNestedOneWithoutTransactionsInput
    universiteDestinationRel?: UniversiteCreateNestedOneWithoutTransactionsDestinationInput
  }

  export type TransactionBlockchainUncheckedCreateWithoutUniversiteOrigineRelInput = {
    id?: string
    referenceBlockchain: string
    typeTransaction: $Enums.TypeTransaction
    ressourceId?: string | null
    universiteDestination?: string | null
    dateTransaction?: Date | string
    statut: $Enums.StatutTransaction
    hashTransaction: string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TransactionBlockchainCreateOrConnectWithoutUniversiteOrigineRelInput = {
    where: TransactionBlockchainWhereUniqueInput
    create: XOR<TransactionBlockchainCreateWithoutUniversiteOrigineRelInput, TransactionBlockchainUncheckedCreateWithoutUniversiteOrigineRelInput>
  }

  export type TransactionBlockchainCreateManyUniversiteOrigineRelInputEnvelope = {
    data: TransactionBlockchainCreateManyUniversiteOrigineRelInput | TransactionBlockchainCreateManyUniversiteOrigineRelInput[]
    skipDuplicates?: boolean
  }

  export type TransactionBlockchainCreateWithoutUniversiteDestinationRelInput = {
    id?: string
    referenceBlockchain: string
    typeTransaction: $Enums.TypeTransaction
    dateTransaction?: Date | string
    statut: $Enums.StatutTransaction
    hashTransaction: string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
    ressource?: RessourceCreateNestedOneWithoutTransactionsInput
    universiteOrigineRel: UniversiteCreateNestedOneWithoutTransactionsOrigineInput
  }

  export type TransactionBlockchainUncheckedCreateWithoutUniversiteDestinationRelInput = {
    id?: string
    referenceBlockchain: string
    typeTransaction: $Enums.TypeTransaction
    ressourceId?: string | null
    universiteOrigine: string
    dateTransaction?: Date | string
    statut: $Enums.StatutTransaction
    hashTransaction: string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TransactionBlockchainCreateOrConnectWithoutUniversiteDestinationRelInput = {
    where: TransactionBlockchainWhereUniqueInput
    create: XOR<TransactionBlockchainCreateWithoutUniversiteDestinationRelInput, TransactionBlockchainUncheckedCreateWithoutUniversiteDestinationRelInput>
  }

  export type TransactionBlockchainCreateManyUniversiteDestinationRelInputEnvelope = {
    data: TransactionBlockchainCreateManyUniversiteDestinationRelInput | TransactionBlockchainCreateManyUniversiteDestinationRelInput[]
    skipDuplicates?: boolean
  }

  export type HistoriqueAccesCreateWithoutUniversiteSrcRelInput = {
    id?: string
    dateAcces?: Date | string
    typeAcces: $Enums.TypeAcces
    ipAcces: string
    user: UserCreateNestedOneWithoutHistoriquesInput
    ressource: RessourceCreateNestedOneWithoutHistoriquesInput
  }

  export type HistoriqueAccesUncheckedCreateWithoutUniversiteSrcRelInput = {
    id?: string
    userId: string
    ressourceId: string
    dateAcces?: Date | string
    typeAcces: $Enums.TypeAcces
    ipAcces: string
  }

  export type HistoriqueAccesCreateOrConnectWithoutUniversiteSrcRelInput = {
    where: HistoriqueAccesWhereUniqueInput
    create: XOR<HistoriqueAccesCreateWithoutUniversiteSrcRelInput, HistoriqueAccesUncheckedCreateWithoutUniversiteSrcRelInput>
  }

  export type HistoriqueAccesCreateManyUniversiteSrcRelInputEnvelope = {
    data: HistoriqueAccesCreateManyUniversiteSrcRelInput | HistoriqueAccesCreateManyUniversiteSrcRelInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithWhereUniqueWithoutUniversiteInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutUniversiteInput, UserUncheckedUpdateWithoutUniversiteInput>
    create: XOR<UserCreateWithoutUniversiteInput, UserUncheckedCreateWithoutUniversiteInput>
  }

  export type UserUpdateWithWhereUniqueWithoutUniversiteInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutUniversiteInput, UserUncheckedUpdateWithoutUniversiteInput>
  }

  export type UserUpdateManyWithWhereWithoutUniversiteInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutUniversiteInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    motDePasse?: StringFilter<"User"> | string
    nom?: StringFilter<"User"> | string
    prenom?: StringFilter<"User"> | string
    image?: StringNullableFilter<"User"> | string | null
    role?: EnumRoleUserFilter<"User"> | $Enums.RoleUser
    departement?: StringNullableFilter<"User"> | string | null
    faculte?: StringNullableFilter<"User"> | string | null
    specialite?: StringNullableFilter<"User"> | string | null
    niveauEtudes?: StringNullableFilter<"User"> | string | null
    dateInscription?: DateTimeFilter<"User"> | Date | string
    derniereConnexion?: DateTimeNullableFilter<"User"> | Date | string | null
    estActif?: BoolFilter<"User"> | boolean
    universiteId?: StringFilter<"User"> | string
    preferencesRecommandation?: StringNullableFilter<"User"> | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFilter<"User"> | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFilter<"User"> | boolean
    droitReservationExterieure?: BoolFilter<"User"> | boolean
    universiteAutorisees?: StringNullableFilter<"User"> | string | null
    nbMaxEmpruntsExternes?: IntFilter<"User"> | number
    statutValidation?: StringNullableFilter<"User"> | string | null
    dateValidation?: DateTimeNullableFilter<"User"> | Date | string | null
  }

  export type RessourceUpsertWithWhereUniqueWithoutUniversiteInput = {
    where: RessourceWhereUniqueInput
    update: XOR<RessourceUpdateWithoutUniversiteInput, RessourceUncheckedUpdateWithoutUniversiteInput>
    create: XOR<RessourceCreateWithoutUniversiteInput, RessourceUncheckedCreateWithoutUniversiteInput>
  }

  export type RessourceUpdateWithWhereUniqueWithoutUniversiteInput = {
    where: RessourceWhereUniqueInput
    data: XOR<RessourceUpdateWithoutUniversiteInput, RessourceUncheckedUpdateWithoutUniversiteInput>
  }

  export type RessourceUpdateManyWithWhereWithoutUniversiteInput = {
    where: RessourceScalarWhereInput
    data: XOR<RessourceUpdateManyMutationInput, RessourceUncheckedUpdateManyWithoutUniversiteInput>
  }

  export type RessourceScalarWhereInput = {
    AND?: RessourceScalarWhereInput | RessourceScalarWhereInput[]
    OR?: RessourceScalarWhereInput[]
    NOT?: RessourceScalarWhereInput | RessourceScalarWhereInput[]
    id?: StringFilter<"Ressource"> | string
    titre?: StringFilter<"Ressource"> | string
    description?: StringFilter<"Ressource"> | string
    type?: EnumTypeRessourceFilter<"Ressource"> | $Enums.TypeRessource
    langue?: StringFilter<"Ressource"> | string
    urlFichier?: StringFilter<"Ressource"> | string
    urlFichierLocal?: StringNullableFilter<"Ressource"> | string | null
    format?: StringFilter<"Ressource"> | string
    dateCreation?: DateTimeFilter<"Ressource"> | Date | string
    dateModification?: DateTimeFilter<"Ressource"> | Date | string
    estPublique?: BoolFilter<"Ressource"> | boolean
    motsCles?: StringFilter<"Ressource"> | string
    auteurId?: StringNullableFilter<"Ressource"> | string | null
    universiteId?: StringFilter<"Ressource"> | string
    image?: StringNullableFilter<"Ressource"> | string | null
    niveauAcces?: EnumNiveauAccesFilter<"Ressource"> | $Enums.NiveauAcces
    datePublication?: DateTimeNullableFilter<"Ressource"> | Date | string | null
    estValide?: BoolFilter<"Ressource"> | boolean
    estArchive?: BoolFilter<"Ressource"> | boolean
    nomAuteurExterne?: StringNullableFilter<"Ressource"> | string | null
    prenomAuteurExterne?: StringNullableFilter<"Ressource"> | string | null
    affiliationAuteurExterne?: StringNullableFilter<"Ressource"> | string | null
    isbn?: StringNullableFilter<"Ressource"> | string | null
    doi?: StringNullableFilter<"Ressource"> | string | null
    edition?: StringNullableFilter<"Ressource"> | string | null
    anneePublication?: IntNullableFilter<"Ressource"> | number | null
    editeur?: StringNullableFilter<"Ressource"> | string | null
    nbPages?: IntNullableFilter<"Ressource"> | number | null
    categorieBiblio?: EnumCategorieBiblioNullableFilter<"Ressource"> | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFilter<"Ressource"> | boolean
    nbExemplaires?: IntFilter<"Ressource"> | number
    nbDisponibles?: IntFilter<"Ressource"> | number
    coteClassification?: StringNullableFilter<"Ressource"> | string | null
    estEmpruntableExterne?: BoolFilter<"Ressource"> | boolean
    dureeMaxEmpruntExterne?: IntFilter<"Ressource"> | number
    nbMaxExemplairesExterne?: IntFilter<"Ressource"> | number
    necessiteAutorisation?: BoolFilter<"Ressource"> | boolean
  }

  export type ConventionInteruniversitaireUpsertWithWhereUniqueWithoutUniversite1Input = {
    where: ConventionInteruniversitaireWhereUniqueInput
    update: XOR<ConventionInteruniversitaireUpdateWithoutUniversite1Input, ConventionInteruniversitaireUncheckedUpdateWithoutUniversite1Input>
    create: XOR<ConventionInteruniversitaireCreateWithoutUniversite1Input, ConventionInteruniversitaireUncheckedCreateWithoutUniversite1Input>
  }

  export type ConventionInteruniversitaireUpdateWithWhereUniqueWithoutUniversite1Input = {
    where: ConventionInteruniversitaireWhereUniqueInput
    data: XOR<ConventionInteruniversitaireUpdateWithoutUniversite1Input, ConventionInteruniversitaireUncheckedUpdateWithoutUniversite1Input>
  }

  export type ConventionInteruniversitaireUpdateManyWithWhereWithoutUniversite1Input = {
    where: ConventionInteruniversitaireScalarWhereInput
    data: XOR<ConventionInteruniversitaireUpdateManyMutationInput, ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite1Input>
  }

  export type ConventionInteruniversitaireScalarWhereInput = {
    AND?: ConventionInteruniversitaireScalarWhereInput | ConventionInteruniversitaireScalarWhereInput[]
    OR?: ConventionInteruniversitaireScalarWhereInput[]
    NOT?: ConventionInteruniversitaireScalarWhereInput | ConventionInteruniversitaireScalarWhereInput[]
    id?: StringFilter<"ConventionInteruniversitaire"> | string
    universiteId1?: StringFilter<"ConventionInteruniversitaire"> | string
    universiteId2?: StringFilter<"ConventionInteruniversitaire"> | string
    dateDebut?: DateTimeFilter<"ConventionInteruniversitaire"> | Date | string
    dateFin?: DateTimeNullableFilter<"ConventionInteruniversitaire"> | Date | string | null
    estActive?: BoolFilter<"ConventionInteruniversitaire"> | boolean
    typeConvention?: EnumTypeConventionFilter<"ConventionInteruniversitaire"> | $Enums.TypeConvention
    detailsConvention?: StringNullableFilter<"ConventionInteruniversitaire"> | string | null
    documentsUrl?: StringNullableFilter<"ConventionInteruniversitaire"> | string | null
    contactUniversite1?: StringNullableFilter<"ConventionInteruniversitaire"> | string | null
    contactUniversite2?: StringNullableFilter<"ConventionInteruniversitaire"> | string | null
  }

  export type ConventionInteruniversitaireUpsertWithWhereUniqueWithoutUniversite2Input = {
    where: ConventionInteruniversitaireWhereUniqueInput
    update: XOR<ConventionInteruniversitaireUpdateWithoutUniversite2Input, ConventionInteruniversitaireUncheckedUpdateWithoutUniversite2Input>
    create: XOR<ConventionInteruniversitaireCreateWithoutUniversite2Input, ConventionInteruniversitaireUncheckedCreateWithoutUniversite2Input>
  }

  export type ConventionInteruniversitaireUpdateWithWhereUniqueWithoutUniversite2Input = {
    where: ConventionInteruniversitaireWhereUniqueInput
    data: XOR<ConventionInteruniversitaireUpdateWithoutUniversite2Input, ConventionInteruniversitaireUncheckedUpdateWithoutUniversite2Input>
  }

  export type ConventionInteruniversitaireUpdateManyWithWhereWithoutUniversite2Input = {
    where: ConventionInteruniversitaireScalarWhereInput
    data: XOR<ConventionInteruniversitaireUpdateManyMutationInput, ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite2Input>
  }

  export type StatistiqueInteruniversitaireUpsertWithWhereUniqueWithoutUniversiteSourceRelInput = {
    where: StatistiqueInteruniversitaireWhereUniqueInput
    update: XOR<StatistiqueInteruniversitaireUpdateWithoutUniversiteSourceRelInput, StatistiqueInteruniversitaireUncheckedUpdateWithoutUniversiteSourceRelInput>
    create: XOR<StatistiqueInteruniversitaireCreateWithoutUniversiteSourceRelInput, StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteSourceRelInput>
  }

  export type StatistiqueInteruniversitaireUpdateWithWhereUniqueWithoutUniversiteSourceRelInput = {
    where: StatistiqueInteruniversitaireWhereUniqueInput
    data: XOR<StatistiqueInteruniversitaireUpdateWithoutUniversiteSourceRelInput, StatistiqueInteruniversitaireUncheckedUpdateWithoutUniversiteSourceRelInput>
  }

  export type StatistiqueInteruniversitaireUpdateManyWithWhereWithoutUniversiteSourceRelInput = {
    where: StatistiqueInteruniversitaireScalarWhereInput
    data: XOR<StatistiqueInteruniversitaireUpdateManyMutationInput, StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteSourceRelInput>
  }

  export type StatistiqueInteruniversitaireScalarWhereInput = {
    AND?: StatistiqueInteruniversitaireScalarWhereInput | StatistiqueInteruniversitaireScalarWhereInput[]
    OR?: StatistiqueInteruniversitaireScalarWhereInput[]
    NOT?: StatistiqueInteruniversitaireScalarWhereInput | StatistiqueInteruniversitaireScalarWhereInput[]
    id?: StringFilter<"StatistiqueInteruniversitaire"> | string
    universiteSource?: StringFilter<"StatistiqueInteruniversitaire"> | string
    universiteDestination?: StringFilter<"StatistiqueInteruniversitaire"> | string
    mois?: IntFilter<"StatistiqueInteruniversitaire"> | number
    annee?: IntFilter<"StatistiqueInteruniversitaire"> | number
    nbEmprunts?: IntFilter<"StatistiqueInteruniversitaire"> | number
    nbReservations?: IntFilter<"StatistiqueInteruniversitaire"> | number
    ressourcesPlusConsultees?: StringNullableFilter<"StatistiqueInteruniversitaire"> | string | null
    domainesPlusConsultes?: StringNullableFilter<"StatistiqueInteruniversitaire"> | string | null
  }

  export type StatistiqueInteruniversitaireUpsertWithWhereUniqueWithoutUniversiteDestinationRelInput = {
    where: StatistiqueInteruniversitaireWhereUniqueInput
    update: XOR<StatistiqueInteruniversitaireUpdateWithoutUniversiteDestinationRelInput, StatistiqueInteruniversitaireUncheckedUpdateWithoutUniversiteDestinationRelInput>
    create: XOR<StatistiqueInteruniversitaireCreateWithoutUniversiteDestinationRelInput, StatistiqueInteruniversitaireUncheckedCreateWithoutUniversiteDestinationRelInput>
  }

  export type StatistiqueInteruniversitaireUpdateWithWhereUniqueWithoutUniversiteDestinationRelInput = {
    where: StatistiqueInteruniversitaireWhereUniqueInput
    data: XOR<StatistiqueInteruniversitaireUpdateWithoutUniversiteDestinationRelInput, StatistiqueInteruniversitaireUncheckedUpdateWithoutUniversiteDestinationRelInput>
  }

  export type StatistiqueInteruniversitaireUpdateManyWithWhereWithoutUniversiteDestinationRelInput = {
    where: StatistiqueInteruniversitaireScalarWhereInput
    data: XOR<StatistiqueInteruniversitaireUpdateManyMutationInput, StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteDestinationRelInput>
  }

  export type ReservationUpsertWithWhereUniqueWithoutUniversiteEmprunteurRelInput = {
    where: ReservationWhereUniqueInput
    update: XOR<ReservationUpdateWithoutUniversiteEmprunteurRelInput, ReservationUncheckedUpdateWithoutUniversiteEmprunteurRelInput>
    create: XOR<ReservationCreateWithoutUniversiteEmprunteurRelInput, ReservationUncheckedCreateWithoutUniversiteEmprunteurRelInput>
  }

  export type ReservationUpdateWithWhereUniqueWithoutUniversiteEmprunteurRelInput = {
    where: ReservationWhereUniqueInput
    data: XOR<ReservationUpdateWithoutUniversiteEmprunteurRelInput, ReservationUncheckedUpdateWithoutUniversiteEmprunteurRelInput>
  }

  export type ReservationUpdateManyWithWhereWithoutUniversiteEmprunteurRelInput = {
    where: ReservationScalarWhereInput
    data: XOR<ReservationUpdateManyMutationInput, ReservationUncheckedUpdateManyWithoutUniversiteEmprunteurRelInput>
  }

  export type ReservationScalarWhereInput = {
    AND?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
    OR?: ReservationScalarWhereInput[]
    NOT?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
    id?: StringFilter<"Reservation"> | string
    userId?: StringNullableFilter<"Reservation"> | string | null
    ressourceId?: StringFilter<"Reservation"> | string
    dateReservation?: DateTimeFilter<"Reservation"> | Date | string
    dateDebut?: DateTimeFilter<"Reservation"> | Date | string
    dateFin?: DateTimeFilter<"Reservation"> | Date | string
    statut?: EnumStatutReservationFilter<"Reservation"> | $Enums.StatutReservation
    commentaire?: StringNullableFilter<"Reservation"> | string | null
    universiteEmprunteur?: StringFilter<"Reservation"> | string
    motifReservation?: StringNullableFilter<"Reservation"> | string | null
    validePar?: StringNullableFilter<"Reservation"> | string | null
  }

  export type EmpruntUpsertWithWhereUniqueWithoutUniversiteEmprunteurRelInput = {
    where: EmpruntWhereUniqueInput
    update: XOR<EmpruntUpdateWithoutUniversiteEmprunteurRelInput, EmpruntUncheckedUpdateWithoutUniversiteEmprunteurRelInput>
    create: XOR<EmpruntCreateWithoutUniversiteEmprunteurRelInput, EmpruntUncheckedCreateWithoutUniversiteEmprunteurRelInput>
  }

  export type EmpruntUpdateWithWhereUniqueWithoutUniversiteEmprunteurRelInput = {
    where: EmpruntWhereUniqueInput
    data: XOR<EmpruntUpdateWithoutUniversiteEmprunteurRelInput, EmpruntUncheckedUpdateWithoutUniversiteEmprunteurRelInput>
  }

  export type EmpruntUpdateManyWithWhereWithoutUniversiteEmprunteurRelInput = {
    where: EmpruntScalarWhereInput
    data: XOR<EmpruntUpdateManyMutationInput, EmpruntUncheckedUpdateManyWithoutUniversiteEmprunteurRelInput>
  }

  export type RecommandationUpsertWithWhereUniqueWithoutUniversiteSourceRelInput = {
    where: RecommandationWhereUniqueInput
    update: XOR<RecommandationUpdateWithoutUniversiteSourceRelInput, RecommandationUncheckedUpdateWithoutUniversiteSourceRelInput>
    create: XOR<RecommandationCreateWithoutUniversiteSourceRelInput, RecommandationUncheckedCreateWithoutUniversiteSourceRelInput>
  }

  export type RecommandationUpdateWithWhereUniqueWithoutUniversiteSourceRelInput = {
    where: RecommandationWhereUniqueInput
    data: XOR<RecommandationUpdateWithoutUniversiteSourceRelInput, RecommandationUncheckedUpdateWithoutUniversiteSourceRelInput>
  }

  export type RecommandationUpdateManyWithWhereWithoutUniversiteSourceRelInput = {
    where: RecommandationScalarWhereInput
    data: XOR<RecommandationUpdateManyMutationInput, RecommandationUncheckedUpdateManyWithoutUniversiteSourceRelInput>
  }

  export type RecommandationScalarWhereInput = {
    AND?: RecommandationScalarWhereInput | RecommandationScalarWhereInput[]
    OR?: RecommandationScalarWhereInput[]
    NOT?: RecommandationScalarWhereInput | RecommandationScalarWhereInput[]
    id?: StringFilter<"Recommandation"> | string
    userId?: StringFilter<"Recommandation"> | string
    ressourceId?: StringFilter<"Recommandation"> | string
    dateRecommandation?: DateTimeFilter<"Recommandation"> | Date | string
    score?: FloatFilter<"Recommandation"> | number
    motif?: EnumMotifRecommandationFilter<"Recommandation"> | $Enums.MotifRecommandation
    estVue?: BoolFilter<"Recommandation"> | boolean
    estInteruniversitaire?: BoolFilter<"Recommandation"> | boolean
    universiteSource?: StringNullableFilter<"Recommandation"> | string | null
  }

  export type StatistiqueBibliothequeUpsertWithWhereUniqueWithoutUniversiteInput = {
    where: StatistiqueBibliothequeWhereUniqueInput
    update: XOR<StatistiqueBibliothequeUpdateWithoutUniversiteInput, StatistiqueBibliothequeUncheckedUpdateWithoutUniversiteInput>
    create: XOR<StatistiqueBibliothequeCreateWithoutUniversiteInput, StatistiqueBibliothequeUncheckedCreateWithoutUniversiteInput>
  }

  export type StatistiqueBibliothequeUpdateWithWhereUniqueWithoutUniversiteInput = {
    where: StatistiqueBibliothequeWhereUniqueInput
    data: XOR<StatistiqueBibliothequeUpdateWithoutUniversiteInput, StatistiqueBibliothequeUncheckedUpdateWithoutUniversiteInput>
  }

  export type StatistiqueBibliothequeUpdateManyWithWhereWithoutUniversiteInput = {
    where: StatistiqueBibliothequeScalarWhereInput
    data: XOR<StatistiqueBibliothequeUpdateManyMutationInput, StatistiqueBibliothequeUncheckedUpdateManyWithoutUniversiteInput>
  }

  export type StatistiqueBibliothequeScalarWhereInput = {
    AND?: StatistiqueBibliothequeScalarWhereInput | StatistiqueBibliothequeScalarWhereInput[]
    OR?: StatistiqueBibliothequeScalarWhereInput[]
    NOT?: StatistiqueBibliothequeScalarWhereInput | StatistiqueBibliothequeScalarWhereInput[]
    id?: StringFilter<"StatistiqueBibliotheque"> | string
    universiteId?: StringFilter<"StatistiqueBibliotheque"> | string
    mois?: IntFilter<"StatistiqueBibliotheque"> | number
    annee?: IntFilter<"StatistiqueBibliotheque"> | number
    nbEmprunts?: IntFilter<"StatistiqueBibliotheque"> | number
    nbEmpruntsExternes?: IntFilter<"StatistiqueBibliotheque"> | number
    nbReservations?: IntFilter<"StatistiqueBibliotheque"> | number
    nbReservationsExternes?: IntFilter<"StatistiqueBibliotheque"> | number
    nbRetardsRendu?: IntFilter<"StatistiqueBibliotheque"> | number
    tauxRotation?: FloatNullableFilter<"StatistiqueBibliotheque"> | number | null
    categoriesPlusEmpruntees?: StringNullableFilter<"StatistiqueBibliotheque"> | string | null
    universitesPlusFrequentes?: StringNullableFilter<"StatistiqueBibliotheque"> | string | null
  }

  export type PartageUniversiteUpsertWithWhereUniqueWithoutUniversiteSourceRelInput = {
    where: PartageUniversiteWhereUniqueInput
    update: XOR<PartageUniversiteUpdateWithoutUniversiteSourceRelInput, PartageUniversiteUncheckedUpdateWithoutUniversiteSourceRelInput>
    create: XOR<PartageUniversiteCreateWithoutUniversiteSourceRelInput, PartageUniversiteUncheckedCreateWithoutUniversiteSourceRelInput>
  }

  export type PartageUniversiteUpdateWithWhereUniqueWithoutUniversiteSourceRelInput = {
    where: PartageUniversiteWhereUniqueInput
    data: XOR<PartageUniversiteUpdateWithoutUniversiteSourceRelInput, PartageUniversiteUncheckedUpdateWithoutUniversiteSourceRelInput>
  }

  export type PartageUniversiteUpdateManyWithWhereWithoutUniversiteSourceRelInput = {
    where: PartageUniversiteScalarWhereInput
    data: XOR<PartageUniversiteUpdateManyMutationInput, PartageUniversiteUncheckedUpdateManyWithoutUniversiteSourceRelInput>
  }

  export type PartageUniversiteScalarWhereInput = {
    AND?: PartageUniversiteScalarWhereInput | PartageUniversiteScalarWhereInput[]
    OR?: PartageUniversiteScalarWhereInput[]
    NOT?: PartageUniversiteScalarWhereInput | PartageUniversiteScalarWhereInput[]
    id?: StringFilter<"PartageUniversite"> | string
    ressourceId?: StringFilter<"PartageUniversite"> | string
    universiteSource?: StringFilter<"PartageUniversite"> | string
    universiteDestination?: StringFilter<"PartageUniversite"> | string
    datePartage?: DateTimeFilter<"PartageUniversite"> | Date | string
    estActif?: BoolFilter<"PartageUniversite"> | boolean
  }

  export type PartageUniversiteUpsertWithWhereUniqueWithoutUniversiteDestinationRelInput = {
    where: PartageUniversiteWhereUniqueInput
    update: XOR<PartageUniversiteUpdateWithoutUniversiteDestinationRelInput, PartageUniversiteUncheckedUpdateWithoutUniversiteDestinationRelInput>
    create: XOR<PartageUniversiteCreateWithoutUniversiteDestinationRelInput, PartageUniversiteUncheckedCreateWithoutUniversiteDestinationRelInput>
  }

  export type PartageUniversiteUpdateWithWhereUniqueWithoutUniversiteDestinationRelInput = {
    where: PartageUniversiteWhereUniqueInput
    data: XOR<PartageUniversiteUpdateWithoutUniversiteDestinationRelInput, PartageUniversiteUncheckedUpdateWithoutUniversiteDestinationRelInput>
  }

  export type PartageUniversiteUpdateManyWithWhereWithoutUniversiteDestinationRelInput = {
    where: PartageUniversiteScalarWhereInput
    data: XOR<PartageUniversiteUpdateManyMutationInput, PartageUniversiteUncheckedUpdateManyWithoutUniversiteDestinationRelInput>
  }

  export type TransactionBlockchainUpsertWithWhereUniqueWithoutUniversiteOrigineRelInput = {
    where: TransactionBlockchainWhereUniqueInput
    update: XOR<TransactionBlockchainUpdateWithoutUniversiteOrigineRelInput, TransactionBlockchainUncheckedUpdateWithoutUniversiteOrigineRelInput>
    create: XOR<TransactionBlockchainCreateWithoutUniversiteOrigineRelInput, TransactionBlockchainUncheckedCreateWithoutUniversiteOrigineRelInput>
  }

  export type TransactionBlockchainUpdateWithWhereUniqueWithoutUniversiteOrigineRelInput = {
    where: TransactionBlockchainWhereUniqueInput
    data: XOR<TransactionBlockchainUpdateWithoutUniversiteOrigineRelInput, TransactionBlockchainUncheckedUpdateWithoutUniversiteOrigineRelInput>
  }

  export type TransactionBlockchainUpdateManyWithWhereWithoutUniversiteOrigineRelInput = {
    where: TransactionBlockchainScalarWhereInput
    data: XOR<TransactionBlockchainUpdateManyMutationInput, TransactionBlockchainUncheckedUpdateManyWithoutUniversiteOrigineRelInput>
  }

  export type TransactionBlockchainScalarWhereInput = {
    AND?: TransactionBlockchainScalarWhereInput | TransactionBlockchainScalarWhereInput[]
    OR?: TransactionBlockchainScalarWhereInput[]
    NOT?: TransactionBlockchainScalarWhereInput | TransactionBlockchainScalarWhereInput[]
    id?: StringFilter<"TransactionBlockchain"> | string
    referenceBlockchain?: StringFilter<"TransactionBlockchain"> | string
    typeTransaction?: EnumTypeTransactionFilter<"TransactionBlockchain"> | $Enums.TypeTransaction
    ressourceId?: StringNullableFilter<"TransactionBlockchain"> | string | null
    universiteOrigine?: StringFilter<"TransactionBlockchain"> | string
    universiteDestination?: StringNullableFilter<"TransactionBlockchain"> | string | null
    dateTransaction?: DateTimeFilter<"TransactionBlockchain"> | Date | string
    statut?: EnumStatutTransactionFilter<"TransactionBlockchain"> | $Enums.StatutTransaction
    hashTransaction?: StringFilter<"TransactionBlockchain"> | string
    donneesTechniques?: JsonNullableFilter<"TransactionBlockchain">
  }

  export type TransactionBlockchainUpsertWithWhereUniqueWithoutUniversiteDestinationRelInput = {
    where: TransactionBlockchainWhereUniqueInput
    update: XOR<TransactionBlockchainUpdateWithoutUniversiteDestinationRelInput, TransactionBlockchainUncheckedUpdateWithoutUniversiteDestinationRelInput>
    create: XOR<TransactionBlockchainCreateWithoutUniversiteDestinationRelInput, TransactionBlockchainUncheckedCreateWithoutUniversiteDestinationRelInput>
  }

  export type TransactionBlockchainUpdateWithWhereUniqueWithoutUniversiteDestinationRelInput = {
    where: TransactionBlockchainWhereUniqueInput
    data: XOR<TransactionBlockchainUpdateWithoutUniversiteDestinationRelInput, TransactionBlockchainUncheckedUpdateWithoutUniversiteDestinationRelInput>
  }

  export type TransactionBlockchainUpdateManyWithWhereWithoutUniversiteDestinationRelInput = {
    where: TransactionBlockchainScalarWhereInput
    data: XOR<TransactionBlockchainUpdateManyMutationInput, TransactionBlockchainUncheckedUpdateManyWithoutUniversiteDestinationRelInput>
  }

  export type HistoriqueAccesUpsertWithWhereUniqueWithoutUniversiteSrcRelInput = {
    where: HistoriqueAccesWhereUniqueInput
    update: XOR<HistoriqueAccesUpdateWithoutUniversiteSrcRelInput, HistoriqueAccesUncheckedUpdateWithoutUniversiteSrcRelInput>
    create: XOR<HistoriqueAccesCreateWithoutUniversiteSrcRelInput, HistoriqueAccesUncheckedCreateWithoutUniversiteSrcRelInput>
  }

  export type HistoriqueAccesUpdateWithWhereUniqueWithoutUniversiteSrcRelInput = {
    where: HistoriqueAccesWhereUniqueInput
    data: XOR<HistoriqueAccesUpdateWithoutUniversiteSrcRelInput, HistoriqueAccesUncheckedUpdateWithoutUniversiteSrcRelInput>
  }

  export type HistoriqueAccesUpdateManyWithWhereWithoutUniversiteSrcRelInput = {
    where: HistoriqueAccesScalarWhereInput
    data: XOR<HistoriqueAccesUpdateManyMutationInput, HistoriqueAccesUncheckedUpdateManyWithoutUniversiteSrcRelInput>
  }

  export type HistoriqueAccesScalarWhereInput = {
    AND?: HistoriqueAccesScalarWhereInput | HistoriqueAccesScalarWhereInput[]
    OR?: HistoriqueAccesScalarWhereInput[]
    NOT?: HistoriqueAccesScalarWhereInput | HistoriqueAccesScalarWhereInput[]
    id?: StringFilter<"HistoriqueAcces"> | string
    userId?: StringFilter<"HistoriqueAcces"> | string
    ressourceId?: StringFilter<"HistoriqueAcces"> | string
    dateAcces?: DateTimeFilter<"HistoriqueAcces"> | Date | string
    typeAcces?: EnumTypeAccesFilter<"HistoriqueAcces"> | $Enums.TypeAcces
    ipAcces?: StringFilter<"HistoriqueAcces"> | string
    universiteSrc?: StringNullableFilter<"HistoriqueAcces"> | string | null
  }

  export type UniversiteCreateWithoutUsersInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    ressources?: RessourceCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteUncheckedCreateWithoutUsersInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    ressources?: RessourceUncheckedCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesUncheckedCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteCreateOrConnectWithoutUsersInput = {
    where: UniversiteWhereUniqueInput
    create: XOR<UniversiteCreateWithoutUsersInput, UniversiteUncheckedCreateWithoutUsersInput>
  }

  export type RessourceCreateWithoutAuteurInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    universite: UniversiteCreateNestedOneWithoutRessourcesInput
    favoris?: FavoriCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireCreateNestedManyWithoutRessourceInput
    notations?: NotationCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueCreateNestedManyWithoutRessourceInput
    reservations?: ReservationCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainCreateNestedManyWithoutRessourceInput
    Notification?: NotificationCreateNestedManyWithoutRessourceInput
  }

  export type RessourceUncheckedCreateWithoutAuteurInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    universiteId: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    favoris?: FavoriUncheckedCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutRessourceInput
    notations?: NotationUncheckedCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceUncheckedCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteUncheckedCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueUncheckedCreateNestedManyWithoutRessourceInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainUncheckedCreateNestedManyWithoutRessourceInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutRessourceInput
  }

  export type RessourceCreateOrConnectWithoutAuteurInput = {
    where: RessourceWhereUniqueInput
    create: XOR<RessourceCreateWithoutAuteurInput, RessourceUncheckedCreateWithoutAuteurInput>
  }

  export type RessourceCreateManyAuteurInputEnvelope = {
    data: RessourceCreateManyAuteurInput | RessourceCreateManyAuteurInput[]
    skipDuplicates?: boolean
  }

  export type FavoriCreateWithoutUserInput = {
    id?: string
    dateAjout?: Date | string
    note?: string | null
    ressource: RessourceCreateNestedOneWithoutFavorisInput
  }

  export type FavoriUncheckedCreateWithoutUserInput = {
    id?: string
    ressourceId: string
    dateAjout?: Date | string
    note?: string | null
  }

  export type FavoriCreateOrConnectWithoutUserInput = {
    where: FavoriWhereUniqueInput
    create: XOR<FavoriCreateWithoutUserInput, FavoriUncheckedCreateWithoutUserInput>
  }

  export type FavoriCreateManyUserInputEnvelope = {
    data: FavoriCreateManyUserInput | FavoriCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CommentaireCreateWithoutUserInput = {
    id?: string
    contenu: string
    dateCreation?: Date | string
    estModere?: boolean
    ressource: RessourceCreateNestedOneWithoutCommentairesInput
  }

  export type CommentaireUncheckedCreateWithoutUserInput = {
    id?: string
    ressourceId: string
    contenu: string
    dateCreation?: Date | string
    estModere?: boolean
  }

  export type CommentaireCreateOrConnectWithoutUserInput = {
    where: CommentaireWhereUniqueInput
    create: XOR<CommentaireCreateWithoutUserInput, CommentaireUncheckedCreateWithoutUserInput>
  }

  export type CommentaireCreateManyUserInputEnvelope = {
    data: CommentaireCreateManyUserInput | CommentaireCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type NotationCreateWithoutUserInput = {
    id?: string
    note: number
    dateNotation?: Date | string
    ressource: RessourceCreateNestedOneWithoutNotationsInput
  }

  export type NotationUncheckedCreateWithoutUserInput = {
    id?: string
    ressourceId: string
    note: number
    dateNotation?: Date | string
  }

  export type NotationCreateOrConnectWithoutUserInput = {
    where: NotationWhereUniqueInput
    create: XOR<NotationCreateWithoutUserInput, NotationUncheckedCreateWithoutUserInput>
  }

  export type NotationCreateManyUserInputEnvelope = {
    data: NotationCreateManyUserInput | NotationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type HistoriqueAccesCreateWithoutUserInput = {
    id?: string
    dateAcces?: Date | string
    typeAcces: $Enums.TypeAcces
    ipAcces: string
    ressource: RessourceCreateNestedOneWithoutHistoriquesInput
    universiteSrcRel?: UniversiteCreateNestedOneWithoutHistoriqueAccesInput
  }

  export type HistoriqueAccesUncheckedCreateWithoutUserInput = {
    id?: string
    ressourceId: string
    dateAcces?: Date | string
    typeAcces: $Enums.TypeAcces
    ipAcces: string
    universiteSrc?: string | null
  }

  export type HistoriqueAccesCreateOrConnectWithoutUserInput = {
    where: HistoriqueAccesWhereUniqueInput
    create: XOR<HistoriqueAccesCreateWithoutUserInput, HistoriqueAccesUncheckedCreateWithoutUserInput>
  }

  export type HistoriqueAccesCreateManyUserInputEnvelope = {
    data: HistoriqueAccesCreateManyUserInput | HistoriqueAccesCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CollectionCreateWithoutUserInput = {
    id?: string
    nom: string
    description?: string | null
    estPublique?: boolean
    dateCreation?: Date | string
    ressources?: CollectionRessourceCreateNestedManyWithoutCollectionInput
  }

  export type CollectionUncheckedCreateWithoutUserInput = {
    id?: string
    nom: string
    description?: string | null
    estPublique?: boolean
    dateCreation?: Date | string
    ressources?: CollectionRessourceUncheckedCreateNestedManyWithoutCollectionInput
  }

  export type CollectionCreateOrConnectWithoutUserInput = {
    where: CollectionWhereUniqueInput
    create: XOR<CollectionCreateWithoutUserInput, CollectionUncheckedCreateWithoutUserInput>
  }

  export type CollectionCreateManyUserInputEnvelope = {
    data: CollectionCreateManyUserInput | CollectionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ReservationCreateWithoutUserInput = {
    id?: string
    dateReservation?: Date | string
    dateDebut: Date | string
    dateFin: Date | string
    statut?: $Enums.StatutReservation
    commentaire?: string | null
    motifReservation?: string | null
    validePar?: string | null
    ressource: RessourceCreateNestedOneWithoutReservationsInput
    universiteEmprunteurRel: UniversiteCreateNestedOneWithoutReservationsInput
  }

  export type ReservationUncheckedCreateWithoutUserInput = {
    id?: string
    ressourceId: string
    dateReservation?: Date | string
    dateDebut: Date | string
    dateFin: Date | string
    statut?: $Enums.StatutReservation
    commentaire?: string | null
    universiteEmprunteur: string
    motifReservation?: string | null
    validePar?: string | null
  }

  export type ReservationCreateOrConnectWithoutUserInput = {
    where: ReservationWhereUniqueInput
    create: XOR<ReservationCreateWithoutUserInput, ReservationUncheckedCreateWithoutUserInput>
  }

  export type ReservationCreateManyUserInputEnvelope = {
    data: ReservationCreateManyUserInput | ReservationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type EmpruntCreateWithoutUserInput = {
    id?: string
    dateEmprunt?: Date | string
    dateRetourPrevue: Date | string
    dateRetourEffective?: Date | string | null
    statut?: $Enums.StatutEmprunt
    commentaire?: string | null
    estEmpruntExterne?: boolean
    motifEmprunt?: string | null
    validePar?: string | null
    exemplaire: ExemplairePhysiqueCreateNestedOneWithoutEmpruntsInput
    universiteEmprunteurRel: UniversiteCreateNestedOneWithoutEmpruntsInput
  }

  export type EmpruntUncheckedCreateWithoutUserInput = {
    id?: string
    exemplaireId: string
    dateEmprunt?: Date | string
    dateRetourPrevue: Date | string
    dateRetourEffective?: Date | string | null
    statut?: $Enums.StatutEmprunt
    commentaire?: string | null
    universiteEmprunteur: string
    estEmpruntExterne?: boolean
    motifEmprunt?: string | null
    validePar?: string | null
  }

  export type EmpruntCreateOrConnectWithoutUserInput = {
    where: EmpruntWhereUniqueInput
    create: XOR<EmpruntCreateWithoutUserInput, EmpruntUncheckedCreateWithoutUserInput>
  }

  export type EmpruntCreateManyUserInputEnvelope = {
    data: EmpruntCreateManyUserInput | EmpruntCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type RecommandationCreateWithoutUserInput = {
    id?: string
    dateRecommandation?: Date | string
    score: number
    motif: $Enums.MotifRecommandation
    estVue?: boolean
    estInteruniversitaire?: boolean
    ressource: RessourceCreateNestedOneWithoutRecommandationsInput
    universiteSourceRel?: UniversiteCreateNestedOneWithoutRecommandationsSourceInput
  }

  export type RecommandationUncheckedCreateWithoutUserInput = {
    id?: string
    ressourceId: string
    dateRecommandation?: Date | string
    score: number
    motif: $Enums.MotifRecommandation
    estVue?: boolean
    estInteruniversitaire?: boolean
    universiteSource?: string | null
  }

  export type RecommandationCreateOrConnectWithoutUserInput = {
    where: RecommandationWhereUniqueInput
    create: XOR<RecommandationCreateWithoutUserInput, RecommandationUncheckedCreateWithoutUserInput>
  }

  export type RecommandationCreateManyUserInputEnvelope = {
    data: RecommandationCreateManyUserInput | RecommandationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type JournalAuditCreateWithoutUserInput = {
    id?: string
    action: string
    entite: string
    entiteId: string
    dateAction?: Date | string
    detailsAction: JsonNullValueInput | InputJsonValue
    ipAdresse: string
  }

  export type JournalAuditUncheckedCreateWithoutUserInput = {
    id?: string
    action: string
    entite: string
    entiteId: string
    dateAction?: Date | string
    detailsAction: JsonNullValueInput | InputJsonValue
    ipAdresse: string
  }

  export type JournalAuditCreateOrConnectWithoutUserInput = {
    where: JournalAuditWhereUniqueInput
    create: XOR<JournalAuditCreateWithoutUserInput, JournalAuditUncheckedCreateWithoutUserInput>
  }

  export type JournalAuditCreateManyUserInputEnvelope = {
    data: JournalAuditCreateManyUserInput | JournalAuditCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type DonneesRecommandationCreateWithoutUserInput = {
    id?: string
    score: number
    typeInteraction: $Enums.TypeInteraction
    dateDonnee?: Date | string
    ressource: RessourceCreateNestedOneWithoutDonneesRecommandationInput
  }

  export type DonneesRecommandationUncheckedCreateWithoutUserInput = {
    id?: string
    ressourceId: string
    score: number
    typeInteraction: $Enums.TypeInteraction
    dateDonnee?: Date | string
  }

  export type DonneesRecommandationCreateOrConnectWithoutUserInput = {
    where: DonneesRecommandationWhereUniqueInput
    create: XOR<DonneesRecommandationCreateWithoutUserInput, DonneesRecommandationUncheckedCreateWithoutUserInput>
  }

  export type DonneesRecommandationCreateManyUserInputEnvelope = {
    data: DonneesRecommandationCreateManyUserInput | DonneesRecommandationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutUserInput = {
    id?: string
    titre: string
    message: string
    dateCreation?: Date | string
    estLue?: boolean
    typeNotification: $Enums.TypeNotification
    ressource?: RessourceCreateNestedOneWithoutNotificationInput
  }

  export type NotificationUncheckedCreateWithoutUserInput = {
    id?: string
    titre: string
    message: string
    dateCreation?: Date | string
    estLue?: boolean
    typeNotification: $Enums.TypeNotification
    ressourceId?: string | null
  }

  export type NotificationCreateOrConnectWithoutUserInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationCreateManyUserInputEnvelope = {
    data: NotificationCreateManyUserInput | NotificationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UniversiteUpsertWithoutUsersInput = {
    update: XOR<UniversiteUpdateWithoutUsersInput, UniversiteUncheckedUpdateWithoutUsersInput>
    create: XOR<UniversiteCreateWithoutUsersInput, UniversiteUncheckedCreateWithoutUsersInput>
    where?: UniversiteWhereInput
  }

  export type UniversiteUpdateToOneWithWhereWithoutUsersInput = {
    where?: UniversiteWhereInput
    data: XOR<UniversiteUpdateWithoutUsersInput, UniversiteUncheckedUpdateWithoutUsersInput>
  }

  export type UniversiteUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    ressources?: RessourceUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    ressources?: RessourceUncheckedUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUncheckedUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type RessourceUpsertWithWhereUniqueWithoutAuteurInput = {
    where: RessourceWhereUniqueInput
    update: XOR<RessourceUpdateWithoutAuteurInput, RessourceUncheckedUpdateWithoutAuteurInput>
    create: XOR<RessourceCreateWithoutAuteurInput, RessourceUncheckedCreateWithoutAuteurInput>
  }

  export type RessourceUpdateWithWhereUniqueWithoutAuteurInput = {
    where: RessourceWhereUniqueInput
    data: XOR<RessourceUpdateWithoutAuteurInput, RessourceUncheckedUpdateWithoutAuteurInput>
  }

  export type RessourceUpdateManyWithWhereWithoutAuteurInput = {
    where: RessourceScalarWhereInput
    data: XOR<RessourceUpdateManyMutationInput, RessourceUncheckedUpdateManyWithoutAuteurInput>
  }

  export type FavoriUpsertWithWhereUniqueWithoutUserInput = {
    where: FavoriWhereUniqueInput
    update: XOR<FavoriUpdateWithoutUserInput, FavoriUncheckedUpdateWithoutUserInput>
    create: XOR<FavoriCreateWithoutUserInput, FavoriUncheckedCreateWithoutUserInput>
  }

  export type FavoriUpdateWithWhereUniqueWithoutUserInput = {
    where: FavoriWhereUniqueInput
    data: XOR<FavoriUpdateWithoutUserInput, FavoriUncheckedUpdateWithoutUserInput>
  }

  export type FavoriUpdateManyWithWhereWithoutUserInput = {
    where: FavoriScalarWhereInput
    data: XOR<FavoriUpdateManyMutationInput, FavoriUncheckedUpdateManyWithoutUserInput>
  }

  export type FavoriScalarWhereInput = {
    AND?: FavoriScalarWhereInput | FavoriScalarWhereInput[]
    OR?: FavoriScalarWhereInput[]
    NOT?: FavoriScalarWhereInput | FavoriScalarWhereInput[]
    id?: StringFilter<"Favori"> | string
    userId?: StringFilter<"Favori"> | string
    ressourceId?: StringFilter<"Favori"> | string
    dateAjout?: DateTimeFilter<"Favori"> | Date | string
    note?: StringNullableFilter<"Favori"> | string | null
  }

  export type CommentaireUpsertWithWhereUniqueWithoutUserInput = {
    where: CommentaireWhereUniqueInput
    update: XOR<CommentaireUpdateWithoutUserInput, CommentaireUncheckedUpdateWithoutUserInput>
    create: XOR<CommentaireCreateWithoutUserInput, CommentaireUncheckedCreateWithoutUserInput>
  }

  export type CommentaireUpdateWithWhereUniqueWithoutUserInput = {
    where: CommentaireWhereUniqueInput
    data: XOR<CommentaireUpdateWithoutUserInput, CommentaireUncheckedUpdateWithoutUserInput>
  }

  export type CommentaireUpdateManyWithWhereWithoutUserInput = {
    where: CommentaireScalarWhereInput
    data: XOR<CommentaireUpdateManyMutationInput, CommentaireUncheckedUpdateManyWithoutUserInput>
  }

  export type CommentaireScalarWhereInput = {
    AND?: CommentaireScalarWhereInput | CommentaireScalarWhereInput[]
    OR?: CommentaireScalarWhereInput[]
    NOT?: CommentaireScalarWhereInput | CommentaireScalarWhereInput[]
    id?: StringFilter<"Commentaire"> | string
    userId?: StringFilter<"Commentaire"> | string
    ressourceId?: StringFilter<"Commentaire"> | string
    contenu?: StringFilter<"Commentaire"> | string
    dateCreation?: DateTimeFilter<"Commentaire"> | Date | string
    estModere?: BoolFilter<"Commentaire"> | boolean
  }

  export type NotationUpsertWithWhereUniqueWithoutUserInput = {
    where: NotationWhereUniqueInput
    update: XOR<NotationUpdateWithoutUserInput, NotationUncheckedUpdateWithoutUserInput>
    create: XOR<NotationCreateWithoutUserInput, NotationUncheckedCreateWithoutUserInput>
  }

  export type NotationUpdateWithWhereUniqueWithoutUserInput = {
    where: NotationWhereUniqueInput
    data: XOR<NotationUpdateWithoutUserInput, NotationUncheckedUpdateWithoutUserInput>
  }

  export type NotationUpdateManyWithWhereWithoutUserInput = {
    where: NotationScalarWhereInput
    data: XOR<NotationUpdateManyMutationInput, NotationUncheckedUpdateManyWithoutUserInput>
  }

  export type NotationScalarWhereInput = {
    AND?: NotationScalarWhereInput | NotationScalarWhereInput[]
    OR?: NotationScalarWhereInput[]
    NOT?: NotationScalarWhereInput | NotationScalarWhereInput[]
    id?: StringFilter<"Notation"> | string
    userId?: StringFilter<"Notation"> | string
    ressourceId?: StringFilter<"Notation"> | string
    note?: IntFilter<"Notation"> | number
    dateNotation?: DateTimeFilter<"Notation"> | Date | string
  }

  export type HistoriqueAccesUpsertWithWhereUniqueWithoutUserInput = {
    where: HistoriqueAccesWhereUniqueInput
    update: XOR<HistoriqueAccesUpdateWithoutUserInput, HistoriqueAccesUncheckedUpdateWithoutUserInput>
    create: XOR<HistoriqueAccesCreateWithoutUserInput, HistoriqueAccesUncheckedCreateWithoutUserInput>
  }

  export type HistoriqueAccesUpdateWithWhereUniqueWithoutUserInput = {
    where: HistoriqueAccesWhereUniqueInput
    data: XOR<HistoriqueAccesUpdateWithoutUserInput, HistoriqueAccesUncheckedUpdateWithoutUserInput>
  }

  export type HistoriqueAccesUpdateManyWithWhereWithoutUserInput = {
    where: HistoriqueAccesScalarWhereInput
    data: XOR<HistoriqueAccesUpdateManyMutationInput, HistoriqueAccesUncheckedUpdateManyWithoutUserInput>
  }

  export type CollectionUpsertWithWhereUniqueWithoutUserInput = {
    where: CollectionWhereUniqueInput
    update: XOR<CollectionUpdateWithoutUserInput, CollectionUncheckedUpdateWithoutUserInput>
    create: XOR<CollectionCreateWithoutUserInput, CollectionUncheckedCreateWithoutUserInput>
  }

  export type CollectionUpdateWithWhereUniqueWithoutUserInput = {
    where: CollectionWhereUniqueInput
    data: XOR<CollectionUpdateWithoutUserInput, CollectionUncheckedUpdateWithoutUserInput>
  }

  export type CollectionUpdateManyWithWhereWithoutUserInput = {
    where: CollectionScalarWhereInput
    data: XOR<CollectionUpdateManyMutationInput, CollectionUncheckedUpdateManyWithoutUserInput>
  }

  export type CollectionScalarWhereInput = {
    AND?: CollectionScalarWhereInput | CollectionScalarWhereInput[]
    OR?: CollectionScalarWhereInput[]
    NOT?: CollectionScalarWhereInput | CollectionScalarWhereInput[]
    id?: StringFilter<"Collection"> | string
    userId?: StringFilter<"Collection"> | string
    nom?: StringFilter<"Collection"> | string
    description?: StringNullableFilter<"Collection"> | string | null
    estPublique?: BoolFilter<"Collection"> | boolean
    dateCreation?: DateTimeFilter<"Collection"> | Date | string
  }

  export type ReservationUpsertWithWhereUniqueWithoutUserInput = {
    where: ReservationWhereUniqueInput
    update: XOR<ReservationUpdateWithoutUserInput, ReservationUncheckedUpdateWithoutUserInput>
    create: XOR<ReservationCreateWithoutUserInput, ReservationUncheckedCreateWithoutUserInput>
  }

  export type ReservationUpdateWithWhereUniqueWithoutUserInput = {
    where: ReservationWhereUniqueInput
    data: XOR<ReservationUpdateWithoutUserInput, ReservationUncheckedUpdateWithoutUserInput>
  }

  export type ReservationUpdateManyWithWhereWithoutUserInput = {
    where: ReservationScalarWhereInput
    data: XOR<ReservationUpdateManyMutationInput, ReservationUncheckedUpdateManyWithoutUserInput>
  }

  export type EmpruntUpsertWithWhereUniqueWithoutUserInput = {
    where: EmpruntWhereUniqueInput
    update: XOR<EmpruntUpdateWithoutUserInput, EmpruntUncheckedUpdateWithoutUserInput>
    create: XOR<EmpruntCreateWithoutUserInput, EmpruntUncheckedCreateWithoutUserInput>
  }

  export type EmpruntUpdateWithWhereUniqueWithoutUserInput = {
    where: EmpruntWhereUniqueInput
    data: XOR<EmpruntUpdateWithoutUserInput, EmpruntUncheckedUpdateWithoutUserInput>
  }

  export type EmpruntUpdateManyWithWhereWithoutUserInput = {
    where: EmpruntScalarWhereInput
    data: XOR<EmpruntUpdateManyMutationInput, EmpruntUncheckedUpdateManyWithoutUserInput>
  }

  export type RecommandationUpsertWithWhereUniqueWithoutUserInput = {
    where: RecommandationWhereUniqueInput
    update: XOR<RecommandationUpdateWithoutUserInput, RecommandationUncheckedUpdateWithoutUserInput>
    create: XOR<RecommandationCreateWithoutUserInput, RecommandationUncheckedCreateWithoutUserInput>
  }

  export type RecommandationUpdateWithWhereUniqueWithoutUserInput = {
    where: RecommandationWhereUniqueInput
    data: XOR<RecommandationUpdateWithoutUserInput, RecommandationUncheckedUpdateWithoutUserInput>
  }

  export type RecommandationUpdateManyWithWhereWithoutUserInput = {
    where: RecommandationScalarWhereInput
    data: XOR<RecommandationUpdateManyMutationInput, RecommandationUncheckedUpdateManyWithoutUserInput>
  }

  export type JournalAuditUpsertWithWhereUniqueWithoutUserInput = {
    where: JournalAuditWhereUniqueInput
    update: XOR<JournalAuditUpdateWithoutUserInput, JournalAuditUncheckedUpdateWithoutUserInput>
    create: XOR<JournalAuditCreateWithoutUserInput, JournalAuditUncheckedCreateWithoutUserInput>
  }

  export type JournalAuditUpdateWithWhereUniqueWithoutUserInput = {
    where: JournalAuditWhereUniqueInput
    data: XOR<JournalAuditUpdateWithoutUserInput, JournalAuditUncheckedUpdateWithoutUserInput>
  }

  export type JournalAuditUpdateManyWithWhereWithoutUserInput = {
    where: JournalAuditScalarWhereInput
    data: XOR<JournalAuditUpdateManyMutationInput, JournalAuditUncheckedUpdateManyWithoutUserInput>
  }

  export type JournalAuditScalarWhereInput = {
    AND?: JournalAuditScalarWhereInput | JournalAuditScalarWhereInput[]
    OR?: JournalAuditScalarWhereInput[]
    NOT?: JournalAuditScalarWhereInput | JournalAuditScalarWhereInput[]
    id?: StringFilter<"JournalAudit"> | string
    userId?: StringNullableFilter<"JournalAudit"> | string | null
    action?: StringFilter<"JournalAudit"> | string
    entite?: StringFilter<"JournalAudit"> | string
    entiteId?: StringFilter<"JournalAudit"> | string
    dateAction?: DateTimeFilter<"JournalAudit"> | Date | string
    detailsAction?: JsonFilter<"JournalAudit">
    ipAdresse?: StringFilter<"JournalAudit"> | string
  }

  export type DonneesRecommandationUpsertWithWhereUniqueWithoutUserInput = {
    where: DonneesRecommandationWhereUniqueInput
    update: XOR<DonneesRecommandationUpdateWithoutUserInput, DonneesRecommandationUncheckedUpdateWithoutUserInput>
    create: XOR<DonneesRecommandationCreateWithoutUserInput, DonneesRecommandationUncheckedCreateWithoutUserInput>
  }

  export type DonneesRecommandationUpdateWithWhereUniqueWithoutUserInput = {
    where: DonneesRecommandationWhereUniqueInput
    data: XOR<DonneesRecommandationUpdateWithoutUserInput, DonneesRecommandationUncheckedUpdateWithoutUserInput>
  }

  export type DonneesRecommandationUpdateManyWithWhereWithoutUserInput = {
    where: DonneesRecommandationScalarWhereInput
    data: XOR<DonneesRecommandationUpdateManyMutationInput, DonneesRecommandationUncheckedUpdateManyWithoutUserInput>
  }

  export type DonneesRecommandationScalarWhereInput = {
    AND?: DonneesRecommandationScalarWhereInput | DonneesRecommandationScalarWhereInput[]
    OR?: DonneesRecommandationScalarWhereInput[]
    NOT?: DonneesRecommandationScalarWhereInput | DonneesRecommandationScalarWhereInput[]
    id?: StringFilter<"DonneesRecommandation"> | string
    userId?: StringFilter<"DonneesRecommandation"> | string
    ressourceId?: StringFilter<"DonneesRecommandation"> | string
    score?: FloatFilter<"DonneesRecommandation"> | number
    typeInteraction?: EnumTypeInteractionFilter<"DonneesRecommandation"> | $Enums.TypeInteraction
    dateDonnee?: DateTimeFilter<"DonneesRecommandation"> | Date | string
  }

  export type NotificationUpsertWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
  }

  export type NotificationUpdateManyWithWhereWithoutUserInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutUserInput>
  }

  export type NotificationScalarWhereInput = {
    AND?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    OR?: NotificationScalarWhereInput[]
    NOT?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    id?: StringFilter<"Notification"> | string
    userId?: StringFilter<"Notification"> | string
    titre?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    dateCreation?: DateTimeFilter<"Notification"> | Date | string
    estLue?: BoolFilter<"Notification"> | boolean
    typeNotification?: EnumTypeNotificationFilter<"Notification"> | $Enums.TypeNotification
    ressourceId?: StringNullableFilter<"Notification"> | string | null
  }

  export type UserCreateWithoutFavorisInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    universite: UniversiteCreateNestedOneWithoutUsersInput
    contributions?: RessourceCreateNestedManyWithoutAuteurInput
    commentaires?: CommentaireCreateNestedManyWithoutUserInput
    notations?: NotationCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutUserInput
    collections?: CollectionCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
    emprunts?: EmpruntCreateNestedManyWithoutUserInput
    recommandations?: RecommandationCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutFavorisInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    universiteId: string
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    contributions?: RessourceUncheckedCreateNestedManyWithoutAuteurInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutUserInput
    notations?: NotationUncheckedCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutUserInput
    collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUserInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditUncheckedCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutFavorisInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFavorisInput, UserUncheckedCreateWithoutFavorisInput>
  }

  export type RessourceCreateWithoutFavorisInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    auteur?: UserCreateNestedOneWithoutContributionsInput
    universite: UniversiteCreateNestedOneWithoutRessourcesInput
    commentaires?: CommentaireCreateNestedManyWithoutRessourceInput
    notations?: NotationCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueCreateNestedManyWithoutRessourceInput
    reservations?: ReservationCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainCreateNestedManyWithoutRessourceInput
    Notification?: NotificationCreateNestedManyWithoutRessourceInput
  }

  export type RessourceUncheckedCreateWithoutFavorisInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    auteurId?: string | null
    universiteId: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutRessourceInput
    notations?: NotationUncheckedCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceUncheckedCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteUncheckedCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueUncheckedCreateNestedManyWithoutRessourceInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainUncheckedCreateNestedManyWithoutRessourceInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutRessourceInput
  }

  export type RessourceCreateOrConnectWithoutFavorisInput = {
    where: RessourceWhereUniqueInput
    create: XOR<RessourceCreateWithoutFavorisInput, RessourceUncheckedCreateWithoutFavorisInput>
  }

  export type UserUpsertWithoutFavorisInput = {
    update: XOR<UserUpdateWithoutFavorisInput, UserUncheckedUpdateWithoutFavorisInput>
    create: XOR<UserCreateWithoutFavorisInput, UserUncheckedCreateWithoutFavorisInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFavorisInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFavorisInput, UserUncheckedUpdateWithoutFavorisInput>
  }

  export type UserUpdateWithoutFavorisInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universite?: UniversiteUpdateOneRequiredWithoutUsersNestedInput
    contributions?: RessourceUpdateManyWithoutAuteurNestedInput
    commentaires?: CommentaireUpdateManyWithoutUserNestedInput
    notations?: NotationUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutUserNestedInput
    collections?: CollectionUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUpdateManyWithoutUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFavorisInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    universiteId?: StringFieldUpdateOperationsInput | string
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contributions?: RessourceUncheckedUpdateManyWithoutAuteurNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutUserNestedInput
    notations?: NotationUncheckedUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutUserNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUncheckedUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type RessourceUpsertWithoutFavorisInput = {
    update: XOR<RessourceUpdateWithoutFavorisInput, RessourceUncheckedUpdateWithoutFavorisInput>
    create: XOR<RessourceCreateWithoutFavorisInput, RessourceUncheckedCreateWithoutFavorisInput>
    where?: RessourceWhereInput
  }

  export type RessourceUpdateToOneWithWhereWithoutFavorisInput = {
    where?: RessourceWhereInput
    data: XOR<RessourceUpdateWithoutFavorisInput, RessourceUncheckedUpdateWithoutFavorisInput>
  }

  export type RessourceUpdateWithoutFavorisInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    auteur?: UserUpdateOneWithoutContributionsNestedInput
    universite?: UniversiteUpdateOneRequiredWithoutRessourcesNestedInput
    commentaires?: CommentaireUpdateManyWithoutRessourceNestedInput
    notations?: NotationUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceUncheckedUpdateWithoutFavorisInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    auteurId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteId?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    commentaires?: CommentaireUncheckedUpdateManyWithoutRessourceNestedInput
    notations?: NotationUncheckedUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUncheckedUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUncheckedUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUncheckedUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUncheckedUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutRessourceNestedInput
  }

  export type UserCreateWithoutCommentairesInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    universite: UniversiteCreateNestedOneWithoutUsersInput
    contributions?: RessourceCreateNestedManyWithoutAuteurInput
    favoris?: FavoriCreateNestedManyWithoutUserInput
    notations?: NotationCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutUserInput
    collections?: CollectionCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
    emprunts?: EmpruntCreateNestedManyWithoutUserInput
    recommandations?: RecommandationCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCommentairesInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    universiteId: string
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    contributions?: RessourceUncheckedCreateNestedManyWithoutAuteurInput
    favoris?: FavoriUncheckedCreateNestedManyWithoutUserInput
    notations?: NotationUncheckedCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutUserInput
    collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUserInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditUncheckedCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCommentairesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCommentairesInput, UserUncheckedCreateWithoutCommentairesInput>
  }

  export type RessourceCreateWithoutCommentairesInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    auteur?: UserCreateNestedOneWithoutContributionsInput
    universite: UniversiteCreateNestedOneWithoutRessourcesInput
    favoris?: FavoriCreateNestedManyWithoutRessourceInput
    notations?: NotationCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueCreateNestedManyWithoutRessourceInput
    reservations?: ReservationCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainCreateNestedManyWithoutRessourceInput
    Notification?: NotificationCreateNestedManyWithoutRessourceInput
  }

  export type RessourceUncheckedCreateWithoutCommentairesInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    auteurId?: string | null
    universiteId: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    favoris?: FavoriUncheckedCreateNestedManyWithoutRessourceInput
    notations?: NotationUncheckedCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceUncheckedCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteUncheckedCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueUncheckedCreateNestedManyWithoutRessourceInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainUncheckedCreateNestedManyWithoutRessourceInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutRessourceInput
  }

  export type RessourceCreateOrConnectWithoutCommentairesInput = {
    where: RessourceWhereUniqueInput
    create: XOR<RessourceCreateWithoutCommentairesInput, RessourceUncheckedCreateWithoutCommentairesInput>
  }

  export type UserUpsertWithoutCommentairesInput = {
    update: XOR<UserUpdateWithoutCommentairesInput, UserUncheckedUpdateWithoutCommentairesInput>
    create: XOR<UserCreateWithoutCommentairesInput, UserUncheckedCreateWithoutCommentairesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCommentairesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCommentairesInput, UserUncheckedUpdateWithoutCommentairesInput>
  }

  export type UserUpdateWithoutCommentairesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universite?: UniversiteUpdateOneRequiredWithoutUsersNestedInput
    contributions?: RessourceUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUpdateManyWithoutUserNestedInput
    notations?: NotationUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutUserNestedInput
    collections?: CollectionUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUpdateManyWithoutUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCommentairesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    universiteId?: StringFieldUpdateOperationsInput | string
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contributions?: RessourceUncheckedUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUncheckedUpdateManyWithoutUserNestedInput
    notations?: NotationUncheckedUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutUserNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUncheckedUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type RessourceUpsertWithoutCommentairesInput = {
    update: XOR<RessourceUpdateWithoutCommentairesInput, RessourceUncheckedUpdateWithoutCommentairesInput>
    create: XOR<RessourceCreateWithoutCommentairesInput, RessourceUncheckedCreateWithoutCommentairesInput>
    where?: RessourceWhereInput
  }

  export type RessourceUpdateToOneWithWhereWithoutCommentairesInput = {
    where?: RessourceWhereInput
    data: XOR<RessourceUpdateWithoutCommentairesInput, RessourceUncheckedUpdateWithoutCommentairesInput>
  }

  export type RessourceUpdateWithoutCommentairesInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    auteur?: UserUpdateOneWithoutContributionsNestedInput
    universite?: UniversiteUpdateOneRequiredWithoutRessourcesNestedInput
    favoris?: FavoriUpdateManyWithoutRessourceNestedInput
    notations?: NotationUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceUncheckedUpdateWithoutCommentairesInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    auteurId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteId?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    favoris?: FavoriUncheckedUpdateManyWithoutRessourceNestedInput
    notations?: NotationUncheckedUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUncheckedUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUncheckedUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUncheckedUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUncheckedUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutRessourceNestedInput
  }

  export type UserCreateWithoutNotationsInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    universite: UniversiteCreateNestedOneWithoutUsersInput
    contributions?: RessourceCreateNestedManyWithoutAuteurInput
    favoris?: FavoriCreateNestedManyWithoutUserInput
    commentaires?: CommentaireCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutUserInput
    collections?: CollectionCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
    emprunts?: EmpruntCreateNestedManyWithoutUserInput
    recommandations?: RecommandationCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutNotationsInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    universiteId: string
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    contributions?: RessourceUncheckedCreateNestedManyWithoutAuteurInput
    favoris?: FavoriUncheckedCreateNestedManyWithoutUserInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutUserInput
    collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUserInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditUncheckedCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutNotationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotationsInput, UserUncheckedCreateWithoutNotationsInput>
  }

  export type RessourceCreateWithoutNotationsInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    auteur?: UserCreateNestedOneWithoutContributionsInput
    universite: UniversiteCreateNestedOneWithoutRessourcesInput
    favoris?: FavoriCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueCreateNestedManyWithoutRessourceInput
    reservations?: ReservationCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainCreateNestedManyWithoutRessourceInput
    Notification?: NotificationCreateNestedManyWithoutRessourceInput
  }

  export type RessourceUncheckedCreateWithoutNotationsInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    auteurId?: string | null
    universiteId: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    favoris?: FavoriUncheckedCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceUncheckedCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteUncheckedCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueUncheckedCreateNestedManyWithoutRessourceInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainUncheckedCreateNestedManyWithoutRessourceInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutRessourceInput
  }

  export type RessourceCreateOrConnectWithoutNotationsInput = {
    where: RessourceWhereUniqueInput
    create: XOR<RessourceCreateWithoutNotationsInput, RessourceUncheckedCreateWithoutNotationsInput>
  }

  export type UserUpsertWithoutNotationsInput = {
    update: XOR<UserUpdateWithoutNotationsInput, UserUncheckedUpdateWithoutNotationsInput>
    create: XOR<UserCreateWithoutNotationsInput, UserUncheckedCreateWithoutNotationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotationsInput, UserUncheckedUpdateWithoutNotationsInput>
  }

  export type UserUpdateWithoutNotationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universite?: UniversiteUpdateOneRequiredWithoutUsersNestedInput
    contributions?: RessourceUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutUserNestedInput
    collections?: CollectionUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUpdateManyWithoutUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutNotationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    universiteId?: StringFieldUpdateOperationsInput | string
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contributions?: RessourceUncheckedUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUncheckedUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutUserNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUncheckedUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type RessourceUpsertWithoutNotationsInput = {
    update: XOR<RessourceUpdateWithoutNotationsInput, RessourceUncheckedUpdateWithoutNotationsInput>
    create: XOR<RessourceCreateWithoutNotationsInput, RessourceUncheckedCreateWithoutNotationsInput>
    where?: RessourceWhereInput
  }

  export type RessourceUpdateToOneWithWhereWithoutNotationsInput = {
    where?: RessourceWhereInput
    data: XOR<RessourceUpdateWithoutNotationsInput, RessourceUncheckedUpdateWithoutNotationsInput>
  }

  export type RessourceUpdateWithoutNotationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    auteur?: UserUpdateOneWithoutContributionsNestedInput
    universite?: UniversiteUpdateOneRequiredWithoutRessourcesNestedInput
    favoris?: FavoriUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceUncheckedUpdateWithoutNotationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    auteurId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteId?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    favoris?: FavoriUncheckedUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUncheckedUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUncheckedUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUncheckedUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUncheckedUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutRessourceNestedInput
  }

  export type UserCreateWithoutHistoriquesInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    universite: UniversiteCreateNestedOneWithoutUsersInput
    contributions?: RessourceCreateNestedManyWithoutAuteurInput
    favoris?: FavoriCreateNestedManyWithoutUserInput
    commentaires?: CommentaireCreateNestedManyWithoutUserInput
    notations?: NotationCreateNestedManyWithoutUserInput
    collections?: CollectionCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
    emprunts?: EmpruntCreateNestedManyWithoutUserInput
    recommandations?: RecommandationCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutHistoriquesInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    universiteId: string
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    contributions?: RessourceUncheckedCreateNestedManyWithoutAuteurInput
    favoris?: FavoriUncheckedCreateNestedManyWithoutUserInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutUserInput
    notations?: NotationUncheckedCreateNestedManyWithoutUserInput
    collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUserInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditUncheckedCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutHistoriquesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutHistoriquesInput, UserUncheckedCreateWithoutHistoriquesInput>
  }

  export type RessourceCreateWithoutHistoriquesInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    auteur?: UserCreateNestedOneWithoutContributionsInput
    universite: UniversiteCreateNestedOneWithoutRessourcesInput
    favoris?: FavoriCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireCreateNestedManyWithoutRessourceInput
    notations?: NotationCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueCreateNestedManyWithoutRessourceInput
    reservations?: ReservationCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainCreateNestedManyWithoutRessourceInput
    Notification?: NotificationCreateNestedManyWithoutRessourceInput
  }

  export type RessourceUncheckedCreateWithoutHistoriquesInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    auteurId?: string | null
    universiteId: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    favoris?: FavoriUncheckedCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutRessourceInput
    notations?: NotationUncheckedCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceUncheckedCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteUncheckedCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueUncheckedCreateNestedManyWithoutRessourceInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainUncheckedCreateNestedManyWithoutRessourceInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutRessourceInput
  }

  export type RessourceCreateOrConnectWithoutHistoriquesInput = {
    where: RessourceWhereUniqueInput
    create: XOR<RessourceCreateWithoutHistoriquesInput, RessourceUncheckedCreateWithoutHistoriquesInput>
  }

  export type UniversiteCreateWithoutHistoriqueAccesInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainCreateNestedManyWithoutUniversiteDestinationRelInput
  }

  export type UniversiteUncheckedCreateWithoutHistoriqueAccesInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserUncheckedCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceUncheckedCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
  }

  export type UniversiteCreateOrConnectWithoutHistoriqueAccesInput = {
    where: UniversiteWhereUniqueInput
    create: XOR<UniversiteCreateWithoutHistoriqueAccesInput, UniversiteUncheckedCreateWithoutHistoriqueAccesInput>
  }

  export type UserUpsertWithoutHistoriquesInput = {
    update: XOR<UserUpdateWithoutHistoriquesInput, UserUncheckedUpdateWithoutHistoriquesInput>
    create: XOR<UserCreateWithoutHistoriquesInput, UserUncheckedCreateWithoutHistoriquesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutHistoriquesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutHistoriquesInput, UserUncheckedUpdateWithoutHistoriquesInput>
  }

  export type UserUpdateWithoutHistoriquesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universite?: UniversiteUpdateOneRequiredWithoutUsersNestedInput
    contributions?: RessourceUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUpdateManyWithoutUserNestedInput
    notations?: NotationUpdateManyWithoutUserNestedInput
    collections?: CollectionUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUpdateManyWithoutUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutHistoriquesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    universiteId?: StringFieldUpdateOperationsInput | string
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contributions?: RessourceUncheckedUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUncheckedUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutUserNestedInput
    notations?: NotationUncheckedUpdateManyWithoutUserNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUncheckedUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type RessourceUpsertWithoutHistoriquesInput = {
    update: XOR<RessourceUpdateWithoutHistoriquesInput, RessourceUncheckedUpdateWithoutHistoriquesInput>
    create: XOR<RessourceCreateWithoutHistoriquesInput, RessourceUncheckedCreateWithoutHistoriquesInput>
    where?: RessourceWhereInput
  }

  export type RessourceUpdateToOneWithWhereWithoutHistoriquesInput = {
    where?: RessourceWhereInput
    data: XOR<RessourceUpdateWithoutHistoriquesInput, RessourceUncheckedUpdateWithoutHistoriquesInput>
  }

  export type RessourceUpdateWithoutHistoriquesInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    auteur?: UserUpdateOneWithoutContributionsNestedInput
    universite?: UniversiteUpdateOneRequiredWithoutRessourcesNestedInput
    favoris?: FavoriUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUpdateManyWithoutRessourceNestedInput
    notations?: NotationUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceUncheckedUpdateWithoutHistoriquesInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    auteurId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteId?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    favoris?: FavoriUncheckedUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutRessourceNestedInput
    notations?: NotationUncheckedUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUncheckedUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUncheckedUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUncheckedUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUncheckedUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutRessourceNestedInput
  }

  export type UniversiteUpsertWithoutHistoriqueAccesInput = {
    update: XOR<UniversiteUpdateWithoutHistoriqueAccesInput, UniversiteUncheckedUpdateWithoutHistoriqueAccesInput>
    create: XOR<UniversiteCreateWithoutHistoriqueAccesInput, UniversiteUncheckedCreateWithoutHistoriqueAccesInput>
    where?: UniversiteWhereInput
  }

  export type UniversiteUpdateToOneWithWhereWithoutHistoriqueAccesInput = {
    where?: UniversiteWhereInput
    data: XOR<UniversiteUpdateWithoutHistoriqueAccesInput, UniversiteUncheckedUpdateWithoutHistoriqueAccesInput>
  }

  export type UniversiteUpdateWithoutHistoriqueAccesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUpdateManyWithoutUniversiteDestinationRelNestedInput
  }

  export type UniversiteUncheckedUpdateWithoutHistoriqueAccesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUncheckedUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUncheckedUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
  }

  export type UserCreateWithoutDonneesRecommandationInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    universite: UniversiteCreateNestedOneWithoutUsersInput
    contributions?: RessourceCreateNestedManyWithoutAuteurInput
    favoris?: FavoriCreateNestedManyWithoutUserInput
    commentaires?: CommentaireCreateNestedManyWithoutUserInput
    notations?: NotationCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutUserInput
    collections?: CollectionCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
    emprunts?: EmpruntCreateNestedManyWithoutUserInput
    recommandations?: RecommandationCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditCreateNestedManyWithoutUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutDonneesRecommandationInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    universiteId: string
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    contributions?: RessourceUncheckedCreateNestedManyWithoutAuteurInput
    favoris?: FavoriUncheckedCreateNestedManyWithoutUserInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutUserInput
    notations?: NotationUncheckedCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutUserInput
    collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUserInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditUncheckedCreateNestedManyWithoutUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutDonneesRecommandationInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDonneesRecommandationInput, UserUncheckedCreateWithoutDonneesRecommandationInput>
  }

  export type RessourceCreateWithoutDonneesRecommandationInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    auteur?: UserCreateNestedOneWithoutContributionsInput
    universite: UniversiteCreateNestedOneWithoutRessourcesInput
    favoris?: FavoriCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireCreateNestedManyWithoutRessourceInput
    notations?: NotationCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueCreateNestedManyWithoutRessourceInput
    reservations?: ReservationCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainCreateNestedManyWithoutRessourceInput
    Notification?: NotificationCreateNestedManyWithoutRessourceInput
  }

  export type RessourceUncheckedCreateWithoutDonneesRecommandationInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    auteurId?: string | null
    universiteId: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    favoris?: FavoriUncheckedCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutRessourceInput
    notations?: NotationUncheckedCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceUncheckedCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteUncheckedCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueUncheckedCreateNestedManyWithoutRessourceInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainUncheckedCreateNestedManyWithoutRessourceInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutRessourceInput
  }

  export type RessourceCreateOrConnectWithoutDonneesRecommandationInput = {
    where: RessourceWhereUniqueInput
    create: XOR<RessourceCreateWithoutDonneesRecommandationInput, RessourceUncheckedCreateWithoutDonneesRecommandationInput>
  }

  export type UserUpsertWithoutDonneesRecommandationInput = {
    update: XOR<UserUpdateWithoutDonneesRecommandationInput, UserUncheckedUpdateWithoutDonneesRecommandationInput>
    create: XOR<UserCreateWithoutDonneesRecommandationInput, UserUncheckedCreateWithoutDonneesRecommandationInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDonneesRecommandationInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDonneesRecommandationInput, UserUncheckedUpdateWithoutDonneesRecommandationInput>
  }

  export type UserUpdateWithoutDonneesRecommandationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universite?: UniversiteUpdateOneRequiredWithoutUsersNestedInput
    contributions?: RessourceUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUpdateManyWithoutUserNestedInput
    notations?: NotationUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutUserNestedInput
    collections?: CollectionUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUpdateManyWithoutUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutDonneesRecommandationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    universiteId?: StringFieldUpdateOperationsInput | string
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contributions?: RessourceUncheckedUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUncheckedUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutUserNestedInput
    notations?: NotationUncheckedUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutUserNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUncheckedUpdateManyWithoutUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type RessourceUpsertWithoutDonneesRecommandationInput = {
    update: XOR<RessourceUpdateWithoutDonneesRecommandationInput, RessourceUncheckedUpdateWithoutDonneesRecommandationInput>
    create: XOR<RessourceCreateWithoutDonneesRecommandationInput, RessourceUncheckedCreateWithoutDonneesRecommandationInput>
    where?: RessourceWhereInput
  }

  export type RessourceUpdateToOneWithWhereWithoutDonneesRecommandationInput = {
    where?: RessourceWhereInput
    data: XOR<RessourceUpdateWithoutDonneesRecommandationInput, RessourceUncheckedUpdateWithoutDonneesRecommandationInput>
  }

  export type RessourceUpdateWithoutDonneesRecommandationInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    auteur?: UserUpdateOneWithoutContributionsNestedInput
    universite?: UniversiteUpdateOneRequiredWithoutRessourcesNestedInput
    favoris?: FavoriUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUpdateManyWithoutRessourceNestedInput
    notations?: NotationUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceUncheckedUpdateWithoutDonneesRecommandationInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    auteurId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteId?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    favoris?: FavoriUncheckedUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutRessourceNestedInput
    notations?: NotationUncheckedUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUncheckedUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUncheckedUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUncheckedUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUncheckedUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutRessourceNestedInput
  }

  export type UserCreateWithoutCollectionsInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    universite: UniversiteCreateNestedOneWithoutUsersInput
    contributions?: RessourceCreateNestedManyWithoutAuteurInput
    favoris?: FavoriCreateNestedManyWithoutUserInput
    commentaires?: CommentaireCreateNestedManyWithoutUserInput
    notations?: NotationCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
    emprunts?: EmpruntCreateNestedManyWithoutUserInput
    recommandations?: RecommandationCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCollectionsInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    universiteId: string
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    contributions?: RessourceUncheckedCreateNestedManyWithoutAuteurInput
    favoris?: FavoriUncheckedCreateNestedManyWithoutUserInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutUserInput
    notations?: NotationUncheckedCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUserInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditUncheckedCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCollectionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCollectionsInput, UserUncheckedCreateWithoutCollectionsInput>
  }

  export type CollectionRessourceCreateWithoutCollectionInput = {
    id?: string
    dateAjout?: Date | string
    notes?: string | null
    ressource: RessourceCreateNestedOneWithoutCollectionsInput
  }

  export type CollectionRessourceUncheckedCreateWithoutCollectionInput = {
    id?: string
    ressourceId: string
    dateAjout?: Date | string
    notes?: string | null
  }

  export type CollectionRessourceCreateOrConnectWithoutCollectionInput = {
    where: CollectionRessourceWhereUniqueInput
    create: XOR<CollectionRessourceCreateWithoutCollectionInput, CollectionRessourceUncheckedCreateWithoutCollectionInput>
  }

  export type CollectionRessourceCreateManyCollectionInputEnvelope = {
    data: CollectionRessourceCreateManyCollectionInput | CollectionRessourceCreateManyCollectionInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutCollectionsInput = {
    update: XOR<UserUpdateWithoutCollectionsInput, UserUncheckedUpdateWithoutCollectionsInput>
    create: XOR<UserCreateWithoutCollectionsInput, UserUncheckedCreateWithoutCollectionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCollectionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCollectionsInput, UserUncheckedUpdateWithoutCollectionsInput>
  }

  export type UserUpdateWithoutCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universite?: UniversiteUpdateOneRequiredWithoutUsersNestedInput
    contributions?: RessourceUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUpdateManyWithoutUserNestedInput
    notations?: NotationUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUpdateManyWithoutUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    universiteId?: StringFieldUpdateOperationsInput | string
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contributions?: RessourceUncheckedUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUncheckedUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutUserNestedInput
    notations?: NotationUncheckedUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUncheckedUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CollectionRessourceUpsertWithWhereUniqueWithoutCollectionInput = {
    where: CollectionRessourceWhereUniqueInput
    update: XOR<CollectionRessourceUpdateWithoutCollectionInput, CollectionRessourceUncheckedUpdateWithoutCollectionInput>
    create: XOR<CollectionRessourceCreateWithoutCollectionInput, CollectionRessourceUncheckedCreateWithoutCollectionInput>
  }

  export type CollectionRessourceUpdateWithWhereUniqueWithoutCollectionInput = {
    where: CollectionRessourceWhereUniqueInput
    data: XOR<CollectionRessourceUpdateWithoutCollectionInput, CollectionRessourceUncheckedUpdateWithoutCollectionInput>
  }

  export type CollectionRessourceUpdateManyWithWhereWithoutCollectionInput = {
    where: CollectionRessourceScalarWhereInput
    data: XOR<CollectionRessourceUpdateManyMutationInput, CollectionRessourceUncheckedUpdateManyWithoutCollectionInput>
  }

  export type CollectionRessourceScalarWhereInput = {
    AND?: CollectionRessourceScalarWhereInput | CollectionRessourceScalarWhereInput[]
    OR?: CollectionRessourceScalarWhereInput[]
    NOT?: CollectionRessourceScalarWhereInput | CollectionRessourceScalarWhereInput[]
    id?: StringFilter<"CollectionRessource"> | string
    collectionId?: StringFilter<"CollectionRessource"> | string
    ressourceId?: StringFilter<"CollectionRessource"> | string
    dateAjout?: DateTimeFilter<"CollectionRessource"> | Date | string
    notes?: StringNullableFilter<"CollectionRessource"> | string | null
  }

  export type CollectionCreateWithoutRessourcesInput = {
    id?: string
    nom: string
    description?: string | null
    estPublique?: boolean
    dateCreation?: Date | string
    user: UserCreateNestedOneWithoutCollectionsInput
  }

  export type CollectionUncheckedCreateWithoutRessourcesInput = {
    id?: string
    userId: string
    nom: string
    description?: string | null
    estPublique?: boolean
    dateCreation?: Date | string
  }

  export type CollectionCreateOrConnectWithoutRessourcesInput = {
    where: CollectionWhereUniqueInput
    create: XOR<CollectionCreateWithoutRessourcesInput, CollectionUncheckedCreateWithoutRessourcesInput>
  }

  export type RessourceCreateWithoutCollectionsInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    auteur?: UserCreateNestedOneWithoutContributionsInput
    universite: UniversiteCreateNestedOneWithoutRessourcesInput
    favoris?: FavoriCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireCreateNestedManyWithoutRessourceInput
    notations?: NotationCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueCreateNestedManyWithoutRessourceInput
    reservations?: ReservationCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainCreateNestedManyWithoutRessourceInput
    Notification?: NotificationCreateNestedManyWithoutRessourceInput
  }

  export type RessourceUncheckedCreateWithoutCollectionsInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    auteurId?: string | null
    universiteId: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    favoris?: FavoriUncheckedCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutRessourceInput
    notations?: NotationUncheckedCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteUncheckedCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueUncheckedCreateNestedManyWithoutRessourceInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainUncheckedCreateNestedManyWithoutRessourceInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutRessourceInput
  }

  export type RessourceCreateOrConnectWithoutCollectionsInput = {
    where: RessourceWhereUniqueInput
    create: XOR<RessourceCreateWithoutCollectionsInput, RessourceUncheckedCreateWithoutCollectionsInput>
  }

  export type CollectionUpsertWithoutRessourcesInput = {
    update: XOR<CollectionUpdateWithoutRessourcesInput, CollectionUncheckedUpdateWithoutRessourcesInput>
    create: XOR<CollectionCreateWithoutRessourcesInput, CollectionUncheckedCreateWithoutRessourcesInput>
    where?: CollectionWhereInput
  }

  export type CollectionUpdateToOneWithWhereWithoutRessourcesInput = {
    where?: CollectionWhereInput
    data: XOR<CollectionUpdateWithoutRessourcesInput, CollectionUncheckedUpdateWithoutRessourcesInput>
  }

  export type CollectionUpdateWithoutRessourcesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCollectionsNestedInput
  }

  export type CollectionUncheckedUpdateWithoutRessourcesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RessourceUpsertWithoutCollectionsInput = {
    update: XOR<RessourceUpdateWithoutCollectionsInput, RessourceUncheckedUpdateWithoutCollectionsInput>
    create: XOR<RessourceCreateWithoutCollectionsInput, RessourceUncheckedCreateWithoutCollectionsInput>
    where?: RessourceWhereInput
  }

  export type RessourceUpdateToOneWithWhereWithoutCollectionsInput = {
    where?: RessourceWhereInput
    data: XOR<RessourceUpdateWithoutCollectionsInput, RessourceUncheckedUpdateWithoutCollectionsInput>
  }

  export type RessourceUpdateWithoutCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    auteur?: UserUpdateOneWithoutContributionsNestedInput
    universite?: UniversiteUpdateOneRequiredWithoutRessourcesNestedInput
    favoris?: FavoriUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUpdateManyWithoutRessourceNestedInput
    notations?: NotationUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceUncheckedUpdateWithoutCollectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    auteurId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteId?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    favoris?: FavoriUncheckedUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutRessourceNestedInput
    notations?: NotationUncheckedUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUncheckedUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUncheckedUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUncheckedUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceCreateWithoutPartagesInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    auteur?: UserCreateNestedOneWithoutContributionsInput
    universite: UniversiteCreateNestedOneWithoutRessourcesInput
    favoris?: FavoriCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireCreateNestedManyWithoutRessourceInput
    notations?: NotationCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueCreateNestedManyWithoutRessourceInput
    reservations?: ReservationCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainCreateNestedManyWithoutRessourceInput
    Notification?: NotificationCreateNestedManyWithoutRessourceInput
  }

  export type RessourceUncheckedCreateWithoutPartagesInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    auteurId?: string | null
    universiteId: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    favoris?: FavoriUncheckedCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutRessourceInput
    notations?: NotationUncheckedCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceUncheckedCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueUncheckedCreateNestedManyWithoutRessourceInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainUncheckedCreateNestedManyWithoutRessourceInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutRessourceInput
  }

  export type RessourceCreateOrConnectWithoutPartagesInput = {
    where: RessourceWhereUniqueInput
    create: XOR<RessourceCreateWithoutPartagesInput, RessourceUncheckedCreateWithoutPartagesInput>
  }

  export type UniversiteCreateWithoutPartagesSourceInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeCreateNestedManyWithoutUniversiteInput
    partagesDestination?: PartageUniversiteCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteUncheckedCreateWithoutPartagesSourceInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserUncheckedCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceUncheckedCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedCreateNestedManyWithoutUniversiteInput
    partagesDestination?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesUncheckedCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteCreateOrConnectWithoutPartagesSourceInput = {
    where: UniversiteWhereUniqueInput
    create: XOR<UniversiteCreateWithoutPartagesSourceInput, UniversiteUncheckedCreateWithoutPartagesSourceInput>
  }

  export type UniversiteCreateWithoutPartagesDestinationInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteCreateNestedManyWithoutUniversiteSourceRelInput
    transactionsOrigine?: TransactionBlockchainCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteUncheckedCreateWithoutPartagesDestinationInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserUncheckedCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceUncheckedCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    transactionsOrigine?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesUncheckedCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteCreateOrConnectWithoutPartagesDestinationInput = {
    where: UniversiteWhereUniqueInput
    create: XOR<UniversiteCreateWithoutPartagesDestinationInput, UniversiteUncheckedCreateWithoutPartagesDestinationInput>
  }

  export type RessourceUpsertWithoutPartagesInput = {
    update: XOR<RessourceUpdateWithoutPartagesInput, RessourceUncheckedUpdateWithoutPartagesInput>
    create: XOR<RessourceCreateWithoutPartagesInput, RessourceUncheckedCreateWithoutPartagesInput>
    where?: RessourceWhereInput
  }

  export type RessourceUpdateToOneWithWhereWithoutPartagesInput = {
    where?: RessourceWhereInput
    data: XOR<RessourceUpdateWithoutPartagesInput, RessourceUncheckedUpdateWithoutPartagesInput>
  }

  export type RessourceUpdateWithoutPartagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    auteur?: UserUpdateOneWithoutContributionsNestedInput
    universite?: UniversiteUpdateOneRequiredWithoutRessourcesNestedInput
    favoris?: FavoriUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUpdateManyWithoutRessourceNestedInput
    notations?: NotationUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceUncheckedUpdateWithoutPartagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    auteurId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteId?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    favoris?: FavoriUncheckedUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutRessourceNestedInput
    notations?: NotationUncheckedUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUncheckedUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUncheckedUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUncheckedUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutRessourceNestedInput
  }

  export type UniversiteUpsertWithoutPartagesSourceInput = {
    update: XOR<UniversiteUpdateWithoutPartagesSourceInput, UniversiteUncheckedUpdateWithoutPartagesSourceInput>
    create: XOR<UniversiteCreateWithoutPartagesSourceInput, UniversiteUncheckedCreateWithoutPartagesSourceInput>
    where?: UniversiteWhereInput
  }

  export type UniversiteUpdateToOneWithWhereWithoutPartagesSourceInput = {
    where?: UniversiteWhereInput
    data: XOR<UniversiteUpdateWithoutPartagesSourceInput, UniversiteUncheckedUpdateWithoutPartagesSourceInput>
  }

  export type UniversiteUpdateWithoutPartagesSourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUpdateManyWithoutUniversiteNestedInput
    partagesDestination?: PartageUniversiteUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUncheckedUpdateWithoutPartagesSourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUncheckedUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUncheckedUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedUpdateManyWithoutUniversiteNestedInput
    partagesDestination?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUncheckedUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUpsertWithoutPartagesDestinationInput = {
    update: XOR<UniversiteUpdateWithoutPartagesDestinationInput, UniversiteUncheckedUpdateWithoutPartagesDestinationInput>
    create: XOR<UniversiteCreateWithoutPartagesDestinationInput, UniversiteUncheckedCreateWithoutPartagesDestinationInput>
    where?: UniversiteWhereInput
  }

  export type UniversiteUpdateToOneWithWhereWithoutPartagesDestinationInput = {
    where?: UniversiteWhereInput
    data: XOR<UniversiteUpdateWithoutPartagesDestinationInput, UniversiteUncheckedUpdateWithoutPartagesDestinationInput>
  }

  export type UniversiteUpdateWithoutPartagesDestinationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUpdateManyWithoutUniversiteSourceRelNestedInput
    transactionsOrigine?: TransactionBlockchainUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUncheckedUpdateWithoutPartagesDestinationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUncheckedUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUncheckedUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    transactionsOrigine?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUncheckedUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type RessourceCreateWithoutTransactionsInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    auteur?: UserCreateNestedOneWithoutContributionsInput
    universite: UniversiteCreateNestedOneWithoutRessourcesInput
    favoris?: FavoriCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireCreateNestedManyWithoutRessourceInput
    notations?: NotationCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueCreateNestedManyWithoutRessourceInput
    reservations?: ReservationCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutRessourceInput
    Notification?: NotificationCreateNestedManyWithoutRessourceInput
  }

  export type RessourceUncheckedCreateWithoutTransactionsInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    auteurId?: string | null
    universiteId: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    favoris?: FavoriUncheckedCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutRessourceInput
    notations?: NotationUncheckedCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceUncheckedCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteUncheckedCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueUncheckedCreateNestedManyWithoutRessourceInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutRessourceInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutRessourceInput
  }

  export type RessourceCreateOrConnectWithoutTransactionsInput = {
    where: RessourceWhereUniqueInput
    create: XOR<RessourceCreateWithoutTransactionsInput, RessourceUncheckedCreateWithoutTransactionsInput>
  }

  export type UniversiteCreateWithoutTransactionsOrigineInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsDestination?: TransactionBlockchainCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteUncheckedCreateWithoutTransactionsOrigineInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserUncheckedCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceUncheckedCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsDestination?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesUncheckedCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteCreateOrConnectWithoutTransactionsOrigineInput = {
    where: UniversiteWhereUniqueInput
    create: XOR<UniversiteCreateWithoutTransactionsOrigineInput, UniversiteUncheckedCreateWithoutTransactionsOrigineInput>
  }

  export type UniversiteCreateWithoutTransactionsDestinationInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainCreateNestedManyWithoutUniversiteOrigineRelInput
    HistoriqueAcces?: HistoriqueAccesCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteUncheckedCreateWithoutTransactionsDestinationInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserUncheckedCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceUncheckedCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteOrigineRelInput
    HistoriqueAcces?: HistoriqueAccesUncheckedCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteCreateOrConnectWithoutTransactionsDestinationInput = {
    where: UniversiteWhereUniqueInput
    create: XOR<UniversiteCreateWithoutTransactionsDestinationInput, UniversiteUncheckedCreateWithoutTransactionsDestinationInput>
  }

  export type RessourceUpsertWithoutTransactionsInput = {
    update: XOR<RessourceUpdateWithoutTransactionsInput, RessourceUncheckedUpdateWithoutTransactionsInput>
    create: XOR<RessourceCreateWithoutTransactionsInput, RessourceUncheckedCreateWithoutTransactionsInput>
    where?: RessourceWhereInput
  }

  export type RessourceUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: RessourceWhereInput
    data: XOR<RessourceUpdateWithoutTransactionsInput, RessourceUncheckedUpdateWithoutTransactionsInput>
  }

  export type RessourceUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    auteur?: UserUpdateOneWithoutContributionsNestedInput
    universite?: UniversiteUpdateOneRequiredWithoutRessourcesNestedInput
    favoris?: FavoriUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUpdateManyWithoutRessourceNestedInput
    notations?: NotationUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    auteurId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteId?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    favoris?: FavoriUncheckedUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutRessourceNestedInput
    notations?: NotationUncheckedUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUncheckedUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUncheckedUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUncheckedUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutRessourceNestedInput
  }

  export type UniversiteUpsertWithoutTransactionsOrigineInput = {
    update: XOR<UniversiteUpdateWithoutTransactionsOrigineInput, UniversiteUncheckedUpdateWithoutTransactionsOrigineInput>
    create: XOR<UniversiteCreateWithoutTransactionsOrigineInput, UniversiteUncheckedCreateWithoutTransactionsOrigineInput>
    where?: UniversiteWhereInput
  }

  export type UniversiteUpdateToOneWithWhereWithoutTransactionsOrigineInput = {
    where?: UniversiteWhereInput
    data: XOR<UniversiteUpdateWithoutTransactionsOrigineInput, UniversiteUncheckedUpdateWithoutTransactionsOrigineInput>
  }

  export type UniversiteUpdateWithoutTransactionsOrigineInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsDestination?: TransactionBlockchainUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUncheckedUpdateWithoutTransactionsOrigineInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUncheckedUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUncheckedUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsDestination?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUncheckedUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUpsertWithoutTransactionsDestinationInput = {
    update: XOR<UniversiteUpdateWithoutTransactionsDestinationInput, UniversiteUncheckedUpdateWithoutTransactionsDestinationInput>
    create: XOR<UniversiteCreateWithoutTransactionsDestinationInput, UniversiteUncheckedCreateWithoutTransactionsDestinationInput>
    where?: UniversiteWhereInput
  }

  export type UniversiteUpdateToOneWithWhereWithoutTransactionsDestinationInput = {
    where?: UniversiteWhereInput
    data: XOR<UniversiteUpdateWithoutTransactionsDestinationInput, UniversiteUncheckedUpdateWithoutTransactionsDestinationInput>
  }

  export type UniversiteUpdateWithoutTransactionsDestinationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUpdateManyWithoutUniversiteOrigineRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUncheckedUpdateWithoutTransactionsDestinationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUncheckedUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUncheckedUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteOrigineRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUncheckedUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UserCreateWithoutContributionsInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    universite: UniversiteCreateNestedOneWithoutUsersInput
    favoris?: FavoriCreateNestedManyWithoutUserInput
    commentaires?: CommentaireCreateNestedManyWithoutUserInput
    notations?: NotationCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutUserInput
    collections?: CollectionCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
    emprunts?: EmpruntCreateNestedManyWithoutUserInput
    recommandations?: RecommandationCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutContributionsInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    universiteId: string
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    favoris?: FavoriUncheckedCreateNestedManyWithoutUserInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutUserInput
    notations?: NotationUncheckedCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutUserInput
    collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUserInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditUncheckedCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutContributionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutContributionsInput, UserUncheckedCreateWithoutContributionsInput>
  }

  export type UniversiteCreateWithoutRessourcesInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteUncheckedCreateWithoutRessourcesInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserUncheckedCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedCreateNestedManyWithoutUniversiteInput
    partagesSource?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesUncheckedCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteCreateOrConnectWithoutRessourcesInput = {
    where: UniversiteWhereUniqueInput
    create: XOR<UniversiteCreateWithoutRessourcesInput, UniversiteUncheckedCreateWithoutRessourcesInput>
  }

  export type FavoriCreateWithoutRessourceInput = {
    id?: string
    dateAjout?: Date | string
    note?: string | null
    user: UserCreateNestedOneWithoutFavorisInput
  }

  export type FavoriUncheckedCreateWithoutRessourceInput = {
    id?: string
    userId: string
    dateAjout?: Date | string
    note?: string | null
  }

  export type FavoriCreateOrConnectWithoutRessourceInput = {
    where: FavoriWhereUniqueInput
    create: XOR<FavoriCreateWithoutRessourceInput, FavoriUncheckedCreateWithoutRessourceInput>
  }

  export type FavoriCreateManyRessourceInputEnvelope = {
    data: FavoriCreateManyRessourceInput | FavoriCreateManyRessourceInput[]
    skipDuplicates?: boolean
  }

  export type CommentaireCreateWithoutRessourceInput = {
    id?: string
    contenu: string
    dateCreation?: Date | string
    estModere?: boolean
    user: UserCreateNestedOneWithoutCommentairesInput
  }

  export type CommentaireUncheckedCreateWithoutRessourceInput = {
    id?: string
    userId: string
    contenu: string
    dateCreation?: Date | string
    estModere?: boolean
  }

  export type CommentaireCreateOrConnectWithoutRessourceInput = {
    where: CommentaireWhereUniqueInput
    create: XOR<CommentaireCreateWithoutRessourceInput, CommentaireUncheckedCreateWithoutRessourceInput>
  }

  export type CommentaireCreateManyRessourceInputEnvelope = {
    data: CommentaireCreateManyRessourceInput | CommentaireCreateManyRessourceInput[]
    skipDuplicates?: boolean
  }

  export type NotationCreateWithoutRessourceInput = {
    id?: string
    note: number
    dateNotation?: Date | string
    user: UserCreateNestedOneWithoutNotationsInput
  }

  export type NotationUncheckedCreateWithoutRessourceInput = {
    id?: string
    userId: string
    note: number
    dateNotation?: Date | string
  }

  export type NotationCreateOrConnectWithoutRessourceInput = {
    where: NotationWhereUniqueInput
    create: XOR<NotationCreateWithoutRessourceInput, NotationUncheckedCreateWithoutRessourceInput>
  }

  export type NotationCreateManyRessourceInputEnvelope = {
    data: NotationCreateManyRessourceInput | NotationCreateManyRessourceInput[]
    skipDuplicates?: boolean
  }

  export type HistoriqueAccesCreateWithoutRessourceInput = {
    id?: string
    dateAcces?: Date | string
    typeAcces: $Enums.TypeAcces
    ipAcces: string
    user: UserCreateNestedOneWithoutHistoriquesInput
    universiteSrcRel?: UniversiteCreateNestedOneWithoutHistoriqueAccesInput
  }

  export type HistoriqueAccesUncheckedCreateWithoutRessourceInput = {
    id?: string
    userId: string
    dateAcces?: Date | string
    typeAcces: $Enums.TypeAcces
    ipAcces: string
    universiteSrc?: string | null
  }

  export type HistoriqueAccesCreateOrConnectWithoutRessourceInput = {
    where: HistoriqueAccesWhereUniqueInput
    create: XOR<HistoriqueAccesCreateWithoutRessourceInput, HistoriqueAccesUncheckedCreateWithoutRessourceInput>
  }

  export type HistoriqueAccesCreateManyRessourceInputEnvelope = {
    data: HistoriqueAccesCreateManyRessourceInput | HistoriqueAccesCreateManyRessourceInput[]
    skipDuplicates?: boolean
  }

  export type CollectionRessourceCreateWithoutRessourceInput = {
    id?: string
    dateAjout?: Date | string
    notes?: string | null
    collection: CollectionCreateNestedOneWithoutRessourcesInput
  }

  export type CollectionRessourceUncheckedCreateWithoutRessourceInput = {
    id?: string
    collectionId: string
    dateAjout?: Date | string
    notes?: string | null
  }

  export type CollectionRessourceCreateOrConnectWithoutRessourceInput = {
    where: CollectionRessourceWhereUniqueInput
    create: XOR<CollectionRessourceCreateWithoutRessourceInput, CollectionRessourceUncheckedCreateWithoutRessourceInput>
  }

  export type CollectionRessourceCreateManyRessourceInputEnvelope = {
    data: CollectionRessourceCreateManyRessourceInput | CollectionRessourceCreateManyRessourceInput[]
    skipDuplicates?: boolean
  }

  export type PartageUniversiteCreateWithoutRessourceInput = {
    id?: string
    datePartage?: Date | string
    estActif?: boolean
    universiteSourceRel: UniversiteCreateNestedOneWithoutPartagesSourceInput
    universiteDestinationRel: UniversiteCreateNestedOneWithoutPartagesDestinationInput
  }

  export type PartageUniversiteUncheckedCreateWithoutRessourceInput = {
    id?: string
    universiteSource: string
    universiteDestination: string
    datePartage?: Date | string
    estActif?: boolean
  }

  export type PartageUniversiteCreateOrConnectWithoutRessourceInput = {
    where: PartageUniversiteWhereUniqueInput
    create: XOR<PartageUniversiteCreateWithoutRessourceInput, PartageUniversiteUncheckedCreateWithoutRessourceInput>
  }

  export type PartageUniversiteCreateManyRessourceInputEnvelope = {
    data: PartageUniversiteCreateManyRessourceInput | PartageUniversiteCreateManyRessourceInput[]
    skipDuplicates?: boolean
  }

  export type ExemplairePhysiqueCreateWithoutRessourceInput = {
    id?: string
    cote: string
    etat?: $Enums.EtatExemplaire
    disponible?: boolean
    localisation: string
    dateAcquisition?: Date | string | null
    estReservableExterne?: boolean | null
    estEmpruntableExterne?: boolean | null
    emprunts?: EmpruntCreateNestedManyWithoutExemplaireInput
  }

  export type ExemplairePhysiqueUncheckedCreateWithoutRessourceInput = {
    id?: string
    cote: string
    etat?: $Enums.EtatExemplaire
    disponible?: boolean
    localisation: string
    dateAcquisition?: Date | string | null
    estReservableExterne?: boolean | null
    estEmpruntableExterne?: boolean | null
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutExemplaireInput
  }

  export type ExemplairePhysiqueCreateOrConnectWithoutRessourceInput = {
    where: ExemplairePhysiqueWhereUniqueInput
    create: XOR<ExemplairePhysiqueCreateWithoutRessourceInput, ExemplairePhysiqueUncheckedCreateWithoutRessourceInput>
  }

  export type ExemplairePhysiqueCreateManyRessourceInputEnvelope = {
    data: ExemplairePhysiqueCreateManyRessourceInput | ExemplairePhysiqueCreateManyRessourceInput[]
    skipDuplicates?: boolean
  }

  export type ReservationCreateWithoutRessourceInput = {
    id?: string
    dateReservation?: Date | string
    dateDebut: Date | string
    dateFin: Date | string
    statut?: $Enums.StatutReservation
    commentaire?: string | null
    motifReservation?: string | null
    validePar?: string | null
    user?: UserCreateNestedOneWithoutReservationsInput
    universiteEmprunteurRel: UniversiteCreateNestedOneWithoutReservationsInput
  }

  export type ReservationUncheckedCreateWithoutRessourceInput = {
    id?: string
    userId?: string | null
    dateReservation?: Date | string
    dateDebut: Date | string
    dateFin: Date | string
    statut?: $Enums.StatutReservation
    commentaire?: string | null
    universiteEmprunteur: string
    motifReservation?: string | null
    validePar?: string | null
  }

  export type ReservationCreateOrConnectWithoutRessourceInput = {
    where: ReservationWhereUniqueInput
    create: XOR<ReservationCreateWithoutRessourceInput, ReservationUncheckedCreateWithoutRessourceInput>
  }

  export type ReservationCreateManyRessourceInputEnvelope = {
    data: ReservationCreateManyRessourceInput | ReservationCreateManyRessourceInput[]
    skipDuplicates?: boolean
  }

  export type RecommandationCreateWithoutRessourceInput = {
    id?: string
    dateRecommandation?: Date | string
    score: number
    motif: $Enums.MotifRecommandation
    estVue?: boolean
    estInteruniversitaire?: boolean
    user: UserCreateNestedOneWithoutRecommandationsInput
    universiteSourceRel?: UniversiteCreateNestedOneWithoutRecommandationsSourceInput
  }

  export type RecommandationUncheckedCreateWithoutRessourceInput = {
    id?: string
    userId: string
    dateRecommandation?: Date | string
    score: number
    motif: $Enums.MotifRecommandation
    estVue?: boolean
    estInteruniversitaire?: boolean
    universiteSource?: string | null
  }

  export type RecommandationCreateOrConnectWithoutRessourceInput = {
    where: RecommandationWhereUniqueInput
    create: XOR<RecommandationCreateWithoutRessourceInput, RecommandationUncheckedCreateWithoutRessourceInput>
  }

  export type RecommandationCreateManyRessourceInputEnvelope = {
    data: RecommandationCreateManyRessourceInput | RecommandationCreateManyRessourceInput[]
    skipDuplicates?: boolean
  }

  export type DonneesRecommandationCreateWithoutRessourceInput = {
    id?: string
    score: number
    typeInteraction: $Enums.TypeInteraction
    dateDonnee?: Date | string
    user: UserCreateNestedOneWithoutDonneesRecommandationInput
  }

  export type DonneesRecommandationUncheckedCreateWithoutRessourceInput = {
    id?: string
    userId: string
    score: number
    typeInteraction: $Enums.TypeInteraction
    dateDonnee?: Date | string
  }

  export type DonneesRecommandationCreateOrConnectWithoutRessourceInput = {
    where: DonneesRecommandationWhereUniqueInput
    create: XOR<DonneesRecommandationCreateWithoutRessourceInput, DonneesRecommandationUncheckedCreateWithoutRessourceInput>
  }

  export type DonneesRecommandationCreateManyRessourceInputEnvelope = {
    data: DonneesRecommandationCreateManyRessourceInput | DonneesRecommandationCreateManyRessourceInput[]
    skipDuplicates?: boolean
  }

  export type TransactionBlockchainCreateWithoutRessourceInput = {
    id?: string
    referenceBlockchain: string
    typeTransaction: $Enums.TypeTransaction
    dateTransaction?: Date | string
    statut: $Enums.StatutTransaction
    hashTransaction: string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
    universiteOrigineRel: UniversiteCreateNestedOneWithoutTransactionsOrigineInput
    universiteDestinationRel?: UniversiteCreateNestedOneWithoutTransactionsDestinationInput
  }

  export type TransactionBlockchainUncheckedCreateWithoutRessourceInput = {
    id?: string
    referenceBlockchain: string
    typeTransaction: $Enums.TypeTransaction
    universiteOrigine: string
    universiteDestination?: string | null
    dateTransaction?: Date | string
    statut: $Enums.StatutTransaction
    hashTransaction: string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TransactionBlockchainCreateOrConnectWithoutRessourceInput = {
    where: TransactionBlockchainWhereUniqueInput
    create: XOR<TransactionBlockchainCreateWithoutRessourceInput, TransactionBlockchainUncheckedCreateWithoutRessourceInput>
  }

  export type TransactionBlockchainCreateManyRessourceInputEnvelope = {
    data: TransactionBlockchainCreateManyRessourceInput | TransactionBlockchainCreateManyRessourceInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutRessourceInput = {
    id?: string
    titre: string
    message: string
    dateCreation?: Date | string
    estLue?: boolean
    typeNotification: $Enums.TypeNotification
    user: UserCreateNestedOneWithoutNotificationInput
  }

  export type NotificationUncheckedCreateWithoutRessourceInput = {
    id?: string
    userId: string
    titre: string
    message: string
    dateCreation?: Date | string
    estLue?: boolean
    typeNotification: $Enums.TypeNotification
  }

  export type NotificationCreateOrConnectWithoutRessourceInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutRessourceInput, NotificationUncheckedCreateWithoutRessourceInput>
  }

  export type NotificationCreateManyRessourceInputEnvelope = {
    data: NotificationCreateManyRessourceInput | NotificationCreateManyRessourceInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutContributionsInput = {
    update: XOR<UserUpdateWithoutContributionsInput, UserUncheckedUpdateWithoutContributionsInput>
    create: XOR<UserCreateWithoutContributionsInput, UserUncheckedCreateWithoutContributionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutContributionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutContributionsInput, UserUncheckedUpdateWithoutContributionsInput>
  }

  export type UserUpdateWithoutContributionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universite?: UniversiteUpdateOneRequiredWithoutUsersNestedInput
    favoris?: FavoriUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUpdateManyWithoutUserNestedInput
    notations?: NotationUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutUserNestedInput
    collections?: CollectionUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUpdateManyWithoutUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutContributionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    universiteId?: StringFieldUpdateOperationsInput | string
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    favoris?: FavoriUncheckedUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutUserNestedInput
    notations?: NotationUncheckedUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutUserNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUncheckedUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UniversiteUpsertWithoutRessourcesInput = {
    update: XOR<UniversiteUpdateWithoutRessourcesInput, UniversiteUncheckedUpdateWithoutRessourcesInput>
    create: XOR<UniversiteCreateWithoutRessourcesInput, UniversiteUncheckedCreateWithoutRessourcesInput>
    where?: UniversiteWhereInput
  }

  export type UniversiteUpdateToOneWithWhereWithoutRessourcesInput = {
    where?: UniversiteWhereInput
    data: XOR<UniversiteUpdateWithoutRessourcesInput, UniversiteUncheckedUpdateWithoutRessourcesInput>
  }

  export type UniversiteUpdateWithoutRessourcesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUncheckedUpdateWithoutRessourcesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUncheckedUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesBibliotheque?: StatistiqueBibliothequeUncheckedUpdateManyWithoutUniversiteNestedInput
    partagesSource?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUncheckedUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type FavoriUpsertWithWhereUniqueWithoutRessourceInput = {
    where: FavoriWhereUniqueInput
    update: XOR<FavoriUpdateWithoutRessourceInput, FavoriUncheckedUpdateWithoutRessourceInput>
    create: XOR<FavoriCreateWithoutRessourceInput, FavoriUncheckedCreateWithoutRessourceInput>
  }

  export type FavoriUpdateWithWhereUniqueWithoutRessourceInput = {
    where: FavoriWhereUniqueInput
    data: XOR<FavoriUpdateWithoutRessourceInput, FavoriUncheckedUpdateWithoutRessourceInput>
  }

  export type FavoriUpdateManyWithWhereWithoutRessourceInput = {
    where: FavoriScalarWhereInput
    data: XOR<FavoriUpdateManyMutationInput, FavoriUncheckedUpdateManyWithoutRessourceInput>
  }

  export type CommentaireUpsertWithWhereUniqueWithoutRessourceInput = {
    where: CommentaireWhereUniqueInput
    update: XOR<CommentaireUpdateWithoutRessourceInput, CommentaireUncheckedUpdateWithoutRessourceInput>
    create: XOR<CommentaireCreateWithoutRessourceInput, CommentaireUncheckedCreateWithoutRessourceInput>
  }

  export type CommentaireUpdateWithWhereUniqueWithoutRessourceInput = {
    where: CommentaireWhereUniqueInput
    data: XOR<CommentaireUpdateWithoutRessourceInput, CommentaireUncheckedUpdateWithoutRessourceInput>
  }

  export type CommentaireUpdateManyWithWhereWithoutRessourceInput = {
    where: CommentaireScalarWhereInput
    data: XOR<CommentaireUpdateManyMutationInput, CommentaireUncheckedUpdateManyWithoutRessourceInput>
  }

  export type NotationUpsertWithWhereUniqueWithoutRessourceInput = {
    where: NotationWhereUniqueInput
    update: XOR<NotationUpdateWithoutRessourceInput, NotationUncheckedUpdateWithoutRessourceInput>
    create: XOR<NotationCreateWithoutRessourceInput, NotationUncheckedCreateWithoutRessourceInput>
  }

  export type NotationUpdateWithWhereUniqueWithoutRessourceInput = {
    where: NotationWhereUniqueInput
    data: XOR<NotationUpdateWithoutRessourceInput, NotationUncheckedUpdateWithoutRessourceInput>
  }

  export type NotationUpdateManyWithWhereWithoutRessourceInput = {
    where: NotationScalarWhereInput
    data: XOR<NotationUpdateManyMutationInput, NotationUncheckedUpdateManyWithoutRessourceInput>
  }

  export type HistoriqueAccesUpsertWithWhereUniqueWithoutRessourceInput = {
    where: HistoriqueAccesWhereUniqueInput
    update: XOR<HistoriqueAccesUpdateWithoutRessourceInput, HistoriqueAccesUncheckedUpdateWithoutRessourceInput>
    create: XOR<HistoriqueAccesCreateWithoutRessourceInput, HistoriqueAccesUncheckedCreateWithoutRessourceInput>
  }

  export type HistoriqueAccesUpdateWithWhereUniqueWithoutRessourceInput = {
    where: HistoriqueAccesWhereUniqueInput
    data: XOR<HistoriqueAccesUpdateWithoutRessourceInput, HistoriqueAccesUncheckedUpdateWithoutRessourceInput>
  }

  export type HistoriqueAccesUpdateManyWithWhereWithoutRessourceInput = {
    where: HistoriqueAccesScalarWhereInput
    data: XOR<HistoriqueAccesUpdateManyMutationInput, HistoriqueAccesUncheckedUpdateManyWithoutRessourceInput>
  }

  export type CollectionRessourceUpsertWithWhereUniqueWithoutRessourceInput = {
    where: CollectionRessourceWhereUniqueInput
    update: XOR<CollectionRessourceUpdateWithoutRessourceInput, CollectionRessourceUncheckedUpdateWithoutRessourceInput>
    create: XOR<CollectionRessourceCreateWithoutRessourceInput, CollectionRessourceUncheckedCreateWithoutRessourceInput>
  }

  export type CollectionRessourceUpdateWithWhereUniqueWithoutRessourceInput = {
    where: CollectionRessourceWhereUniqueInput
    data: XOR<CollectionRessourceUpdateWithoutRessourceInput, CollectionRessourceUncheckedUpdateWithoutRessourceInput>
  }

  export type CollectionRessourceUpdateManyWithWhereWithoutRessourceInput = {
    where: CollectionRessourceScalarWhereInput
    data: XOR<CollectionRessourceUpdateManyMutationInput, CollectionRessourceUncheckedUpdateManyWithoutRessourceInput>
  }

  export type PartageUniversiteUpsertWithWhereUniqueWithoutRessourceInput = {
    where: PartageUniversiteWhereUniqueInput
    update: XOR<PartageUniversiteUpdateWithoutRessourceInput, PartageUniversiteUncheckedUpdateWithoutRessourceInput>
    create: XOR<PartageUniversiteCreateWithoutRessourceInput, PartageUniversiteUncheckedCreateWithoutRessourceInput>
  }

  export type PartageUniversiteUpdateWithWhereUniqueWithoutRessourceInput = {
    where: PartageUniversiteWhereUniqueInput
    data: XOR<PartageUniversiteUpdateWithoutRessourceInput, PartageUniversiteUncheckedUpdateWithoutRessourceInput>
  }

  export type PartageUniversiteUpdateManyWithWhereWithoutRessourceInput = {
    where: PartageUniversiteScalarWhereInput
    data: XOR<PartageUniversiteUpdateManyMutationInput, PartageUniversiteUncheckedUpdateManyWithoutRessourceInput>
  }

  export type ExemplairePhysiqueUpsertWithWhereUniqueWithoutRessourceInput = {
    where: ExemplairePhysiqueWhereUniqueInput
    update: XOR<ExemplairePhysiqueUpdateWithoutRessourceInput, ExemplairePhysiqueUncheckedUpdateWithoutRessourceInput>
    create: XOR<ExemplairePhysiqueCreateWithoutRessourceInput, ExemplairePhysiqueUncheckedCreateWithoutRessourceInput>
  }

  export type ExemplairePhysiqueUpdateWithWhereUniqueWithoutRessourceInput = {
    where: ExemplairePhysiqueWhereUniqueInput
    data: XOR<ExemplairePhysiqueUpdateWithoutRessourceInput, ExemplairePhysiqueUncheckedUpdateWithoutRessourceInput>
  }

  export type ExemplairePhysiqueUpdateManyWithWhereWithoutRessourceInput = {
    where: ExemplairePhysiqueScalarWhereInput
    data: XOR<ExemplairePhysiqueUpdateManyMutationInput, ExemplairePhysiqueUncheckedUpdateManyWithoutRessourceInput>
  }

  export type ExemplairePhysiqueScalarWhereInput = {
    AND?: ExemplairePhysiqueScalarWhereInput | ExemplairePhysiqueScalarWhereInput[]
    OR?: ExemplairePhysiqueScalarWhereInput[]
    NOT?: ExemplairePhysiqueScalarWhereInput | ExemplairePhysiqueScalarWhereInput[]
    id?: StringFilter<"ExemplairePhysique"> | string
    ressourceId?: StringFilter<"ExemplairePhysique"> | string
    cote?: StringFilter<"ExemplairePhysique"> | string
    etat?: EnumEtatExemplaireFilter<"ExemplairePhysique"> | $Enums.EtatExemplaire
    disponible?: BoolFilter<"ExemplairePhysique"> | boolean
    localisation?: StringFilter<"ExemplairePhysique"> | string
    dateAcquisition?: DateTimeNullableFilter<"ExemplairePhysique"> | Date | string | null
    estReservableExterne?: BoolNullableFilter<"ExemplairePhysique"> | boolean | null
    estEmpruntableExterne?: BoolNullableFilter<"ExemplairePhysique"> | boolean | null
  }

  export type ReservationUpsertWithWhereUniqueWithoutRessourceInput = {
    where: ReservationWhereUniqueInput
    update: XOR<ReservationUpdateWithoutRessourceInput, ReservationUncheckedUpdateWithoutRessourceInput>
    create: XOR<ReservationCreateWithoutRessourceInput, ReservationUncheckedCreateWithoutRessourceInput>
  }

  export type ReservationUpdateWithWhereUniqueWithoutRessourceInput = {
    where: ReservationWhereUniqueInput
    data: XOR<ReservationUpdateWithoutRessourceInput, ReservationUncheckedUpdateWithoutRessourceInput>
  }

  export type ReservationUpdateManyWithWhereWithoutRessourceInput = {
    where: ReservationScalarWhereInput
    data: XOR<ReservationUpdateManyMutationInput, ReservationUncheckedUpdateManyWithoutRessourceInput>
  }

  export type RecommandationUpsertWithWhereUniqueWithoutRessourceInput = {
    where: RecommandationWhereUniqueInput
    update: XOR<RecommandationUpdateWithoutRessourceInput, RecommandationUncheckedUpdateWithoutRessourceInput>
    create: XOR<RecommandationCreateWithoutRessourceInput, RecommandationUncheckedCreateWithoutRessourceInput>
  }

  export type RecommandationUpdateWithWhereUniqueWithoutRessourceInput = {
    where: RecommandationWhereUniqueInput
    data: XOR<RecommandationUpdateWithoutRessourceInput, RecommandationUncheckedUpdateWithoutRessourceInput>
  }

  export type RecommandationUpdateManyWithWhereWithoutRessourceInput = {
    where: RecommandationScalarWhereInput
    data: XOR<RecommandationUpdateManyMutationInput, RecommandationUncheckedUpdateManyWithoutRessourceInput>
  }

  export type DonneesRecommandationUpsertWithWhereUniqueWithoutRessourceInput = {
    where: DonneesRecommandationWhereUniqueInput
    update: XOR<DonneesRecommandationUpdateWithoutRessourceInput, DonneesRecommandationUncheckedUpdateWithoutRessourceInput>
    create: XOR<DonneesRecommandationCreateWithoutRessourceInput, DonneesRecommandationUncheckedCreateWithoutRessourceInput>
  }

  export type DonneesRecommandationUpdateWithWhereUniqueWithoutRessourceInput = {
    where: DonneesRecommandationWhereUniqueInput
    data: XOR<DonneesRecommandationUpdateWithoutRessourceInput, DonneesRecommandationUncheckedUpdateWithoutRessourceInput>
  }

  export type DonneesRecommandationUpdateManyWithWhereWithoutRessourceInput = {
    where: DonneesRecommandationScalarWhereInput
    data: XOR<DonneesRecommandationUpdateManyMutationInput, DonneesRecommandationUncheckedUpdateManyWithoutRessourceInput>
  }

  export type TransactionBlockchainUpsertWithWhereUniqueWithoutRessourceInput = {
    where: TransactionBlockchainWhereUniqueInput
    update: XOR<TransactionBlockchainUpdateWithoutRessourceInput, TransactionBlockchainUncheckedUpdateWithoutRessourceInput>
    create: XOR<TransactionBlockchainCreateWithoutRessourceInput, TransactionBlockchainUncheckedCreateWithoutRessourceInput>
  }

  export type TransactionBlockchainUpdateWithWhereUniqueWithoutRessourceInput = {
    where: TransactionBlockchainWhereUniqueInput
    data: XOR<TransactionBlockchainUpdateWithoutRessourceInput, TransactionBlockchainUncheckedUpdateWithoutRessourceInput>
  }

  export type TransactionBlockchainUpdateManyWithWhereWithoutRessourceInput = {
    where: TransactionBlockchainScalarWhereInput
    data: XOR<TransactionBlockchainUpdateManyMutationInput, TransactionBlockchainUncheckedUpdateManyWithoutRessourceInput>
  }

  export type NotificationUpsertWithWhereUniqueWithoutRessourceInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutRessourceInput, NotificationUncheckedUpdateWithoutRessourceInput>
    create: XOR<NotificationCreateWithoutRessourceInput, NotificationUncheckedCreateWithoutRessourceInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutRessourceInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutRessourceInput, NotificationUncheckedUpdateWithoutRessourceInput>
  }

  export type NotificationUpdateManyWithWhereWithoutRessourceInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutRessourceInput>
  }

  export type UniversiteCreateWithoutStatistiquesBibliothequeInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationCreateNestedManyWithoutUniversiteSourceRelInput
    partagesSource?: PartageUniversiteCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteUncheckedCreateWithoutStatistiquesBibliothequeInput = {
    id?: string
    nom: string
    adresse?: string | null
    ville: string
    pays: string
    siteWeb?: string | null
    dateCreation?: Date | string
    adresseBlockchain?: string | null
    estActive?: boolean
    users?: UserUncheckedCreateNestedManyWithoutUniversiteInput
    ressources?: RessourceUncheckedCreateNestedManyWithoutUniversiteInput
    conventionsSource?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite1Input
    conventionsDestination?: ConventionInteruniversitaireUncheckedCreateNestedManyWithoutUniversite2Input
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUniversiteEmprunteurRelInput
    recommandationsSource?: RecommandationUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    partagesSource?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteSourceRelInput
    partagesDestination?: PartageUniversiteUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    transactionsOrigine?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteOrigineRelInput
    transactionsDestination?: TransactionBlockchainUncheckedCreateNestedManyWithoutUniversiteDestinationRelInput
    HistoriqueAcces?: HistoriqueAccesUncheckedCreateNestedManyWithoutUniversiteSrcRelInput
  }

  export type UniversiteCreateOrConnectWithoutStatistiquesBibliothequeInput = {
    where: UniversiteWhereUniqueInput
    create: XOR<UniversiteCreateWithoutStatistiquesBibliothequeInput, UniversiteUncheckedCreateWithoutStatistiquesBibliothequeInput>
  }

  export type UniversiteUpsertWithoutStatistiquesBibliothequeInput = {
    update: XOR<UniversiteUpdateWithoutStatistiquesBibliothequeInput, UniversiteUncheckedUpdateWithoutStatistiquesBibliothequeInput>
    create: XOR<UniversiteCreateWithoutStatistiquesBibliothequeInput, UniversiteUncheckedCreateWithoutStatistiquesBibliothequeInput>
    where?: UniversiteWhereInput
  }

  export type UniversiteUpdateToOneWithWhereWithoutStatistiquesBibliothequeInput = {
    where?: UniversiteWhereInput
    data: XOR<UniversiteUpdateWithoutStatistiquesBibliothequeInput, UniversiteUncheckedUpdateWithoutStatistiquesBibliothequeInput>
  }

  export type UniversiteUpdateWithoutStatistiquesBibliothequeInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesSource?: PartageUniversiteUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UniversiteUncheckedUpdateWithoutStatistiquesBibliothequeInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    ville?: StringFieldUpdateOperationsInput | string
    pays?: StringFieldUpdateOperationsInput | string
    siteWeb?: NullableStringFieldUpdateOperationsInput | string | null
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    adresseBlockchain?: NullableStringFieldUpdateOperationsInput | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUncheckedUpdateManyWithoutUniversiteNestedInput
    ressources?: RessourceUncheckedUpdateManyWithoutUniversiteNestedInput
    conventionsSource?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite1NestedInput
    conventionsDestination?: ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite2NestedInput
    statistiquesSource?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    statistiquesDestination?: StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUniversiteEmprunteurRelNestedInput
    recommandationsSource?: RecommandationUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesSource?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteSourceRelNestedInput
    partagesDestination?: PartageUniversiteUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    transactionsOrigine?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteOrigineRelNestedInput
    transactionsDestination?: TransactionBlockchainUncheckedUpdateManyWithoutUniversiteDestinationRelNestedInput
    HistoriqueAcces?: HistoriqueAccesUncheckedUpdateManyWithoutUniversiteSrcRelNestedInput
  }

  export type UserCreateWithoutNotificationInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    universite: UniversiteCreateNestedOneWithoutUsersInput
    contributions?: RessourceCreateNestedManyWithoutAuteurInput
    favoris?: FavoriCreateNestedManyWithoutUserInput
    commentaires?: CommentaireCreateNestedManyWithoutUserInput
    notations?: NotationCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutUserInput
    collections?: CollectionCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
    emprunts?: EmpruntCreateNestedManyWithoutUserInput
    recommandations?: RecommandationCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutNotificationInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    universiteId: string
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    contributions?: RessourceUncheckedCreateNestedManyWithoutAuteurInput
    favoris?: FavoriUncheckedCreateNestedManyWithoutUserInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutUserInput
    notations?: NotationUncheckedCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutUserInput
    collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUserInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutUserInput
    JournalAudit?: JournalAuditUncheckedCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutNotificationInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotificationInput, UserUncheckedCreateWithoutNotificationInput>
  }

  export type RessourceCreateWithoutNotificationInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    auteur?: UserCreateNestedOneWithoutContributionsInput
    universite: UniversiteCreateNestedOneWithoutRessourcesInput
    favoris?: FavoriCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireCreateNestedManyWithoutRessourceInput
    notations?: NotationCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueCreateNestedManyWithoutRessourceInput
    reservations?: ReservationCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainCreateNestedManyWithoutRessourceInput
  }

  export type RessourceUncheckedCreateWithoutNotificationInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    auteurId?: string | null
    universiteId: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
    favoris?: FavoriUncheckedCreateNestedManyWithoutRessourceInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutRessourceInput
    notations?: NotationUncheckedCreateNestedManyWithoutRessourceInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutRessourceInput
    collections?: CollectionRessourceUncheckedCreateNestedManyWithoutRessourceInput
    partages?: PartageUniversiteUncheckedCreateNestedManyWithoutRessourceInput
    exemplaires?: ExemplairePhysiqueUncheckedCreateNestedManyWithoutRessourceInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRessourceInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutRessourceInput
    donneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutRessourceInput
    transactions?: TransactionBlockchainUncheckedCreateNestedManyWithoutRessourceInput
  }

  export type RessourceCreateOrConnectWithoutNotificationInput = {
    where: RessourceWhereUniqueInput
    create: XOR<RessourceCreateWithoutNotificationInput, RessourceUncheckedCreateWithoutNotificationInput>
  }

  export type UserUpsertWithoutNotificationInput = {
    update: XOR<UserUpdateWithoutNotificationInput, UserUncheckedUpdateWithoutNotificationInput>
    create: XOR<UserCreateWithoutNotificationInput, UserUncheckedCreateWithoutNotificationInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotificationInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotificationInput, UserUncheckedUpdateWithoutNotificationInput>
  }

  export type UserUpdateWithoutNotificationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universite?: UniversiteUpdateOneRequiredWithoutUsersNestedInput
    contributions?: RessourceUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUpdateManyWithoutUserNestedInput
    notations?: NotationUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutUserNestedInput
    collections?: CollectionUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutNotificationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    universiteId?: StringFieldUpdateOperationsInput | string
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contributions?: RessourceUncheckedUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUncheckedUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutUserNestedInput
    notations?: NotationUncheckedUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutUserNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUncheckedUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type RessourceUpsertWithoutNotificationInput = {
    update: XOR<RessourceUpdateWithoutNotificationInput, RessourceUncheckedUpdateWithoutNotificationInput>
    create: XOR<RessourceCreateWithoutNotificationInput, RessourceUncheckedCreateWithoutNotificationInput>
    where?: RessourceWhereInput
  }

  export type RessourceUpdateToOneWithWhereWithoutNotificationInput = {
    where?: RessourceWhereInput
    data: XOR<RessourceUpdateWithoutNotificationInput, RessourceUncheckedUpdateWithoutNotificationInput>
  }

  export type RessourceUpdateWithoutNotificationInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    auteur?: UserUpdateOneWithoutContributionsNestedInput
    universite?: UniversiteUpdateOneRequiredWithoutRessourcesNestedInput
    favoris?: FavoriUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUpdateManyWithoutRessourceNestedInput
    notations?: NotationUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceUncheckedUpdateWithoutNotificationInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    auteurId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteId?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    favoris?: FavoriUncheckedUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutRessourceNestedInput
    notations?: NotationUncheckedUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUncheckedUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUncheckedUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUncheckedUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUncheckedUpdateManyWithoutRessourceNestedInput
  }

  export type UserCreateWithoutJournalAuditInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    universite: UniversiteCreateNestedOneWithoutUsersInput
    contributions?: RessourceCreateNestedManyWithoutAuteurInput
    favoris?: FavoriCreateNestedManyWithoutUserInput
    commentaires?: CommentaireCreateNestedManyWithoutUserInput
    notations?: NotationCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesCreateNestedManyWithoutUserInput
    collections?: CollectionCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
    emprunts?: EmpruntCreateNestedManyWithoutUserInput
    recommandations?: RecommandationCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationCreateNestedManyWithoutUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutJournalAuditInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    universiteId: string
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
    contributions?: RessourceUncheckedCreateNestedManyWithoutAuteurInput
    favoris?: FavoriUncheckedCreateNestedManyWithoutUserInput
    commentaires?: CommentaireUncheckedCreateNestedManyWithoutUserInput
    notations?: NotationUncheckedCreateNestedManyWithoutUserInput
    historiques?: HistoriqueAccesUncheckedCreateNestedManyWithoutUserInput
    collections?: CollectionUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
    emprunts?: EmpruntUncheckedCreateNestedManyWithoutUserInput
    recommandations?: RecommandationUncheckedCreateNestedManyWithoutUserInput
    DonneesRecommandation?: DonneesRecommandationUncheckedCreateNestedManyWithoutUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutJournalAuditInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutJournalAuditInput, UserUncheckedCreateWithoutJournalAuditInput>
  }

  export type UserUpsertWithoutJournalAuditInput = {
    update: XOR<UserUpdateWithoutJournalAuditInput, UserUncheckedUpdateWithoutJournalAuditInput>
    create: XOR<UserCreateWithoutJournalAuditInput, UserUncheckedCreateWithoutJournalAuditInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutJournalAuditInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutJournalAuditInput, UserUncheckedUpdateWithoutJournalAuditInput>
  }

  export type UserUpdateWithoutJournalAuditInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universite?: UniversiteUpdateOneRequiredWithoutUsersNestedInput
    contributions?: RessourceUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUpdateManyWithoutUserNestedInput
    notations?: NotationUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutUserNestedInput
    collections?: CollectionUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUpdateManyWithoutUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutJournalAuditInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    universiteId?: StringFieldUpdateOperationsInput | string
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contributions?: RessourceUncheckedUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUncheckedUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutUserNestedInput
    notations?: NotationUncheckedUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutUserNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type EmpruntCreateManyExemplaireInput = {
    id?: string
    userId: string
    dateEmprunt?: Date | string
    dateRetourPrevue: Date | string
    dateRetourEffective?: Date | string | null
    statut?: $Enums.StatutEmprunt
    commentaire?: string | null
    universiteEmprunteur: string
    estEmpruntExterne?: boolean
    motifEmprunt?: string | null
    validePar?: string | null
  }

  export type EmpruntUpdateWithoutExemplaireInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateEmprunt?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourPrevue?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourEffective?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statut?: EnumStatutEmpruntFieldUpdateOperationsInput | $Enums.StatutEmprunt
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntExterne?: BoolFieldUpdateOperationsInput | boolean
    motifEmprunt?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutEmpruntsNestedInput
    universiteEmprunteurRel?: UniversiteUpdateOneRequiredWithoutEmpruntsNestedInput
  }

  export type EmpruntUncheckedUpdateWithoutExemplaireInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dateEmprunt?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourPrevue?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourEffective?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statut?: EnumStatutEmpruntFieldUpdateOperationsInput | $Enums.StatutEmprunt
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    universiteEmprunteur?: StringFieldUpdateOperationsInput | string
    estEmpruntExterne?: BoolFieldUpdateOperationsInput | boolean
    motifEmprunt?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EmpruntUncheckedUpdateManyWithoutExemplaireInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dateEmprunt?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourPrevue?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourEffective?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statut?: EnumStatutEmpruntFieldUpdateOperationsInput | $Enums.StatutEmprunt
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    universiteEmprunteur?: StringFieldUpdateOperationsInput | string
    estEmpruntExterne?: BoolFieldUpdateOperationsInput | boolean
    motifEmprunt?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateManyUniversiteInput = {
    id?: string
    email: string
    motDePasse: string
    nom: string
    prenom: string
    image?: string | null
    role: $Enums.RoleUser
    departement?: string | null
    faculte?: string | null
    specialite?: string | null
    niveauEtudes?: string | null
    dateInscription?: Date | string
    derniereConnexion?: Date | string | null
    estActif?: boolean
    preferencesRecommandation?: string | null
    frequenceRecommandation?: $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: boolean
    droitReservationExterieure?: boolean
    universiteAutorisees?: string | null
    nbMaxEmpruntsExternes?: number
    statutValidation?: string | null
    dateValidation?: Date | string | null
  }

  export type RessourceCreateManyUniversiteInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    auteurId?: string | null
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
  }

  export type ConventionInteruniversitaireCreateManyUniversite1Input = {
    id?: string
    universiteId2: string
    dateDebut: Date | string
    dateFin?: Date | string | null
    estActive?: boolean
    typeConvention?: $Enums.TypeConvention
    detailsConvention?: string | null
    documentsUrl?: string | null
    contactUniversite1?: string | null
    contactUniversite2?: string | null
  }

  export type ConventionInteruniversitaireCreateManyUniversite2Input = {
    id?: string
    universiteId1: string
    dateDebut: Date | string
    dateFin?: Date | string | null
    estActive?: boolean
    typeConvention?: $Enums.TypeConvention
    detailsConvention?: string | null
    documentsUrl?: string | null
    contactUniversite1?: string | null
    contactUniversite2?: string | null
  }

  export type StatistiqueInteruniversitaireCreateManyUniversiteSourceRelInput = {
    id?: string
    universiteDestination: string
    mois: number
    annee: number
    nbEmprunts?: number
    nbReservations?: number
    ressourcesPlusConsultees?: string | null
    domainesPlusConsultes?: string | null
  }

  export type StatistiqueInteruniversitaireCreateManyUniversiteDestinationRelInput = {
    id?: string
    universiteSource: string
    mois: number
    annee: number
    nbEmprunts?: number
    nbReservations?: number
    ressourcesPlusConsultees?: string | null
    domainesPlusConsultes?: string | null
  }

  export type ReservationCreateManyUniversiteEmprunteurRelInput = {
    id?: string
    userId?: string | null
    ressourceId: string
    dateReservation?: Date | string
    dateDebut: Date | string
    dateFin: Date | string
    statut?: $Enums.StatutReservation
    commentaire?: string | null
    motifReservation?: string | null
    validePar?: string | null
  }

  export type EmpruntCreateManyUniversiteEmprunteurRelInput = {
    id?: string
    exemplaireId: string
    userId: string
    dateEmprunt?: Date | string
    dateRetourPrevue: Date | string
    dateRetourEffective?: Date | string | null
    statut?: $Enums.StatutEmprunt
    commentaire?: string | null
    estEmpruntExterne?: boolean
    motifEmprunt?: string | null
    validePar?: string | null
  }

  export type RecommandationCreateManyUniversiteSourceRelInput = {
    id?: string
    userId: string
    ressourceId: string
    dateRecommandation?: Date | string
    score: number
    motif: $Enums.MotifRecommandation
    estVue?: boolean
    estInteruniversitaire?: boolean
  }

  export type StatistiqueBibliothequeCreateManyUniversiteInput = {
    id?: string
    mois: number
    annee: number
    nbEmprunts?: number
    nbEmpruntsExternes?: number
    nbReservations?: number
    nbReservationsExternes?: number
    nbRetardsRendu?: number
    tauxRotation?: number | null
    categoriesPlusEmpruntees?: string | null
    universitesPlusFrequentes?: string | null
  }

  export type PartageUniversiteCreateManyUniversiteSourceRelInput = {
    id?: string
    ressourceId: string
    universiteDestination: string
    datePartage?: Date | string
    estActif?: boolean
  }

  export type PartageUniversiteCreateManyUniversiteDestinationRelInput = {
    id?: string
    ressourceId: string
    universiteSource: string
    datePartage?: Date | string
    estActif?: boolean
  }

  export type TransactionBlockchainCreateManyUniversiteOrigineRelInput = {
    id?: string
    referenceBlockchain: string
    typeTransaction: $Enums.TypeTransaction
    ressourceId?: string | null
    universiteDestination?: string | null
    dateTransaction?: Date | string
    statut: $Enums.StatutTransaction
    hashTransaction: string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TransactionBlockchainCreateManyUniversiteDestinationRelInput = {
    id?: string
    referenceBlockchain: string
    typeTransaction: $Enums.TypeTransaction
    ressourceId?: string | null
    universiteOrigine: string
    dateTransaction?: Date | string
    statut: $Enums.StatutTransaction
    hashTransaction: string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
  }

  export type HistoriqueAccesCreateManyUniversiteSrcRelInput = {
    id?: string
    userId: string
    ressourceId: string
    dateAcces?: Date | string
    typeAcces: $Enums.TypeAcces
    ipAcces: string
  }

  export type UserUpdateWithoutUniversiteInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contributions?: RessourceUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUpdateManyWithoutUserNestedInput
    notations?: NotationUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutUserNestedInput
    collections?: CollectionUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUpdateManyWithoutUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUniversiteInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contributions?: RessourceUncheckedUpdateManyWithoutAuteurNestedInput
    favoris?: FavoriUncheckedUpdateManyWithoutUserNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutUserNestedInput
    notations?: NotationUncheckedUpdateManyWithoutUserNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutUserNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
    emprunts?: EmpruntUncheckedUpdateManyWithoutUserNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutUserNestedInput
    JournalAudit?: JournalAuditUncheckedUpdateManyWithoutUserNestedInput
    DonneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutUniversiteInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    motDePasse?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    prenom?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleUserFieldUpdateOperationsInput | $Enums.RoleUser
    departement?: NullableStringFieldUpdateOperationsInput | string | null
    faculte?: NullableStringFieldUpdateOperationsInput | string | null
    specialite?: NullableStringFieldUpdateOperationsInput | string | null
    niveauEtudes?: NullableStringFieldUpdateOperationsInput | string | null
    dateInscription?: DateTimeFieldUpdateOperationsInput | Date | string
    derniereConnexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActif?: BoolFieldUpdateOperationsInput | boolean
    preferencesRecommandation?: NullableStringFieldUpdateOperationsInput | string | null
    frequenceRecommandation?: EnumFrequenceRecommandationFieldUpdateOperationsInput | $Enums.FrequenceRecommandation
    droitEmpruntExterieur?: BoolFieldUpdateOperationsInput | boolean
    droitReservationExterieure?: BoolFieldUpdateOperationsInput | boolean
    universiteAutorisees?: NullableStringFieldUpdateOperationsInput | string | null
    nbMaxEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    statutValidation?: NullableStringFieldUpdateOperationsInput | string | null
    dateValidation?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RessourceUpdateWithoutUniversiteInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    auteur?: UserUpdateOneWithoutContributionsNestedInput
    favoris?: FavoriUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUpdateManyWithoutRessourceNestedInput
    notations?: NotationUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceUncheckedUpdateWithoutUniversiteInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    auteurId?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    favoris?: FavoriUncheckedUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutRessourceNestedInput
    notations?: NotationUncheckedUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUncheckedUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUncheckedUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUncheckedUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUncheckedUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceUncheckedUpdateManyWithoutUniversiteInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    auteurId?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ConventionInteruniversitaireUpdateWithoutUniversite1Input = {
    id?: StringFieldUpdateOperationsInput | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    typeConvention?: EnumTypeConventionFieldUpdateOperationsInput | $Enums.TypeConvention
    detailsConvention?: NullableStringFieldUpdateOperationsInput | string | null
    documentsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite1?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite2?: NullableStringFieldUpdateOperationsInput | string | null
    universite2?: UniversiteUpdateOneRequiredWithoutConventionsDestinationNestedInput
  }

  export type ConventionInteruniversitaireUncheckedUpdateWithoutUniversite1Input = {
    id?: StringFieldUpdateOperationsInput | string
    universiteId2?: StringFieldUpdateOperationsInput | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    typeConvention?: EnumTypeConventionFieldUpdateOperationsInput | $Enums.TypeConvention
    detailsConvention?: NullableStringFieldUpdateOperationsInput | string | null
    documentsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite1?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite2?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite1Input = {
    id?: StringFieldUpdateOperationsInput | string
    universiteId2?: StringFieldUpdateOperationsInput | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    typeConvention?: EnumTypeConventionFieldUpdateOperationsInput | $Enums.TypeConvention
    detailsConvention?: NullableStringFieldUpdateOperationsInput | string | null
    documentsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite1?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite2?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ConventionInteruniversitaireUpdateWithoutUniversite2Input = {
    id?: StringFieldUpdateOperationsInput | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    typeConvention?: EnumTypeConventionFieldUpdateOperationsInput | $Enums.TypeConvention
    detailsConvention?: NullableStringFieldUpdateOperationsInput | string | null
    documentsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite1?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite2?: NullableStringFieldUpdateOperationsInput | string | null
    universite1?: UniversiteUpdateOneRequiredWithoutConventionsSourceNestedInput
  }

  export type ConventionInteruniversitaireUncheckedUpdateWithoutUniversite2Input = {
    id?: StringFieldUpdateOperationsInput | string
    universiteId1?: StringFieldUpdateOperationsInput | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    typeConvention?: EnumTypeConventionFieldUpdateOperationsInput | $Enums.TypeConvention
    detailsConvention?: NullableStringFieldUpdateOperationsInput | string | null
    documentsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite1?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite2?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ConventionInteruniversitaireUncheckedUpdateManyWithoutUniversite2Input = {
    id?: StringFieldUpdateOperationsInput | string
    universiteId1?: StringFieldUpdateOperationsInput | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estActive?: BoolFieldUpdateOperationsInput | boolean
    typeConvention?: EnumTypeConventionFieldUpdateOperationsInput | $Enums.TypeConvention
    detailsConvention?: NullableStringFieldUpdateOperationsInput | string | null
    documentsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite1?: NullableStringFieldUpdateOperationsInput | string | null
    contactUniversite2?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StatistiqueInteruniversitaireUpdateWithoutUniversiteSourceRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    mois?: IntFieldUpdateOperationsInput | number
    annee?: IntFieldUpdateOperationsInput | number
    nbEmprunts?: IntFieldUpdateOperationsInput | number
    nbReservations?: IntFieldUpdateOperationsInput | number
    ressourcesPlusConsultees?: NullableStringFieldUpdateOperationsInput | string | null
    domainesPlusConsultes?: NullableStringFieldUpdateOperationsInput | string | null
    universiteDestinationRel?: UniversiteUpdateOneRequiredWithoutStatistiquesDestinationNestedInput
  }

  export type StatistiqueInteruniversitaireUncheckedUpdateWithoutUniversiteSourceRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    universiteDestination?: StringFieldUpdateOperationsInput | string
    mois?: IntFieldUpdateOperationsInput | number
    annee?: IntFieldUpdateOperationsInput | number
    nbEmprunts?: IntFieldUpdateOperationsInput | number
    nbReservations?: IntFieldUpdateOperationsInput | number
    ressourcesPlusConsultees?: NullableStringFieldUpdateOperationsInput | string | null
    domainesPlusConsultes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteSourceRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    universiteDestination?: StringFieldUpdateOperationsInput | string
    mois?: IntFieldUpdateOperationsInput | number
    annee?: IntFieldUpdateOperationsInput | number
    nbEmprunts?: IntFieldUpdateOperationsInput | number
    nbReservations?: IntFieldUpdateOperationsInput | number
    ressourcesPlusConsultees?: NullableStringFieldUpdateOperationsInput | string | null
    domainesPlusConsultes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StatistiqueInteruniversitaireUpdateWithoutUniversiteDestinationRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    mois?: IntFieldUpdateOperationsInput | number
    annee?: IntFieldUpdateOperationsInput | number
    nbEmprunts?: IntFieldUpdateOperationsInput | number
    nbReservations?: IntFieldUpdateOperationsInput | number
    ressourcesPlusConsultees?: NullableStringFieldUpdateOperationsInput | string | null
    domainesPlusConsultes?: NullableStringFieldUpdateOperationsInput | string | null
    universiteSourceRel?: UniversiteUpdateOneRequiredWithoutStatistiquesSourceNestedInput
  }

  export type StatistiqueInteruniversitaireUncheckedUpdateWithoutUniversiteDestinationRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    universiteSource?: StringFieldUpdateOperationsInput | string
    mois?: IntFieldUpdateOperationsInput | number
    annee?: IntFieldUpdateOperationsInput | number
    nbEmprunts?: IntFieldUpdateOperationsInput | number
    nbReservations?: IntFieldUpdateOperationsInput | number
    ressourcesPlusConsultees?: NullableStringFieldUpdateOperationsInput | string | null
    domainesPlusConsultes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StatistiqueInteruniversitaireUncheckedUpdateManyWithoutUniversiteDestinationRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    universiteSource?: StringFieldUpdateOperationsInput | string
    mois?: IntFieldUpdateOperationsInput | number
    annee?: IntFieldUpdateOperationsInput | number
    nbEmprunts?: IntFieldUpdateOperationsInput | number
    nbReservations?: IntFieldUpdateOperationsInput | number
    ressourcesPlusConsultees?: NullableStringFieldUpdateOperationsInput | string | null
    domainesPlusConsultes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReservationUpdateWithoutUniversiteEmprunteurRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateReservation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutReservationFieldUpdateOperationsInput | $Enums.StatutReservation
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    motifReservation?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutReservationsNestedInput
    ressource?: RessourceUpdateOneRequiredWithoutReservationsNestedInput
  }

  export type ReservationUncheckedUpdateWithoutUniversiteEmprunteurRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateReservation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutReservationFieldUpdateOperationsInput | $Enums.StatutReservation
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    motifReservation?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReservationUncheckedUpdateManyWithoutUniversiteEmprunteurRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateReservation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutReservationFieldUpdateOperationsInput | $Enums.StatutReservation
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    motifReservation?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EmpruntUpdateWithoutUniversiteEmprunteurRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateEmprunt?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourPrevue?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourEffective?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statut?: EnumStatutEmpruntFieldUpdateOperationsInput | $Enums.StatutEmprunt
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntExterne?: BoolFieldUpdateOperationsInput | boolean
    motifEmprunt?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
    exemplaire?: ExemplairePhysiqueUpdateOneRequiredWithoutEmpruntsNestedInput
    user?: UserUpdateOneRequiredWithoutEmpruntsNestedInput
  }

  export type EmpruntUncheckedUpdateWithoutUniversiteEmprunteurRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    exemplaireId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dateEmprunt?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourPrevue?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourEffective?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statut?: EnumStatutEmpruntFieldUpdateOperationsInput | $Enums.StatutEmprunt
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntExterne?: BoolFieldUpdateOperationsInput | boolean
    motifEmprunt?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EmpruntUncheckedUpdateManyWithoutUniversiteEmprunteurRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    exemplaireId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dateEmprunt?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourPrevue?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourEffective?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statut?: EnumStatutEmpruntFieldUpdateOperationsInput | $Enums.StatutEmprunt
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntExterne?: BoolFieldUpdateOperationsInput | boolean
    motifEmprunt?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RecommandationUpdateWithoutUniversiteSourceRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateRecommandation?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    motif?: EnumMotifRecommandationFieldUpdateOperationsInput | $Enums.MotifRecommandation
    estVue?: BoolFieldUpdateOperationsInput | boolean
    estInteruniversitaire?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutRecommandationsNestedInput
    ressource?: RessourceUpdateOneRequiredWithoutRecommandationsNestedInput
  }

  export type RecommandationUncheckedUpdateWithoutUniversiteSourceRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateRecommandation?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    motif?: EnumMotifRecommandationFieldUpdateOperationsInput | $Enums.MotifRecommandation
    estVue?: BoolFieldUpdateOperationsInput | boolean
    estInteruniversitaire?: BoolFieldUpdateOperationsInput | boolean
  }

  export type RecommandationUncheckedUpdateManyWithoutUniversiteSourceRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateRecommandation?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    motif?: EnumMotifRecommandationFieldUpdateOperationsInput | $Enums.MotifRecommandation
    estVue?: BoolFieldUpdateOperationsInput | boolean
    estInteruniversitaire?: BoolFieldUpdateOperationsInput | boolean
  }

  export type StatistiqueBibliothequeUpdateWithoutUniversiteInput = {
    id?: StringFieldUpdateOperationsInput | string
    mois?: IntFieldUpdateOperationsInput | number
    annee?: IntFieldUpdateOperationsInput | number
    nbEmprunts?: IntFieldUpdateOperationsInput | number
    nbEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    nbReservations?: IntFieldUpdateOperationsInput | number
    nbReservationsExternes?: IntFieldUpdateOperationsInput | number
    nbRetardsRendu?: IntFieldUpdateOperationsInput | number
    tauxRotation?: NullableFloatFieldUpdateOperationsInput | number | null
    categoriesPlusEmpruntees?: NullableStringFieldUpdateOperationsInput | string | null
    universitesPlusFrequentes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StatistiqueBibliothequeUncheckedUpdateWithoutUniversiteInput = {
    id?: StringFieldUpdateOperationsInput | string
    mois?: IntFieldUpdateOperationsInput | number
    annee?: IntFieldUpdateOperationsInput | number
    nbEmprunts?: IntFieldUpdateOperationsInput | number
    nbEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    nbReservations?: IntFieldUpdateOperationsInput | number
    nbReservationsExternes?: IntFieldUpdateOperationsInput | number
    nbRetardsRendu?: IntFieldUpdateOperationsInput | number
    tauxRotation?: NullableFloatFieldUpdateOperationsInput | number | null
    categoriesPlusEmpruntees?: NullableStringFieldUpdateOperationsInput | string | null
    universitesPlusFrequentes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StatistiqueBibliothequeUncheckedUpdateManyWithoutUniversiteInput = {
    id?: StringFieldUpdateOperationsInput | string
    mois?: IntFieldUpdateOperationsInput | number
    annee?: IntFieldUpdateOperationsInput | number
    nbEmprunts?: IntFieldUpdateOperationsInput | number
    nbEmpruntsExternes?: IntFieldUpdateOperationsInput | number
    nbReservations?: IntFieldUpdateOperationsInput | number
    nbReservationsExternes?: IntFieldUpdateOperationsInput | number
    nbRetardsRendu?: IntFieldUpdateOperationsInput | number
    tauxRotation?: NullableFloatFieldUpdateOperationsInput | number | null
    categoriesPlusEmpruntees?: NullableStringFieldUpdateOperationsInput | string | null
    universitesPlusFrequentes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PartageUniversiteUpdateWithoutUniversiteSourceRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    datePartage?: DateTimeFieldUpdateOperationsInput | Date | string
    estActif?: BoolFieldUpdateOperationsInput | boolean
    ressource?: RessourceUpdateOneRequiredWithoutPartagesNestedInput
    universiteDestinationRel?: UniversiteUpdateOneRequiredWithoutPartagesDestinationNestedInput
  }

  export type PartageUniversiteUncheckedUpdateWithoutUniversiteSourceRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    universiteDestination?: StringFieldUpdateOperationsInput | string
    datePartage?: DateTimeFieldUpdateOperationsInput | Date | string
    estActif?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PartageUniversiteUncheckedUpdateManyWithoutUniversiteSourceRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    universiteDestination?: StringFieldUpdateOperationsInput | string
    datePartage?: DateTimeFieldUpdateOperationsInput | Date | string
    estActif?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PartageUniversiteUpdateWithoutUniversiteDestinationRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    datePartage?: DateTimeFieldUpdateOperationsInput | Date | string
    estActif?: BoolFieldUpdateOperationsInput | boolean
    ressource?: RessourceUpdateOneRequiredWithoutPartagesNestedInput
    universiteSourceRel?: UniversiteUpdateOneRequiredWithoutPartagesSourceNestedInput
  }

  export type PartageUniversiteUncheckedUpdateWithoutUniversiteDestinationRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    universiteSource?: StringFieldUpdateOperationsInput | string
    datePartage?: DateTimeFieldUpdateOperationsInput | Date | string
    estActif?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PartageUniversiteUncheckedUpdateManyWithoutUniversiteDestinationRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    universiteSource?: StringFieldUpdateOperationsInput | string
    datePartage?: DateTimeFieldUpdateOperationsInput | Date | string
    estActif?: BoolFieldUpdateOperationsInput | boolean
  }

  export type TransactionBlockchainUpdateWithoutUniversiteOrigineRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceBlockchain?: StringFieldUpdateOperationsInput | string
    typeTransaction?: EnumTypeTransactionFieldUpdateOperationsInput | $Enums.TypeTransaction
    dateTransaction?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutTransactionFieldUpdateOperationsInput | $Enums.StatutTransaction
    hashTransaction?: StringFieldUpdateOperationsInput | string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
    ressource?: RessourceUpdateOneWithoutTransactionsNestedInput
    universiteDestinationRel?: UniversiteUpdateOneWithoutTransactionsDestinationNestedInput
  }

  export type TransactionBlockchainUncheckedUpdateWithoutUniversiteOrigineRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceBlockchain?: StringFieldUpdateOperationsInput | string
    typeTransaction?: EnumTypeTransactionFieldUpdateOperationsInput | $Enums.TypeTransaction
    ressourceId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteDestination?: NullableStringFieldUpdateOperationsInput | string | null
    dateTransaction?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutTransactionFieldUpdateOperationsInput | $Enums.StatutTransaction
    hashTransaction?: StringFieldUpdateOperationsInput | string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TransactionBlockchainUncheckedUpdateManyWithoutUniversiteOrigineRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceBlockchain?: StringFieldUpdateOperationsInput | string
    typeTransaction?: EnumTypeTransactionFieldUpdateOperationsInput | $Enums.TypeTransaction
    ressourceId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteDestination?: NullableStringFieldUpdateOperationsInput | string | null
    dateTransaction?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutTransactionFieldUpdateOperationsInput | $Enums.StatutTransaction
    hashTransaction?: StringFieldUpdateOperationsInput | string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TransactionBlockchainUpdateWithoutUniversiteDestinationRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceBlockchain?: StringFieldUpdateOperationsInput | string
    typeTransaction?: EnumTypeTransactionFieldUpdateOperationsInput | $Enums.TypeTransaction
    dateTransaction?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutTransactionFieldUpdateOperationsInput | $Enums.StatutTransaction
    hashTransaction?: StringFieldUpdateOperationsInput | string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
    ressource?: RessourceUpdateOneWithoutTransactionsNestedInput
    universiteOrigineRel?: UniversiteUpdateOneRequiredWithoutTransactionsOrigineNestedInput
  }

  export type TransactionBlockchainUncheckedUpdateWithoutUniversiteDestinationRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceBlockchain?: StringFieldUpdateOperationsInput | string
    typeTransaction?: EnumTypeTransactionFieldUpdateOperationsInput | $Enums.TypeTransaction
    ressourceId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteOrigine?: StringFieldUpdateOperationsInput | string
    dateTransaction?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutTransactionFieldUpdateOperationsInput | $Enums.StatutTransaction
    hashTransaction?: StringFieldUpdateOperationsInput | string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TransactionBlockchainUncheckedUpdateManyWithoutUniversiteDestinationRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceBlockchain?: StringFieldUpdateOperationsInput | string
    typeTransaction?: EnumTypeTransactionFieldUpdateOperationsInput | $Enums.TypeTransaction
    ressourceId?: NullableStringFieldUpdateOperationsInput | string | null
    universiteOrigine?: StringFieldUpdateOperationsInput | string
    dateTransaction?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutTransactionFieldUpdateOperationsInput | $Enums.StatutTransaction
    hashTransaction?: StringFieldUpdateOperationsInput | string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
  }

  export type HistoriqueAccesUpdateWithoutUniversiteSrcRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateAcces?: DateTimeFieldUpdateOperationsInput | Date | string
    typeAcces?: EnumTypeAccesFieldUpdateOperationsInput | $Enums.TypeAcces
    ipAcces?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneRequiredWithoutHistoriquesNestedInput
    ressource?: RessourceUpdateOneRequiredWithoutHistoriquesNestedInput
  }

  export type HistoriqueAccesUncheckedUpdateWithoutUniversiteSrcRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateAcces?: DateTimeFieldUpdateOperationsInput | Date | string
    typeAcces?: EnumTypeAccesFieldUpdateOperationsInput | $Enums.TypeAcces
    ipAcces?: StringFieldUpdateOperationsInput | string
  }

  export type HistoriqueAccesUncheckedUpdateManyWithoutUniversiteSrcRelInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateAcces?: DateTimeFieldUpdateOperationsInput | Date | string
    typeAcces?: EnumTypeAccesFieldUpdateOperationsInput | $Enums.TypeAcces
    ipAcces?: StringFieldUpdateOperationsInput | string
  }

  export type RessourceCreateManyAuteurInput = {
    id?: string
    titre: string
    description: string
    type: $Enums.TypeRessource
    langue?: string
    urlFichier: string
    urlFichierLocal?: string | null
    format: string
    dateCreation?: Date | string
    dateModification?: Date | string
    estPublique?: boolean
    motsCles: string
    universiteId: string
    image?: string | null
    niveauAcces?: $Enums.NiveauAcces
    datePublication?: Date | string | null
    estValide?: boolean
    estArchive?: boolean
    nomAuteurExterne?: string | null
    prenomAuteurExterne?: string | null
    affiliationAuteurExterne?: string | null
    isbn?: string | null
    doi?: string | null
    edition?: string | null
    anneePublication?: number | null
    editeur?: string | null
    nbPages?: number | null
    categorieBiblio?: $Enums.CategorieBiblio | null
    estEmpruntable?: boolean
    nbExemplaires?: number
    nbDisponibles?: number
    coteClassification?: string | null
    estEmpruntableExterne?: boolean
    dureeMaxEmpruntExterne?: number
    nbMaxExemplairesExterne?: number
    necessiteAutorisation?: boolean
  }

  export type FavoriCreateManyUserInput = {
    id?: string
    ressourceId: string
    dateAjout?: Date | string
    note?: string | null
  }

  export type CommentaireCreateManyUserInput = {
    id?: string
    ressourceId: string
    contenu: string
    dateCreation?: Date | string
    estModere?: boolean
  }

  export type NotationCreateManyUserInput = {
    id?: string
    ressourceId: string
    note: number
    dateNotation?: Date | string
  }

  export type HistoriqueAccesCreateManyUserInput = {
    id?: string
    ressourceId: string
    dateAcces?: Date | string
    typeAcces: $Enums.TypeAcces
    ipAcces: string
    universiteSrc?: string | null
  }

  export type CollectionCreateManyUserInput = {
    id?: string
    nom: string
    description?: string | null
    estPublique?: boolean
    dateCreation?: Date | string
  }

  export type ReservationCreateManyUserInput = {
    id?: string
    ressourceId: string
    dateReservation?: Date | string
    dateDebut: Date | string
    dateFin: Date | string
    statut?: $Enums.StatutReservation
    commentaire?: string | null
    universiteEmprunteur: string
    motifReservation?: string | null
    validePar?: string | null
  }

  export type EmpruntCreateManyUserInput = {
    id?: string
    exemplaireId: string
    dateEmprunt?: Date | string
    dateRetourPrevue: Date | string
    dateRetourEffective?: Date | string | null
    statut?: $Enums.StatutEmprunt
    commentaire?: string | null
    universiteEmprunteur: string
    estEmpruntExterne?: boolean
    motifEmprunt?: string | null
    validePar?: string | null
  }

  export type RecommandationCreateManyUserInput = {
    id?: string
    ressourceId: string
    dateRecommandation?: Date | string
    score: number
    motif: $Enums.MotifRecommandation
    estVue?: boolean
    estInteruniversitaire?: boolean
    universiteSource?: string | null
  }

  export type JournalAuditCreateManyUserInput = {
    id?: string
    action: string
    entite: string
    entiteId: string
    dateAction?: Date | string
    detailsAction: JsonNullValueInput | InputJsonValue
    ipAdresse: string
  }

  export type DonneesRecommandationCreateManyUserInput = {
    id?: string
    ressourceId: string
    score: number
    typeInteraction: $Enums.TypeInteraction
    dateDonnee?: Date | string
  }

  export type NotificationCreateManyUserInput = {
    id?: string
    titre: string
    message: string
    dateCreation?: Date | string
    estLue?: boolean
    typeNotification: $Enums.TypeNotification
    ressourceId?: string | null
  }

  export type RessourceUpdateWithoutAuteurInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    universite?: UniversiteUpdateOneRequiredWithoutRessourcesNestedInput
    favoris?: FavoriUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUpdateManyWithoutRessourceNestedInput
    notations?: NotationUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceUncheckedUpdateWithoutAuteurInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    universiteId?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
    favoris?: FavoriUncheckedUpdateManyWithoutRessourceNestedInput
    commentaires?: CommentaireUncheckedUpdateManyWithoutRessourceNestedInput
    notations?: NotationUncheckedUpdateManyWithoutRessourceNestedInput
    historiques?: HistoriqueAccesUncheckedUpdateManyWithoutRessourceNestedInput
    collections?: CollectionRessourceUncheckedUpdateManyWithoutRessourceNestedInput
    partages?: PartageUniversiteUncheckedUpdateManyWithoutRessourceNestedInput
    exemplaires?: ExemplairePhysiqueUncheckedUpdateManyWithoutRessourceNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRessourceNestedInput
    recommandations?: RecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    donneesRecommandation?: DonneesRecommandationUncheckedUpdateManyWithoutRessourceNestedInput
    transactions?: TransactionBlockchainUncheckedUpdateManyWithoutRessourceNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutRessourceNestedInput
  }

  export type RessourceUncheckedUpdateManyWithoutAuteurInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumTypeRessourceFieldUpdateOperationsInput | $Enums.TypeRessource
    langue?: StringFieldUpdateOperationsInput | string
    urlFichier?: StringFieldUpdateOperationsInput | string
    urlFichierLocal?: NullableStringFieldUpdateOperationsInput | string | null
    format?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateModification?: DateTimeFieldUpdateOperationsInput | Date | string
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    motsCles?: StringFieldUpdateOperationsInput | string
    universiteId?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    niveauAcces?: EnumNiveauAccesFieldUpdateOperationsInput | $Enums.NiveauAcces
    datePublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estValide?: BoolFieldUpdateOperationsInput | boolean
    estArchive?: BoolFieldUpdateOperationsInput | boolean
    nomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    prenomAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    affiliationAuteurExterne?: NullableStringFieldUpdateOperationsInput | string | null
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    doi?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    anneePublication?: NullableIntFieldUpdateOperationsInput | number | null
    editeur?: NullableStringFieldUpdateOperationsInput | string | null
    nbPages?: NullableIntFieldUpdateOperationsInput | number | null
    categorieBiblio?: NullableEnumCategorieBiblioFieldUpdateOperationsInput | $Enums.CategorieBiblio | null
    estEmpruntable?: BoolFieldUpdateOperationsInput | boolean
    nbExemplaires?: IntFieldUpdateOperationsInput | number
    nbDisponibles?: IntFieldUpdateOperationsInput | number
    coteClassification?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntableExterne?: BoolFieldUpdateOperationsInput | boolean
    dureeMaxEmpruntExterne?: IntFieldUpdateOperationsInput | number
    nbMaxExemplairesExterne?: IntFieldUpdateOperationsInput | number
    necessiteAutorisation?: BoolFieldUpdateOperationsInput | boolean
  }

  export type FavoriUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    ressource?: RessourceUpdateOneRequiredWithoutFavorisNestedInput
  }

  export type FavoriUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FavoriUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommentaireUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    contenu?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estModere?: BoolFieldUpdateOperationsInput | boolean
    ressource?: RessourceUpdateOneRequiredWithoutCommentairesNestedInput
  }

  export type CommentaireUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    contenu?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estModere?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CommentaireUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    contenu?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estModere?: BoolFieldUpdateOperationsInput | boolean
  }

  export type NotationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: IntFieldUpdateOperationsInput | number
    dateNotation?: DateTimeFieldUpdateOperationsInput | Date | string
    ressource?: RessourceUpdateOneRequiredWithoutNotationsNestedInput
  }

  export type NotationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    note?: IntFieldUpdateOperationsInput | number
    dateNotation?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    note?: IntFieldUpdateOperationsInput | number
    dateNotation?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistoriqueAccesUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateAcces?: DateTimeFieldUpdateOperationsInput | Date | string
    typeAcces?: EnumTypeAccesFieldUpdateOperationsInput | $Enums.TypeAcces
    ipAcces?: StringFieldUpdateOperationsInput | string
    ressource?: RessourceUpdateOneRequiredWithoutHistoriquesNestedInput
    universiteSrcRel?: UniversiteUpdateOneWithoutHistoriqueAccesNestedInput
  }

  export type HistoriqueAccesUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateAcces?: DateTimeFieldUpdateOperationsInput | Date | string
    typeAcces?: EnumTypeAccesFieldUpdateOperationsInput | $Enums.TypeAcces
    ipAcces?: StringFieldUpdateOperationsInput | string
    universiteSrc?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type HistoriqueAccesUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateAcces?: DateTimeFieldUpdateOperationsInput | Date | string
    typeAcces?: EnumTypeAccesFieldUpdateOperationsInput | $Enums.TypeAcces
    ipAcces?: StringFieldUpdateOperationsInput | string
    universiteSrc?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CollectionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    ressources?: CollectionRessourceUpdateManyWithoutCollectionNestedInput
  }

  export type CollectionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    ressources?: CollectionRessourceUncheckedUpdateManyWithoutCollectionNestedInput
  }

  export type CollectionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    nom?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estPublique?: BoolFieldUpdateOperationsInput | boolean
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateReservation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutReservationFieldUpdateOperationsInput | $Enums.StatutReservation
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    motifReservation?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
    ressource?: RessourceUpdateOneRequiredWithoutReservationsNestedInput
    universiteEmprunteurRel?: UniversiteUpdateOneRequiredWithoutReservationsNestedInput
  }

  export type ReservationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateReservation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutReservationFieldUpdateOperationsInput | $Enums.StatutReservation
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    universiteEmprunteur?: StringFieldUpdateOperationsInput | string
    motifReservation?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReservationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateReservation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutReservationFieldUpdateOperationsInput | $Enums.StatutReservation
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    universiteEmprunteur?: StringFieldUpdateOperationsInput | string
    motifReservation?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EmpruntUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateEmprunt?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourPrevue?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourEffective?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statut?: EnumStatutEmpruntFieldUpdateOperationsInput | $Enums.StatutEmprunt
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    estEmpruntExterne?: BoolFieldUpdateOperationsInput | boolean
    motifEmprunt?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
    exemplaire?: ExemplairePhysiqueUpdateOneRequiredWithoutEmpruntsNestedInput
    universiteEmprunteurRel?: UniversiteUpdateOneRequiredWithoutEmpruntsNestedInput
  }

  export type EmpruntUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    exemplaireId?: StringFieldUpdateOperationsInput | string
    dateEmprunt?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourPrevue?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourEffective?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statut?: EnumStatutEmpruntFieldUpdateOperationsInput | $Enums.StatutEmprunt
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    universiteEmprunteur?: StringFieldUpdateOperationsInput | string
    estEmpruntExterne?: BoolFieldUpdateOperationsInput | boolean
    motifEmprunt?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EmpruntUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    exemplaireId?: StringFieldUpdateOperationsInput | string
    dateEmprunt?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourPrevue?: DateTimeFieldUpdateOperationsInput | Date | string
    dateRetourEffective?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    statut?: EnumStatutEmpruntFieldUpdateOperationsInput | $Enums.StatutEmprunt
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    universiteEmprunteur?: StringFieldUpdateOperationsInput | string
    estEmpruntExterne?: BoolFieldUpdateOperationsInput | boolean
    motifEmprunt?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RecommandationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateRecommandation?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    motif?: EnumMotifRecommandationFieldUpdateOperationsInput | $Enums.MotifRecommandation
    estVue?: BoolFieldUpdateOperationsInput | boolean
    estInteruniversitaire?: BoolFieldUpdateOperationsInput | boolean
    ressource?: RessourceUpdateOneRequiredWithoutRecommandationsNestedInput
    universiteSourceRel?: UniversiteUpdateOneWithoutRecommandationsSourceNestedInput
  }

  export type RecommandationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateRecommandation?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    motif?: EnumMotifRecommandationFieldUpdateOperationsInput | $Enums.MotifRecommandation
    estVue?: BoolFieldUpdateOperationsInput | boolean
    estInteruniversitaire?: BoolFieldUpdateOperationsInput | boolean
    universiteSource?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RecommandationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateRecommandation?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    motif?: EnumMotifRecommandationFieldUpdateOperationsInput | $Enums.MotifRecommandation
    estVue?: BoolFieldUpdateOperationsInput | boolean
    estInteruniversitaire?: BoolFieldUpdateOperationsInput | boolean
    universiteSource?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type JournalAuditUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entite?: StringFieldUpdateOperationsInput | string
    entiteId?: StringFieldUpdateOperationsInput | string
    dateAction?: DateTimeFieldUpdateOperationsInput | Date | string
    detailsAction?: JsonNullValueInput | InputJsonValue
    ipAdresse?: StringFieldUpdateOperationsInput | string
  }

  export type JournalAuditUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entite?: StringFieldUpdateOperationsInput | string
    entiteId?: StringFieldUpdateOperationsInput | string
    dateAction?: DateTimeFieldUpdateOperationsInput | Date | string
    detailsAction?: JsonNullValueInput | InputJsonValue
    ipAdresse?: StringFieldUpdateOperationsInput | string
  }

  export type JournalAuditUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entite?: StringFieldUpdateOperationsInput | string
    entiteId?: StringFieldUpdateOperationsInput | string
    dateAction?: DateTimeFieldUpdateOperationsInput | Date | string
    detailsAction?: JsonNullValueInput | InputJsonValue
    ipAdresse?: StringFieldUpdateOperationsInput | string
  }

  export type DonneesRecommandationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    score?: FloatFieldUpdateOperationsInput | number
    typeInteraction?: EnumTypeInteractionFieldUpdateOperationsInput | $Enums.TypeInteraction
    dateDonnee?: DateTimeFieldUpdateOperationsInput | Date | string
    ressource?: RessourceUpdateOneRequiredWithoutDonneesRecommandationNestedInput
  }

  export type DonneesRecommandationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    score?: FloatFieldUpdateOperationsInput | number
    typeInteraction?: EnumTypeInteractionFieldUpdateOperationsInput | $Enums.TypeInteraction
    dateDonnee?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonneesRecommandationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    score?: FloatFieldUpdateOperationsInput | number
    typeInteraction?: EnumTypeInteractionFieldUpdateOperationsInput | $Enums.TypeInteraction
    dateDonnee?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estLue?: BoolFieldUpdateOperationsInput | boolean
    typeNotification?: EnumTypeNotificationFieldUpdateOperationsInput | $Enums.TypeNotification
    ressource?: RessourceUpdateOneWithoutNotificationNestedInput
  }

  export type NotificationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estLue?: BoolFieldUpdateOperationsInput | boolean
    typeNotification?: EnumTypeNotificationFieldUpdateOperationsInput | $Enums.TypeNotification
    ressourceId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estLue?: BoolFieldUpdateOperationsInput | boolean
    typeNotification?: EnumTypeNotificationFieldUpdateOperationsInput | $Enums.TypeNotification
    ressourceId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CollectionRessourceCreateManyCollectionInput = {
    id?: string
    ressourceId: string
    dateAjout?: Date | string
    notes?: string | null
  }

  export type CollectionRessourceUpdateWithoutCollectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ressource?: RessourceUpdateOneRequiredWithoutCollectionsNestedInput
  }

  export type CollectionRessourceUncheckedUpdateWithoutCollectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CollectionRessourceUncheckedUpdateManyWithoutCollectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    ressourceId?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FavoriCreateManyRessourceInput = {
    id?: string
    userId: string
    dateAjout?: Date | string
    note?: string | null
  }

  export type CommentaireCreateManyRessourceInput = {
    id?: string
    userId: string
    contenu: string
    dateCreation?: Date | string
    estModere?: boolean
  }

  export type NotationCreateManyRessourceInput = {
    id?: string
    userId: string
    note: number
    dateNotation?: Date | string
  }

  export type HistoriqueAccesCreateManyRessourceInput = {
    id?: string
    userId: string
    dateAcces?: Date | string
    typeAcces: $Enums.TypeAcces
    ipAcces: string
    universiteSrc?: string | null
  }

  export type CollectionRessourceCreateManyRessourceInput = {
    id?: string
    collectionId: string
    dateAjout?: Date | string
    notes?: string | null
  }

  export type PartageUniversiteCreateManyRessourceInput = {
    id?: string
    universiteSource: string
    universiteDestination: string
    datePartage?: Date | string
    estActif?: boolean
  }

  export type ExemplairePhysiqueCreateManyRessourceInput = {
    id?: string
    cote: string
    etat?: $Enums.EtatExemplaire
    disponible?: boolean
    localisation: string
    dateAcquisition?: Date | string | null
    estReservableExterne?: boolean | null
    estEmpruntableExterne?: boolean | null
  }

  export type ReservationCreateManyRessourceInput = {
    id?: string
    userId?: string | null
    dateReservation?: Date | string
    dateDebut: Date | string
    dateFin: Date | string
    statut?: $Enums.StatutReservation
    commentaire?: string | null
    universiteEmprunteur: string
    motifReservation?: string | null
    validePar?: string | null
  }

  export type RecommandationCreateManyRessourceInput = {
    id?: string
    userId: string
    dateRecommandation?: Date | string
    score: number
    motif: $Enums.MotifRecommandation
    estVue?: boolean
    estInteruniversitaire?: boolean
    universiteSource?: string | null
  }

  export type DonneesRecommandationCreateManyRessourceInput = {
    id?: string
    userId: string
    score: number
    typeInteraction: $Enums.TypeInteraction
    dateDonnee?: Date | string
  }

  export type TransactionBlockchainCreateManyRessourceInput = {
    id?: string
    referenceBlockchain: string
    typeTransaction: $Enums.TypeTransaction
    universiteOrigine: string
    universiteDestination?: string | null
    dateTransaction?: Date | string
    statut: $Enums.StatutTransaction
    hashTransaction: string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
  }

  export type NotificationCreateManyRessourceInput = {
    id?: string
    userId: string
    titre: string
    message: string
    dateCreation?: Date | string
    estLue?: boolean
    typeNotification: $Enums.TypeNotification
  }

  export type FavoriUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutFavorisNestedInput
  }

  export type FavoriUncheckedUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FavoriUncheckedUpdateManyWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommentaireUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    contenu?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estModere?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutCommentairesNestedInput
  }

  export type CommentaireUncheckedUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    contenu?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estModere?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CommentaireUncheckedUpdateManyWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    contenu?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estModere?: BoolFieldUpdateOperationsInput | boolean
  }

  export type NotationUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: IntFieldUpdateOperationsInput | number
    dateNotation?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutNotationsNestedInput
  }

  export type NotationUncheckedUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: IntFieldUpdateOperationsInput | number
    dateNotation?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotationUncheckedUpdateManyWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    note?: IntFieldUpdateOperationsInput | number
    dateNotation?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistoriqueAccesUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateAcces?: DateTimeFieldUpdateOperationsInput | Date | string
    typeAcces?: EnumTypeAccesFieldUpdateOperationsInput | $Enums.TypeAcces
    ipAcces?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneRequiredWithoutHistoriquesNestedInput
    universiteSrcRel?: UniversiteUpdateOneWithoutHistoriqueAccesNestedInput
  }

  export type HistoriqueAccesUncheckedUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dateAcces?: DateTimeFieldUpdateOperationsInput | Date | string
    typeAcces?: EnumTypeAccesFieldUpdateOperationsInput | $Enums.TypeAcces
    ipAcces?: StringFieldUpdateOperationsInput | string
    universiteSrc?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type HistoriqueAccesUncheckedUpdateManyWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dateAcces?: DateTimeFieldUpdateOperationsInput | Date | string
    typeAcces?: EnumTypeAccesFieldUpdateOperationsInput | $Enums.TypeAcces
    ipAcces?: StringFieldUpdateOperationsInput | string
    universiteSrc?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CollectionRessourceUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    collection?: CollectionUpdateOneRequiredWithoutRessourcesNestedInput
  }

  export type CollectionRessourceUncheckedUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    collectionId?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CollectionRessourceUncheckedUpdateManyWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    collectionId?: StringFieldUpdateOperationsInput | string
    dateAjout?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PartageUniversiteUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    datePartage?: DateTimeFieldUpdateOperationsInput | Date | string
    estActif?: BoolFieldUpdateOperationsInput | boolean
    universiteSourceRel?: UniversiteUpdateOneRequiredWithoutPartagesSourceNestedInput
    universiteDestinationRel?: UniversiteUpdateOneRequiredWithoutPartagesDestinationNestedInput
  }

  export type PartageUniversiteUncheckedUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    universiteSource?: StringFieldUpdateOperationsInput | string
    universiteDestination?: StringFieldUpdateOperationsInput | string
    datePartage?: DateTimeFieldUpdateOperationsInput | Date | string
    estActif?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PartageUniversiteUncheckedUpdateManyWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    universiteSource?: StringFieldUpdateOperationsInput | string
    universiteDestination?: StringFieldUpdateOperationsInput | string
    datePartage?: DateTimeFieldUpdateOperationsInput | Date | string
    estActif?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ExemplairePhysiqueUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    cote?: StringFieldUpdateOperationsInput | string
    etat?: EnumEtatExemplaireFieldUpdateOperationsInput | $Enums.EtatExemplaire
    disponible?: BoolFieldUpdateOperationsInput | boolean
    localisation?: StringFieldUpdateOperationsInput | string
    dateAcquisition?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estReservableExterne?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estEmpruntableExterne?: NullableBoolFieldUpdateOperationsInput | boolean | null
    emprunts?: EmpruntUpdateManyWithoutExemplaireNestedInput
  }

  export type ExemplairePhysiqueUncheckedUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    cote?: StringFieldUpdateOperationsInput | string
    etat?: EnumEtatExemplaireFieldUpdateOperationsInput | $Enums.EtatExemplaire
    disponible?: BoolFieldUpdateOperationsInput | boolean
    localisation?: StringFieldUpdateOperationsInput | string
    dateAcquisition?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estReservableExterne?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estEmpruntableExterne?: NullableBoolFieldUpdateOperationsInput | boolean | null
    emprunts?: EmpruntUncheckedUpdateManyWithoutExemplaireNestedInput
  }

  export type ExemplairePhysiqueUncheckedUpdateManyWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    cote?: StringFieldUpdateOperationsInput | string
    etat?: EnumEtatExemplaireFieldUpdateOperationsInput | $Enums.EtatExemplaire
    disponible?: BoolFieldUpdateOperationsInput | boolean
    localisation?: StringFieldUpdateOperationsInput | string
    dateAcquisition?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estReservableExterne?: NullableBoolFieldUpdateOperationsInput | boolean | null
    estEmpruntableExterne?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ReservationUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateReservation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutReservationFieldUpdateOperationsInput | $Enums.StatutReservation
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    motifReservation?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutReservationsNestedInput
    universiteEmprunteurRel?: UniversiteUpdateOneRequiredWithoutReservationsNestedInput
  }

  export type ReservationUncheckedUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    dateReservation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutReservationFieldUpdateOperationsInput | $Enums.StatutReservation
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    universiteEmprunteur?: StringFieldUpdateOperationsInput | string
    motifReservation?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReservationUncheckedUpdateManyWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    dateReservation?: DateTimeFieldUpdateOperationsInput | Date | string
    dateDebut?: DateTimeFieldUpdateOperationsInput | Date | string
    dateFin?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutReservationFieldUpdateOperationsInput | $Enums.StatutReservation
    commentaire?: NullableStringFieldUpdateOperationsInput | string | null
    universiteEmprunteur?: StringFieldUpdateOperationsInput | string
    motifReservation?: NullableStringFieldUpdateOperationsInput | string | null
    validePar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RecommandationUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    dateRecommandation?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    motif?: EnumMotifRecommandationFieldUpdateOperationsInput | $Enums.MotifRecommandation
    estVue?: BoolFieldUpdateOperationsInput | boolean
    estInteruniversitaire?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutRecommandationsNestedInput
    universiteSourceRel?: UniversiteUpdateOneWithoutRecommandationsSourceNestedInput
  }

  export type RecommandationUncheckedUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dateRecommandation?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    motif?: EnumMotifRecommandationFieldUpdateOperationsInput | $Enums.MotifRecommandation
    estVue?: BoolFieldUpdateOperationsInput | boolean
    estInteruniversitaire?: BoolFieldUpdateOperationsInput | boolean
    universiteSource?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RecommandationUncheckedUpdateManyWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dateRecommandation?: DateTimeFieldUpdateOperationsInput | Date | string
    score?: FloatFieldUpdateOperationsInput | number
    motif?: EnumMotifRecommandationFieldUpdateOperationsInput | $Enums.MotifRecommandation
    estVue?: BoolFieldUpdateOperationsInput | boolean
    estInteruniversitaire?: BoolFieldUpdateOperationsInput | boolean
    universiteSource?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DonneesRecommandationUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    score?: FloatFieldUpdateOperationsInput | number
    typeInteraction?: EnumTypeInteractionFieldUpdateOperationsInput | $Enums.TypeInteraction
    dateDonnee?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutDonneesRecommandationNestedInput
  }

  export type DonneesRecommandationUncheckedUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    score?: FloatFieldUpdateOperationsInput | number
    typeInteraction?: EnumTypeInteractionFieldUpdateOperationsInput | $Enums.TypeInteraction
    dateDonnee?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonneesRecommandationUncheckedUpdateManyWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    score?: FloatFieldUpdateOperationsInput | number
    typeInteraction?: EnumTypeInteractionFieldUpdateOperationsInput | $Enums.TypeInteraction
    dateDonnee?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransactionBlockchainUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceBlockchain?: StringFieldUpdateOperationsInput | string
    typeTransaction?: EnumTypeTransactionFieldUpdateOperationsInput | $Enums.TypeTransaction
    dateTransaction?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutTransactionFieldUpdateOperationsInput | $Enums.StatutTransaction
    hashTransaction?: StringFieldUpdateOperationsInput | string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
    universiteOrigineRel?: UniversiteUpdateOneRequiredWithoutTransactionsOrigineNestedInput
    universiteDestinationRel?: UniversiteUpdateOneWithoutTransactionsDestinationNestedInput
  }

  export type TransactionBlockchainUncheckedUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceBlockchain?: StringFieldUpdateOperationsInput | string
    typeTransaction?: EnumTypeTransactionFieldUpdateOperationsInput | $Enums.TypeTransaction
    universiteOrigine?: StringFieldUpdateOperationsInput | string
    universiteDestination?: NullableStringFieldUpdateOperationsInput | string | null
    dateTransaction?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutTransactionFieldUpdateOperationsInput | $Enums.StatutTransaction
    hashTransaction?: StringFieldUpdateOperationsInput | string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TransactionBlockchainUncheckedUpdateManyWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceBlockchain?: StringFieldUpdateOperationsInput | string
    typeTransaction?: EnumTypeTransactionFieldUpdateOperationsInput | $Enums.TypeTransaction
    universiteOrigine?: StringFieldUpdateOperationsInput | string
    universiteDestination?: NullableStringFieldUpdateOperationsInput | string | null
    dateTransaction?: DateTimeFieldUpdateOperationsInput | Date | string
    statut?: EnumStatutTransactionFieldUpdateOperationsInput | $Enums.StatutTransaction
    hashTransaction?: StringFieldUpdateOperationsInput | string
    donneesTechniques?: NullableJsonNullValueInput | InputJsonValue
  }

  export type NotificationUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estLue?: BoolFieldUpdateOperationsInput | boolean
    typeNotification?: EnumTypeNotificationFieldUpdateOperationsInput | $Enums.TypeNotification
    user?: UserUpdateOneRequiredWithoutNotificationNestedInput
  }

  export type NotificationUncheckedUpdateWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estLue?: BoolFieldUpdateOperationsInput | boolean
    typeNotification?: EnumTypeNotificationFieldUpdateOperationsInput | $Enums.TypeNotification
  }

  export type NotificationUncheckedUpdateManyWithoutRessourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    titre?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    dateCreation?: DateTimeFieldUpdateOperationsInput | Date | string
    estLue?: BoolFieldUpdateOperationsInput | boolean
    typeNotification?: EnumTypeNotificationFieldUpdateOperationsInput | $Enums.TypeNotification
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}